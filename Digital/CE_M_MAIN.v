/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module DIG_Counter_Nbit
#(
    parameter Bits = 2
)
(
    output [(Bits-1):0] out,
    output ovf,
    input C,
    input en,
    input clr
);
    reg [(Bits-1):0] count;

    always @ (posedge C) begin
        if (clr)
          count <= 'h0;
        else if (en)
          count <= count + 1'b1;
    end

    assign out = count;
    assign ovf = en? &count : 1'b0;

    initial begin
        count = 'h0;
    end
endmodule

module DIG_BlockRAMDualPort
#(
    parameter Bits = 8,
    parameter AddrBits = 4
)
(
  input [(AddrBits-1):0] A,
  input [(Bits-1):0] Din,
  input str,
  input C,
  output [(Bits-1):0] D
);
  reg [(Bits-1):0] memory[0:((1 << AddrBits) - 1)];
  reg [(Bits-1):0] wData;

  assign D = wData;

  always @ (posedge C) begin
    wData <= memory[A];
    if (str)
      memory[A] <= Din;
  end
endmodule


module DIG_Register_BUS #(
    parameter Bits = 1
)
(
    input C,
    input en,
    input [(Bits - 1):0]D,
    output [(Bits - 1):0]Q
);

    reg [(Bits - 1):0] state = 'h0;

    assign Q = state;

    always @ (posedge C) begin
        if (en)
            state <= D;
   end
endmodule
module DIG_D_FF_1bit
#(
    parameter Default = 0
)
(
   input D,
   input C,
   output Q,
   output \~Q
);
    reg state;

    assign Q = state;
    assign \~Q = ~state;

    always @ (posedge C) begin
        state <= D;
    end

    initial begin
        state = Default;
    end
endmodule


module Mux_2x1_NBits #(
    parameter Bits = 2
)
(
    input [0:0] sel,
    input [(Bits - 1):0] in_0,
    input [(Bits - 1):0] in_1,
    output reg [(Bits - 1):0] out
);
    always @ (*) begin
        case (sel)
            1'h0: out = in_0;
            1'h1: out = in_1;
            default:
                out = 'h0;
        endcase
    end
endmodule


module CE_LFSR (
  input CLK, // Clock
  output [7:0] OUT // Output

);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire s11;
  wire s12;
  wire s13;
  wire s14;
  wire s15;
  wire s16;
  wire s17;
  wire [7:0] s18;
  wire [7:0] s19;
  wire [7:0] s20;
  wire [7:0] s21;
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i0 (
    .D( s0 ),
    .C( CLK ),
    .Q( s1 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i1 (
    .D( s1 ),
    .C( CLK ),
    .Q( s2 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i2 (
    .D( s2 ),
    .C( CLK ),
    .Q( s3 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i3 (
    .D( s3 ),
    .C( CLK ),
    .Q( s4 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i4 (
    .D( s4 ),
    .C( CLK ),
    .Q( s5 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i5 (
    .D( s5 ),
    .C( CLK ),
    .Q( s6 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i6 (
    .D( s6 ),
    .C( CLK ),
    .Q( s7 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i7 (
    .D( s7 ),
    .C( CLK ),
    .Q( s8 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i8 (
    .D( s8 ),
    .C( CLK ),
    .Q( s9 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i9 (
    .D( s9 ),
    .C( CLK ),
    .Q( s10 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i10 (
    .D( s10 ),
    .C( CLK ),
    .Q( s11 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i11 (
    .D( s11 ),
    .C( CLK ),
    .Q( s12 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i12 (
    .D( s12 ),
    .C( CLK ),
    .Q( s13 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i13 (
    .D( s13 ),
    .C( CLK ),
    .Q( s14 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i14 (
    .D( s14 ),
    .C( CLK ),
    .Q( s15 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i15 (
    .D( s15 ),
    .C( CLK ),
    .Q( s16 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i16 (
    .D( s17 ),
    .C( CLK ),
    .Q( s0 )
  );
  assign s17 = (s11 ^ (s12 ^ ~ (s14 ^ s15)));
  assign s21[0] = s0;
  assign s21[1] = s4;
  assign s21[2] = s16;
  assign s21[3] = s10;
  assign s21[4] = s12;
  assign s21[5] = s14;
  assign s21[6] = s5;
  assign s21[7] = s11;
  assign s20[0] = s14;
  assign s20[1] = s6;
  assign s20[2] = s1;
  assign s20[3] = s7;
  assign s20[4] = s8;
  assign s20[5] = s15;
  assign s20[6] = s9;
  assign s20[7] = s2;
  assign s18 = (s20 ^ s21);
  assign s19 = ~ s18;
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i17 (
    .sel( s3 ),
    .in_0( s18 ),
    .in_1( s19 ),
    .out( OUT )
  );
endmodule

module Mux_2x1
(
    input [0:0] sel,
    input in_0,
    input in_1,
    output reg out
);
    always @ (*) begin
        case (sel)
            1'h0: out = in_0;
            1'h1: out = in_1;
            default:
                out = 'h0;
        endcase
    end
endmodule


module DIG_Mul_unsigned #(
    parameter Bits = 1
)
(
    
      input [(Bits-1):0] a,
      input [(Bits-1):0] b,
      output [(Bits*2-1):0] mul
    
);
    assign mul = a * b;
endmodule


module DIG_Div_unsigned (
  input [7:0] a, // a input
  input [7:0] b, // b input
  output [7:0] q,
  output [7:0] r
);
  assign q = a;
  assign r = b;
endmodule
module DIG_ROM_512X17_ALU (
    input [8:0] A,
    input sel,
    output reg [16:0] D
);
    reg [16:0] my_rom [0:511];

    always @ (*) begin
        if (~sel)
            D = 17'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 17'h10801;
        my_rom[1] = 17'h10860;
        my_rom[2] = 17'h600;
        my_rom[3] = 17'h4200;
        my_rom[4] = 17'h860;
        my_rom[5] = 17'h10860;
        my_rom[6] = 17'h10ca0;
        my_rom[7] = 17'h42;
        my_rom[8] = 17'h10801;
        my_rom[9] = 17'h10860;
        my_rom[10] = 17'h10ca0;
        my_rom[11] = 17'h10801;
        my_rom[12] = 17'h860;
        my_rom[13] = 17'h10860;
        my_rom[14] = 17'h10ca0;
        my_rom[15] = 17'h10801;
        my_rom[16] = 17'h10801;
        my_rom[17] = 17'h10860;
        my_rom[18] = 17'h10860;
        my_rom[19] = 17'h10801;
        my_rom[20] = 17'h840;
        my_rom[21] = 17'h10860;
        my_rom[22] = 17'h10ca0;
        my_rom[23] = 17'h42;
        my_rom[24] = 17'h600;
        my_rom[25] = 17'h10860;
        my_rom[26] = 17'h10802;
        my_rom[27] = 17'h10802;
        my_rom[28] = 17'h840;
        my_rom[29] = 17'h10860;
        my_rom[30] = 17'h10ca0;
        my_rom[31] = 17'h10801;
        my_rom[32] = 17'h10801;
        my_rom[33] = 17'h10820;
        my_rom[34] = 17'h10801;
        my_rom[35] = 17'h10801;
        my_rom[36] = 17'h18801;
        my_rom[37] = 17'h10820;
        my_rom[38] = 17'h10d00;
        my_rom[39] = 17'h42;
        my_rom[40] = 17'h1bc00;
        my_rom[41] = 17'h10820;
        my_rom[42] = 17'h10d00;
        my_rom[43] = 17'h10801;
        my_rom[44] = 17'h18801;
        my_rom[45] = 17'h10820;
        my_rom[46] = 17'h10d00;
        my_rom[47] = 17'h10801;
        my_rom[48] = 17'h10801;
        my_rom[49] = 17'h10820;
        my_rom[50] = 17'h10820;
        my_rom[51] = 17'h10801;
        my_rom[52] = 17'h18801;
        my_rom[53] = 17'h10820;
        my_rom[54] = 17'h10d00;
        my_rom[55] = 17'h42;
        my_rom[56] = 17'h601;
        my_rom[57] = 17'h10820;
        my_rom[58] = 17'h10806;
        my_rom[59] = 17'h10806;
        my_rom[60] = 17'h18801;
        my_rom[61] = 17'h10820;
        my_rom[62] = 17'h10d00;
        my_rom[63] = 17'h10801;
        my_rom[64] = 17'h1bc00;
        my_rom[65] = 17'h10880;
        my_rom[66] = 17'h10801;
        my_rom[67] = 17'h10cc0;
        my_rom[68] = 17'h10cc0;
        my_rom[69] = 17'h10880;
        my_rom[70] = 17'h10ce0;
        my_rom[71] = 17'h42;
        my_rom[72] = 17'h10801;
        my_rom[73] = 17'h10880;
        my_rom[74] = 17'h10ce0;
        my_rom[75] = 17'h10801;
        my_rom[76] = 17'h10801;
        my_rom[77] = 17'h10880;
        my_rom[78] = 17'h10ce0;
        my_rom[79] = 17'h10801;
        my_rom[80] = 17'h10801;
        my_rom[81] = 17'h10880;
        my_rom[82] = 17'h10880;
        my_rom[83] = 17'h10801;
        my_rom[84] = 17'h10cc0;
        my_rom[85] = 17'h10880;
        my_rom[86] = 17'h10ce0;
        my_rom[87] = 17'h42;
        my_rom[88] = 17'h1201;
        my_rom[89] = 17'h10880;
        my_rom[90] = 17'h10801;
        my_rom[91] = 17'h10801;
        my_rom[92] = 17'h10801;
        my_rom[93] = 17'h10880;
        my_rom[94] = 17'h10ce0;
        my_rom[95] = 17'h10801;
        my_rom[96] = 17'h10801;
        my_rom[97] = 17'h10c08;
        my_rom[98] = 17'h10801;
        my_rom[99] = 17'h10801;
        my_rom[100] = 17'h10801;
        my_rom[101] = 17'h10c08;
        my_rom[102] = 17'h10d20;
        my_rom[103] = 17'h42;
        my_rom[104] = 17'h10801;
        my_rom[105] = 17'h10c08;
        my_rom[106] = 17'h10d20;
        my_rom[107] = 17'h10801;
        my_rom[108] = 17'h10801;
        my_rom[109] = 17'h10c08;
        my_rom[110] = 17'h10d20;
        my_rom[111] = 17'h10801;
        my_rom[112] = 17'h10801;
        my_rom[113] = 17'h10c08;
        my_rom[114] = 17'h10c08;
        my_rom[115] = 17'h10801;
        my_rom[116] = 17'h10801;
        my_rom[117] = 17'h10c08;
        my_rom[118] = 17'h10d20;
        my_rom[119] = 17'h42;
        my_rom[120] = 17'h1200;
        my_rom[121] = 17'h10c08;
        my_rom[122] = 17'h10801;
        my_rom[123] = 17'h10801;
        my_rom[124] = 17'h10801;
        my_rom[125] = 17'h10c08;
        my_rom[126] = 17'h10d20;
        my_rom[127] = 17'h10801;
        my_rom[128] = 17'h10801;
        my_rom[129] = 17'h10801;
        my_rom[130] = 17'h10801;
        my_rom[131] = 17'h10801;
        my_rom[132] = 17'h10801;
        my_rom[133] = 17'h10801;
        my_rom[134] = 17'h10801;
        my_rom[135] = 17'h62;
        my_rom[136] = 17'h10806;
        my_rom[137] = 17'h18801;
        my_rom[138] = 17'h10801;
        my_rom[139] = 17'h10801;
        my_rom[140] = 17'h10801;
        my_rom[141] = 17'h10801;
        my_rom[142] = 17'h10801;
        my_rom[143] = 17'h10801;
        my_rom[144] = 17'h10801;
        my_rom[145] = 17'h10801;
        my_rom[146] = 17'h10801;
        my_rom[147] = 17'h10801;
        my_rom[148] = 17'h10801;
        my_rom[149] = 17'h10801;
        my_rom[150] = 17'h10801;
        my_rom[151] = 17'h62;
        my_rom[152] = 17'h10801;
        my_rom[153] = 17'h10801;
        my_rom[154] = 17'h10801;
        my_rom[155] = 17'h10801;
        my_rom[156] = 17'h10801;
        my_rom[157] = 17'h10801;
        my_rom[158] = 17'h10801;
        my_rom[159] = 17'h10801;
        my_rom[160] = 17'h10801;
        my_rom[161] = 17'h10801;
        my_rom[162] = 17'h10801;
        my_rom[163] = 17'h10801;
        my_rom[164] = 17'h10801;
        my_rom[165] = 17'h10801;
        my_rom[166] = 17'h10801;
        my_rom[167] = 17'h62;
        my_rom[168] = 17'h10801;
        my_rom[169] = 17'h10801;
        my_rom[170] = 17'h10801;
        my_rom[171] = 17'h10801;
        my_rom[172] = 17'h10801;
        my_rom[173] = 17'h10801;
        my_rom[174] = 17'h10801;
        my_rom[175] = 17'h10801;
        my_rom[176] = 17'h10801;
        my_rom[177] = 17'h10801;
        my_rom[178] = 17'h10801;
        my_rom[179] = 17'h10801;
        my_rom[180] = 17'h10801;
        my_rom[181] = 17'h10801;
        my_rom[182] = 17'h10801;
        my_rom[183] = 17'h62;
        my_rom[184] = 17'h8200;
        my_rom[185] = 17'h10801;
        my_rom[186] = 17'h10801;
        my_rom[187] = 17'h10801;
        my_rom[188] = 17'h10801;
        my_rom[189] = 17'h10801;
        my_rom[190] = 17'h10801;
        my_rom[191] = 17'h10801;
        my_rom[192] = 17'h10c04;
        my_rom[193] = 17'h10c04;
        my_rom[194] = 17'h10c04;
        my_rom[195] = 17'h10816;
        my_rom[196] = 17'h10c04;
        my_rom[197] = 17'h10c04;
        my_rom[198] = 17'h10806;
        my_rom[199] = 17'h62;
        my_rom[200] = 17'h10802;
        my_rom[201] = 17'h10c04;
        my_rom[202] = 17'h10806;
        my_rom[203] = 17'h10ca4;
        my_rom[204] = 17'h10c04;
        my_rom[205] = 17'h10c04;
        my_rom[206] = 17'h10806;
        my_rom[207] = 17'h10801;
        my_rom[208] = 17'h10801;
        my_rom[209] = 17'h10c04;
        my_rom[210] = 17'h10c04;
        my_rom[211] = 17'h10801;
        my_rom[212] = 17'h10c04;
        my_rom[213] = 17'h10c04;
        my_rom[214] = 17'h10806;
        my_rom[215] = 17'h62;
        my_rom[216] = 17'h2200;
        my_rom[217] = 17'h10c04;
        my_rom[218] = 17'h10801;
        my_rom[219] = 17'h10801;
        my_rom[220] = 17'h10c04;
        my_rom[221] = 17'h10c04;
        my_rom[222] = 17'h10806;
        my_rom[223] = 17'h10801;
        my_rom[224] = 17'h10c04;
        my_rom[225] = 17'h10c0c;
        my_rom[226] = 17'h10801;
        my_rom[227] = 17'h10812;
        my_rom[228] = 17'h10c04;
        my_rom[229] = 17'h10c0c;
        my_rom[230] = 17'h10802;
        my_rom[231] = 17'h62;
        my_rom[232] = 17'h10802;
        my_rom[233] = 17'h10c0c;
        my_rom[234] = 17'h10801;
        my_rom[235] = 17'h10d04;
        my_rom[236] = 17'h10c04;
        my_rom[237] = 17'h10c0c;
        my_rom[238] = 17'h10802;
        my_rom[239] = 17'h10801;
        my_rom[240] = 17'h10801;
        my_rom[241] = 17'h10c0c;
        my_rom[242] = 17'h10c0c;
        my_rom[243] = 17'h10801;
        my_rom[244] = 17'h10801;
        my_rom[245] = 17'h10c0c;
        my_rom[246] = 17'h10802;
        my_rom[247] = 17'h62;
        my_rom[248] = 17'h2201;
        my_rom[249] = 17'h10c0c;
        my_rom[250] = 17'h10801;
        my_rom[251] = 17'h10801;
        my_rom[252] = 17'h10801;
        my_rom[253] = 17'h10c0c;
        my_rom[254] = 17'h10802;
        my_rom[255] = 17'h10801;
        my_rom[256] = 17'h10801;
        my_rom[257] = 17'h10801;
        my_rom[258] = 17'h10801;
        my_rom[259] = 17'h10801;
        my_rom[260] = 17'h10801;
        my_rom[261] = 17'h10d40;
        my_rom[262] = 17'h10801;
        my_rom[263] = 17'h10801;
        my_rom[264] = 17'h10801;
        my_rom[265] = 17'h10d40;
        my_rom[266] = 17'h10801;
        my_rom[267] = 17'h10801;
        my_rom[268] = 17'h10801;
        my_rom[269] = 17'h10d40;
        my_rom[270] = 17'h10801;
        my_rom[271] = 17'h10801;
        my_rom[272] = 17'h10801;
        my_rom[273] = 17'h10801;
        my_rom[274] = 17'h10801;
        my_rom[275] = 17'h10801;
        my_rom[276] = 17'h10801;
        my_rom[277] = 17'h10d40;
        my_rom[278] = 17'h10801;
        my_rom[279] = 17'h10801;
        my_rom[280] = 17'h10801;
        my_rom[281] = 17'h10d40;
        my_rom[282] = 17'h10801;
        my_rom[283] = 17'h10801;
        my_rom[284] = 17'h10801;
        my_rom[285] = 17'h10d40;
        my_rom[286] = 17'h10801;
        my_rom[287] = 17'h10801;
        my_rom[288] = 17'h10801;
        my_rom[289] = 17'h10801;
        my_rom[290] = 17'h10801;
        my_rom[291] = 17'h10801;
        my_rom[292] = 17'h10801;
        my_rom[293] = 17'h10d60;
        my_rom[294] = 17'h10801;
        my_rom[295] = 17'h10801;
        my_rom[296] = 17'h10801;
        my_rom[297] = 17'h10d60;
        my_rom[298] = 17'h10801;
        my_rom[299] = 17'h10801;
        my_rom[300] = 17'h10801;
        my_rom[301] = 17'h10d60;
        my_rom[302] = 17'h10801;
        my_rom[303] = 17'h10801;
        my_rom[304] = 17'h10801;
        my_rom[305] = 17'h10801;
        my_rom[306] = 17'h10801;
        my_rom[307] = 17'h10801;
        my_rom[308] = 17'h10801;
        my_rom[309] = 17'h10d60;
        my_rom[310] = 17'h10801;
        my_rom[311] = 17'h10801;
        my_rom[312] = 17'h10801;
        my_rom[313] = 17'h10d60;
        my_rom[314] = 17'h10801;
        my_rom[315] = 17'h10801;
        my_rom[316] = 17'h10801;
        my_rom[317] = 17'h10d60;
        my_rom[318] = 17'h10801;
        my_rom[319] = 17'h10801;
        my_rom[320] = 17'h10801;
        my_rom[321] = 17'h10801;
        my_rom[322] = 17'h10801;
        my_rom[323] = 17'h10801;
        my_rom[324] = 17'h10801;
        my_rom[325] = 17'h10da0;
        my_rom[326] = 17'h10801;
        my_rom[327] = 17'h10801;
        my_rom[328] = 17'h10801;
        my_rom[329] = 17'h10da0;
        my_rom[330] = 17'h10801;
        my_rom[331] = 17'h10801;
        my_rom[332] = 17'h10801;
        my_rom[333] = 17'h10da0;
        my_rom[334] = 17'h10801;
        my_rom[335] = 17'h10801;
        my_rom[336] = 17'h10801;
        my_rom[337] = 17'h10801;
        my_rom[338] = 17'h10801;
        my_rom[339] = 17'h10801;
        my_rom[340] = 17'h10801;
        my_rom[341] = 17'h10da0;
        my_rom[342] = 17'h10801;
        my_rom[343] = 17'h10801;
        my_rom[344] = 17'h10801;
        my_rom[345] = 17'h10da0;
        my_rom[346] = 17'h10801;
        my_rom[347] = 17'h10801;
        my_rom[348] = 17'h10801;
        my_rom[349] = 17'h10da0;
        my_rom[350] = 17'h10801;
        my_rom[351] = 17'h10801;
        my_rom[352] = 17'h10801;
        my_rom[353] = 17'h10801;
        my_rom[354] = 17'h10801;
        my_rom[355] = 17'h10801;
        my_rom[356] = 17'h10801;
        my_rom[357] = 17'h10d80;
        my_rom[358] = 17'h10801;
        my_rom[359] = 17'h10801;
        my_rom[360] = 17'h10801;
        my_rom[361] = 17'h10d80;
        my_rom[362] = 17'h10801;
        my_rom[363] = 17'h10801;
        my_rom[364] = 17'h10801;
        my_rom[365] = 17'h10d80;
        my_rom[366] = 17'h10801;
        my_rom[367] = 17'h10801;
        my_rom[368] = 17'h10801;
        my_rom[369] = 17'h10801;
        my_rom[370] = 17'h10801;
        my_rom[371] = 17'h10801;
        my_rom[372] = 17'h10801;
        my_rom[373] = 17'h10d80;
        my_rom[374] = 17'h10801;
        my_rom[375] = 17'h10801;
        my_rom[376] = 17'h10801;
        my_rom[377] = 17'h10d80;
        my_rom[378] = 17'h10801;
        my_rom[379] = 17'h10801;
        my_rom[380] = 17'h10801;
        my_rom[381] = 17'h10d80;
        my_rom[382] = 17'h10801;
        my_rom[383] = 17'h10801;
        my_rom[384] = 17'h10801;
        my_rom[385] = 17'h10801;
        my_rom[386] = 17'h10801;
        my_rom[387] = 17'h10801;
        my_rom[388] = 17'h10801;
        my_rom[389] = 17'h10801;
        my_rom[390] = 17'h10801;
        my_rom[391] = 17'h10801;
        my_rom[392] = 17'h10801;
        my_rom[393] = 17'h10801;
        my_rom[394] = 17'h10801;
        my_rom[395] = 17'h10801;
        my_rom[396] = 17'h10801;
        my_rom[397] = 17'h10801;
        my_rom[398] = 17'h10801;
        my_rom[399] = 17'h10801;
        my_rom[400] = 17'h10801;
        my_rom[401] = 17'h10801;
        my_rom[402] = 17'h10801;
        my_rom[403] = 17'h10801;
        my_rom[404] = 17'h10801;
        my_rom[405] = 17'h10801;
        my_rom[406] = 17'h10801;
        my_rom[407] = 17'h10801;
        my_rom[408] = 17'h10801;
        my_rom[409] = 17'h10801;
        my_rom[410] = 17'h10801;
        my_rom[411] = 17'h10801;
        my_rom[412] = 17'h10801;
        my_rom[413] = 17'h10801;
        my_rom[414] = 17'h10801;
        my_rom[415] = 17'h10801;
        my_rom[416] = 17'h10801;
        my_rom[417] = 17'h10801;
        my_rom[418] = 17'h10801;
        my_rom[419] = 17'h10801;
        my_rom[420] = 17'h10801;
        my_rom[421] = 17'h10801;
        my_rom[422] = 17'h10801;
        my_rom[423] = 17'h10801;
        my_rom[424] = 17'h10801;
        my_rom[425] = 17'h10801;
        my_rom[426] = 17'h10801;
        my_rom[427] = 17'h10801;
        my_rom[428] = 17'h10801;
        my_rom[429] = 17'h10801;
        my_rom[430] = 17'h10801;
        my_rom[431] = 17'h10801;
        my_rom[432] = 17'h10801;
        my_rom[433] = 17'h10801;
        my_rom[434] = 17'h10801;
        my_rom[435] = 17'h10801;
        my_rom[436] = 17'h10801;
        my_rom[437] = 17'h10801;
        my_rom[438] = 17'h10801;
        my_rom[439] = 17'h10801;
        my_rom[440] = 17'h10801;
        my_rom[441] = 17'h10801;
        my_rom[442] = 17'h10801;
        my_rom[443] = 17'h10801;
        my_rom[444] = 17'h10801;
        my_rom[445] = 17'h10801;
        my_rom[446] = 17'h10801;
        my_rom[447] = 17'h10801;
        my_rom[448] = 17'h10801;
        my_rom[449] = 17'h10801;
        my_rom[450] = 17'h10801;
        my_rom[451] = 17'h10801;
        my_rom[452] = 17'h10801;
        my_rom[453] = 17'h10801;
        my_rom[454] = 17'h10c0e;
        my_rom[455] = 17'h10801;
        my_rom[456] = 17'h10de0;
        my_rom[457] = 17'h10801;
        my_rom[458] = 17'h10ce4;
        my_rom[459] = 17'h10cc4;
        my_rom[460] = 17'h10801;
        my_rom[461] = 17'h10801;
        my_rom[462] = 17'h10c0e;
        my_rom[463] = 17'h10801;
        my_rom[464] = 17'h10801;
        my_rom[465] = 17'h10801;
        my_rom[466] = 17'h10801;
        my_rom[467] = 17'h10801;
        my_rom[468] = 17'h10801;
        my_rom[469] = 17'h10801;
        my_rom[470] = 17'h10c0e;
        my_rom[471] = 17'h10801;
        my_rom[472] = 17'h10801;
        my_rom[473] = 17'h10801;
        my_rom[474] = 17'h10801;
        my_rom[475] = 17'h10801;
        my_rom[476] = 17'h10801;
        my_rom[477] = 17'h10801;
        my_rom[478] = 17'h10c0e;
        my_rom[479] = 17'h10801;
        my_rom[480] = 17'h10801;
        my_rom[481] = 17'h10801;
        my_rom[482] = 17'h10801;
        my_rom[483] = 17'h10801;
        my_rom[484] = 17'h10801;
        my_rom[485] = 17'h10801;
        my_rom[486] = 17'h10c0a;
        my_rom[487] = 17'h10801;
        my_rom[488] = 17'h10dc0;
        my_rom[489] = 17'h10801;
        my_rom[490] = 17'h10801;
        my_rom[491] = 17'h10d24;
        my_rom[492] = 17'h10801;
        my_rom[493] = 17'h10801;
        my_rom[494] = 17'h10c0a;
        my_rom[495] = 17'h10801;
        my_rom[496] = 17'h10801;
        my_rom[497] = 17'h10801;
        my_rom[498] = 17'h10801;
        my_rom[499] = 17'h10801;
        my_rom[500] = 17'h10801;
        my_rom[501] = 17'h10801;
        my_rom[502] = 17'h10c0a;
        my_rom[503] = 17'h10801;
        my_rom[504] = 17'h10801;
        my_rom[505] = 17'h10801;
        my_rom[506] = 17'h10801;
        my_rom[507] = 17'h10801;
        my_rom[508] = 17'h10801;
        my_rom[509] = 17'h10801;
        my_rom[510] = 17'h10c0a;
        my_rom[511] = 17'h10801;
    end
endmodule


module CompUnsigned #(
    parameter Bits = 1
)
(
    input [(Bits -1):0] a,
    input [(Bits -1):0] b,
    output \> ,
    output \= ,
    output \<
);
    assign \> = a > b;
    assign \= = a == b;
    assign \< = a < b;
endmodule

module DIG_Add
#(
    parameter Bits = 1
)
(
    input [(Bits-1):0] a,
    input [(Bits-1):0] b,
    input c_i,
    output [(Bits - 1):0] s,
    output c_o
);
   wire [Bits:0] temp;

   assign temp = a + b + c_i;
   assign s = temp [(Bits-1):0];
   assign c_o = temp[Bits];
endmodule



module CE_CBH (
  input [7:0] I, // Input
  output [7:0] Q, // Output
  output C_O // Carry Output

);
  wire [3:0] s0;
  wire [3:0] s1;
  wire s2;
  wire [3:0] s3;
  wire s4;
  wire [7:0] s5;
  wire [7:0] s6;
  wire [7:0] s7;
  wire [7:0] s8;
  assign s8[3:0] = I[3:0];
  assign s8[7:4] = 4'b0;
  assign s0 = I[7:4];
  assign s1 = I[3:0];
  assign s3 = I[7:4];
  CompUnsigned #(
    .Bits(4)
  )
  CompUnsigned_i0 (
    .a( 4'b1001 ),
    .b( s1 ),
    .\< ( s2 )
  );
  CompUnsigned #(
    .Bits(4)
  )
  CompUnsigned_i1 (
    .a( s3 ),
    .b( 4'b1001 ),
    .\> ( s4 )
  );
  assign s5[0] = 1'b0;
  assign s5[4:1] = s0;
  assign s5[7:5] = 3'b0;
  assign s6[2:0] = 3'b0;
  assign s6[6:3] = s0;
  assign s6[7] = 1'b0;
  assign C_O = (s2 | s4);
  DIG_Add #(
    .Bits(8)
  )
  DIG_Add_i2 (
    .a( s5 ),
    .b( s6 ),
    .c_i( 1'b0 ),
    .s( s7 )
  );
  DIG_Add #(
    .Bits(8)
  )
  DIG_Add_i3 (
    .a( s8 ),
    .b( s7 ),
    .c_i( 1'b0 ),
    .s( Q )
  );
endmodule

module CE_4t5 (
  input N_0,
  input N_1,
  input N_2,
  input N_3,
  output O_0,
  output O_1,
  output O_2,
  output O_3,
  output O_4
);
  wire O_3_temp;
  wire O_4_temp;
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  assign s0 = (N_0 | N_1);
  assign s1 = ~ (N_1 ^ N_0);
  assign s5 = ~ (N_2 ^ N_1);
  assign O_4_temp = ((N_1 | N_2) & N_3);
  assign s2 = (O_4_temp ^ N_1);
  Mux_2x1 Mux_2x1_i0 (
    .sel( O_4_temp ),
    .in_0( N_2 ),
    .in_1( s5 ),
    .out( s3 )
  );
  assign O_3_temp = ((N_3 | (s0 & N_2)) ^ O_4_temp);
  assign O_0 = (O_3_temp ^ N_0);
  assign s4 = (s3 ^ s0);
  Mux_2x1 Mux_2x1_i1 (
    .sel( O_3_temp ),
    .in_0( s2 ),
    .in_1( s1 ),
    .out( O_1 )
  );
  Mux_2x1 Mux_2x1_i2 (
    .sel( O_3_temp ),
    .in_0( s3 ),
    .in_1( s4 ),
    .out( O_2 )
  );
  assign O_3 = O_3_temp;
  assign O_4 = O_4_temp;
endmodule

module CE_5t5 (
  input N_0,
  input N_1,
  input N_2,
  input N_3,
  input N_4,
  output O_0,
  output O_1,
  output O_2,
  output O_3,
  output O_4
);
  wire O_3_temp;
  wire O_4_temp;
  wire s0;
  wire s1;
  wire s2;
  wire S;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire s11;
  assign s2 = (N_0 | N_1);
  assign O_4_temp = (((N_1 | N_2) & N_3) | N_4);
  assign s3 = ~ (N_1 ^ N_0);
  assign s4 = ~ (N_2 ^ N_1);
  assign s0 = (N_0 & N_1);
  assign s1 = ((s0 & N_2) & N_3);
  assign s5 = ~ s3;
  Mux_2x1 Mux_2x1_i0 (
    .sel( O_4_temp ),
    .in_0( N_2 ),
    .in_1( s4 ),
    .out( s8 )
  );
  assign s7 = (O_4_temp ^ N_1);
  assign s11 = (N_2 ^ s0);
  assign s9 = (N_2 ^ s2);
  assign S = (s1 | N_4);
  assign O_3_temp = (s1 | (((s2 & N_2) | N_3) ^ O_4_temp));
  Mux_2x1 Mux_2x1_i1 (
    .sel( O_3_temp ),
    .in_0( s7 ),
    .in_1( s3 ),
    .out( s6 )
  );
  Mux_2x1 Mux_2x1_i2 (
    .sel( O_3_temp ),
    .in_0( s8 ),
    .in_1( s9 ),
    .out( s10 )
  );
  assign O_0 = (O_3_temp ^ N_0);
  Mux_2x1 Mux_2x1_i3 (
    .sel( S ),
    .in_0( s6 ),
    .in_1( s5 ),
    .out( O_1 )
  );
  Mux_2x1 Mux_2x1_i4 (
    .sel( S ),
    .in_0( s10 ),
    .in_1( s11 ),
    .out( O_2 )
  );
  assign O_3 = O_3_temp;
  assign O_4 = O_4_temp;
endmodule

module CE_CHB (
  input [7:0] I, // Input
  output [7:0] Q, // Output
  output C_O // Carry Output

);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire s11;
  wire s12;
  wire s13;
  wire s14;
  wire s15;
  CompUnsigned #(
    .Bits(8)
  )
  CompUnsigned_i0 (
    .a( 8'b1100011 ),
    .b( I ),
    .\< ( C_O )
  );
  assign s0 = I[1];
  assign s1 = I[2];
  assign s2 = I[3];
  assign s3 = I[4];
  assign s4 = I[5];
  assign s5 = I[6];
  CE_4t5 CE_4t5_i1 (
    .N_0( s2 ),
    .N_1( s3 ),
    .N_2( s4 ),
    .N_3( s5 ),
    .O_0( s13 ),
    .O_1( s14 ),
    .O_2( s15 ),
    .O_3( s11 ),
    .O_4( s12 )
  );
  CE_5t5 CE_5t5_i2 (
    .N_0( s0 ),
    .N_1( s1 ),
    .N_2( s13 ),
    .N_3( s14 ),
    .N_4( s15 ),
    .O_0( s6 ),
    .O_1( s7 ),
    .O_2( s8 ),
    .O_3( s9 ),
    .O_4( s10 )
  );
  assign Q[0] = I[0];
  assign Q[1] = s6;
  assign Q[2] = s7;
  assign Q[3] = s8;
  assign Q[4] = s9;
  assign Q[5] = s10;
  assign Q[6] = s11;
  assign Q[7] = s12;
endmodule

module Decoder3 (
    output out_0,
    output out_1,
    output out_2,
    output out_3,
    output out_4,
    output out_5,
    output out_6,
    output out_7,
    input [2:0] sel
);
    assign out_0 = (sel == 3'h0)? 1'b1 : 1'b0;
    assign out_1 = (sel == 3'h1)? 1'b1 : 1'b0;
    assign out_2 = (sel == 3'h2)? 1'b1 : 1'b0;
    assign out_3 = (sel == 3'h3)? 1'b1 : 1'b0;
    assign out_4 = (sel == 3'h4)? 1'b1 : 1'b0;
    assign out_5 = (sel == 3'h5)? 1'b1 : 1'b0;
    assign out_6 = (sel == 3'h6)? 1'b1 : 1'b0;
    assign out_7 = (sel == 3'h7)? 1'b1 : 1'b0;
endmodule

module PriorityEncoder3 (
    input in0,
    input in1,
    input in2,
    input in3,
    input in4,
    input in5,
    input in6,
    input in7,
    output reg [2:0] num,
    output any
);
    always @ (*) begin
        if (in7 == 1'b1)
            num = 3'h7;
        else if (in6 == 1'b1)
            num = 3'h6;
        else if (in5 == 1'b1)
            num = 3'h5;
        else if (in4 == 1'b1)
            num = 3'h4;
        else if (in3 == 1'b1)
            num = 3'h3;
        else if (in2 == 1'b1)
            num = 3'h2;
        else if (in1 == 1'b1)
            num = 3'h1;
        else 
            num = 3'h0;
    end

    assign any = in0 | in1 | in2 | in3 | in4 | in5 | in6 | in7;
endmodule


module CE_NZ (
  input [7:0] IN, // Input
  output Q // Output

);
  assign Q = (IN[0] | IN[1] | IN[2] | IN[3] | IN[4] | IN[5] | IN[6] | IN[7]);
endmodule

module CE_ASR (
  input [15:0] IN, // Input
  input SEL, // 8/16 bit Select
  output C_o, // Carry Out
  output [7:0] Q, // Output Low
  output [7:0] QH // Output High

);
  wire [7:0] Q_temp;
  wire [7:0] QH_temp;
  wire s0;
  wire s1;
  wire s2;
  wire [6:0] s3;
  wire [6:0] s4;
  wire [15:0] s5;
  assign C_o = IN[0];
  assign s3 = IN[7:1];
  assign s1 = IN[8];
  assign s4 = IN[15:9];
  assign QH_temp[6:0] = s4;
  assign QH_temp[7] = s4[6];
  assign s0 = s3[6];
  Mux_2x1 Mux_2x1_i0 (
    .sel( SEL ),
    .in_0( s0 ),
    .in_1( s1 ),
    .out( s2 )
  );
  assign Q_temp[6:0] = s3;
  assign Q_temp[7] = s2;
  assign s5[7:0] = Q_temp;
  assign s5[15:8] = QH_temp;
  assign Q = Q_temp;
  assign QH = QH_temp;
endmodule

module CE_DFF (
  input C,
  input D, // Data In
  input E, // Enable
  input R, // Reset
  output Q, // Output
  output nQ // Inverted Output

);
  wire Q_temp;
  wire s0;
  wire s1;
  wire s2;
  assign s1 = (E | R);
  Mux_2x1 Mux_2x1_i0 (
    .sel( R ),
    .in_0( D ),
    .in_1( 1'b0 ),
    .out( s2 )
  );
  Mux_2x1 Mux_2x1_i1 (
    .sel( s1 ),
    .in_0( Q_temp ),
    .in_1( s2 ),
    .out( s0 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i2 (
    .D( s0 ),
    .C( C ),
    .Q( Q_temp ),
    .\~Q ( nQ )
  );
  assign Q = Q_temp;
endmodule

module Mux_4x1
(
    input [1:0] sel,
    input in_0,
    input in_1,
    input in_2,
    input in_3,
    output reg out
);
    always @ (*) begin
        case (sel)
            2'h0: out = in_0;
            2'h1: out = in_1;
            2'h2: out = in_2;
            2'h3: out = in_3;
            default:
                out = 'h0;
        endcase
    end
endmodule


module Mux_16x1_NBits #(
    parameter Bits = 2
)
(
    input [3:0] sel,
    input [(Bits - 1):0] in_0,
    input [(Bits - 1):0] in_1,
    input [(Bits - 1):0] in_2,
    input [(Bits - 1):0] in_3,
    input [(Bits - 1):0] in_4,
    input [(Bits - 1):0] in_5,
    input [(Bits - 1):0] in_6,
    input [(Bits - 1):0] in_7,
    input [(Bits - 1):0] in_8,
    input [(Bits - 1):0] in_9,
    input [(Bits - 1):0] in_10,
    input [(Bits - 1):0] in_11,
    input [(Bits - 1):0] in_12,
    input [(Bits - 1):0] in_13,
    input [(Bits - 1):0] in_14,
    input [(Bits - 1):0] in_15,
    output reg [(Bits - 1):0] out
);
    always @ (*) begin
        case (sel)
            4'h0: out = in_0;
            4'h1: out = in_1;
            4'h2: out = in_2;
            4'h3: out = in_3;
            4'h4: out = in_4;
            4'h5: out = in_5;
            4'h6: out = in_6;
            4'h7: out = in_7;
            4'h8: out = in_8;
            4'h9: out = in_9;
            4'ha: out = in_10;
            4'hb: out = in_11;
            4'hc: out = in_12;
            4'hd: out = in_13;
            4'he: out = in_14;
            4'hf: out = in_15;
            default:
                out = 'h0;
        endcase
    end
endmodule


module Mux_16x1
(
    input [3:0] sel,
    input in_0,
    input in_1,
    input in_2,
    input in_3,
    input in_4,
    input in_5,
    input in_6,
    input in_7,
    input in_8,
    input in_9,
    input in_10,
    input in_11,
    input in_12,
    input in_13,
    input in_14,
    input in_15,
    output reg out
);
    always @ (*) begin
        case (sel)
            4'h0: out = in_0;
            4'h1: out = in_1;
            4'h2: out = in_2;
            4'h3: out = in_3;
            4'h4: out = in_4;
            4'h5: out = in_5;
            4'h6: out = in_6;
            4'h7: out = in_7;
            4'h8: out = in_8;
            4'h9: out = in_9;
            4'ha: out = in_10;
            4'hb: out = in_11;
            4'hc: out = in_12;
            4'hd: out = in_13;
            4'he: out = in_14;
            4'hf: out = in_15;
            default:
                out = 'h0;
        endcase
    end
endmodule


module Mux_8x1_NBits #(
    parameter Bits = 2
)
(
    input [2:0] sel,
    input [(Bits - 1):0] in_0,
    input [(Bits - 1):0] in_1,
    input [(Bits - 1):0] in_2,
    input [(Bits - 1):0] in_3,
    input [(Bits - 1):0] in_4,
    input [(Bits - 1):0] in_5,
    input [(Bits - 1):0] in_6,
    input [(Bits - 1):0] in_7,
    output reg [(Bits - 1):0] out
);
    always @ (*) begin
        case (sel)
            3'h0: out = in_0;
            3'h1: out = in_1;
            3'h2: out = in_2;
            3'h3: out = in_3;
            3'h4: out = in_4;
            3'h5: out = in_5;
            3'h6: out = in_6;
            3'h7: out = in_7;
            default:
                out = 'h0;
        endcase
    end
endmodule

module DIG_BitExtenderSingle #(
    parameter outputBits = 2
)
(
    input in,
    output [(outputBits - 1):0] out
);
    assign out = {outputBits{in}};
endmodule




module Mux_4x1_NBits #(
    parameter Bits = 2
)
(
    input [1:0] sel,
    input [(Bits - 1):0] in_0,
    input [(Bits - 1):0] in_1,
    input [(Bits - 1):0] in_2,
    input [(Bits - 1):0] in_3,
    output reg [(Bits - 1):0] out
);
    always @ (*) begin
        case (sel)
            2'h0: out = in_0;
            2'h1: out = in_1;
            2'h2: out = in_2;
            2'h3: out = in_3;
            default:
                out = 'h0;
        endcase
    end
endmodule


module Mux_8x1
(
    input [2:0] sel,
    input in_0,
    input in_1,
    input in_2,
    input in_3,
    input in_4,
    input in_5,
    input in_6,
    input in_7,
    output reg out
);
    always @ (*) begin
        case (sel)
            3'h0: out = in_0;
            3'h1: out = in_1;
            3'h2: out = in_2;
            3'h3: out = in_3;
            3'h4: out = in_4;
            3'h5: out = in_5;
            3'h6: out = in_6;
            3'h7: out = in_7;
            default:
                out = 'h0;
        endcase
    end
endmodule

module LUT_9s_CL (
    input \0 ,
    input \1 ,
    input \2 ,
    input \3 ,
    output reg  [3:0]  out
);
    reg [3:0] my_lut [0:15];
    wire [3:0] temp;
    assign temp = {\3 , \2 , \1 , \0 };

    always @ (*) begin
       out = my_lut[temp];
    end

    initial begin
        my_lut[0] = 4'h9;
        my_lut[1] = 4'h8;
        my_lut[2] = 4'h7;
        my_lut[3] = 4'h6;
        my_lut[4] = 4'h5;
        my_lut[5] = 4'h4;
        my_lut[6] = 4'h3;
        my_lut[7] = 4'h2;
        my_lut[8] = 4'h1;
        my_lut[9] = 4'h0;
        my_lut[10] = 4'h0;
        my_lut[11] = 4'h0;
        my_lut[12] = 4'h0;
        my_lut[13] = 4'h0;
        my_lut[14] = 4'h0;
        my_lut[15] = 4'h0;
    end
endmodule

module LUT_9s_CH (
    input \0 ,
    input \1 ,
    input \2 ,
    input \3 ,
    output reg  [3:0]  out
);
    reg [3:0] my_lut [0:15];
    wire [3:0] temp;
    assign temp = {\3 , \2 , \1 , \0 };

    always @ (*) begin
       out = my_lut[temp];
    end

    initial begin
        my_lut[0] = 4'h9;
        my_lut[1] = 4'h8;
        my_lut[2] = 4'h7;
        my_lut[3] = 4'h6;
        my_lut[4] = 4'h5;
        my_lut[5] = 4'h4;
        my_lut[6] = 4'h3;
        my_lut[7] = 4'h2;
        my_lut[8] = 4'h1;
        my_lut[9] = 4'h0;
        my_lut[10] = 4'h0;
        my_lut[11] = 4'h0;
        my_lut[12] = 4'h0;
        my_lut[13] = 4'h0;
        my_lut[14] = 4'h0;
        my_lut[15] = 4'h0;
    end
endmodule


module CE_COMPL (
  input [7:0] DI,
  input D, // Decimal
  output [7:0] DO
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire [3:0] s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire [3:0] s9;
  wire [7:0] s10;
  wire [3:0] s11;
  wire [3:0] s12;
  wire [7:0] s13;
  assign s13 = ~ DI;
  assign s11 = DI[3:0];
  assign s12 = DI[7:4];
  assign s0 = s11[0];
  assign s1 = s11[1];
  assign s2 = s11[2];
  assign s3 = s11[3];
  assign s5 = s12[0];
  assign s6 = s12[1];
  assign s7 = s12[2];
  assign s8 = s12[3];
  // 9s_CL
  LUT_9s_CL LUT_9s_CL_i0 (
    .\0 ( s0 ),
    .\1 ( s1 ),
    .\2 ( s2 ),
    .\3 ( s3 ),
    .out( s4 )
  );
  // 9s_CH
  LUT_9s_CH LUT_9s_CH_i1 (
    .\0 ( s5 ),
    .\1 ( s6 ),
    .\2 ( s7 ),
    .\3 ( s8 ),
    .out( s9 )
  );
  assign s10[3:0] = s4;
  assign s10[7:4] = s9;
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i2 (
    .sel( D ),
    .in_0( s13 ),
    .in_1( s10 ),
    .out( DO )
  );
endmodule

module CE_ADDER (
  input [7:0] A_AD, // Input A
  input [15:0] B_AD, // Input B
  input DI_AD, // Decimal in
  input CI_AD, // Carry in
  input [3:0] S_AD, // Add
                    // 
                    // Increment
                    // 
                    // Subtract
                    // 
                    // Decrement
                    // 
                    // Add with Carry
                    // 
                    // Increment with Carry
                    // 
                    // Subtract with Carry
                    // 
                    // Decrement with Carry
                    // 
                    // Increment Word
                    // 
                    // Decrement Word
  output VO_AD, // Overflow out
  output CO_AD, // Carry out
  output [7:0] Q_AD, // Output Low
  output [7:0] QH_AD // Output High

);
  wire [7:0] B;
  wire [7:0] BH;
  wire [1:0] s4;
  wire [7:0] s5;
  wire [7:0] s6;
  wire [7:0] s7;
  wire [7:0] s8;
  wire S0;
  wire S1;
  wire S2;
  wire S3;
  wire D;
  wire s9;
  wire [2:0] s10;
  wire s11;
  wire [6:0] s12;
  wire [6:0] s13;
  wire [6:0] s14;
  wire s15;
  wire s16;
  wire s17;
  wire s18;
  wire s19;
  wire [7:0] s20;
  wire s21;
  wire [3:0] s22;
  wire [3:0] s23;
  wire [3:0] s24;
  wire s25;
  wire [3:0] s26;
  wire [3:0] s27;
  wire s28;
  wire [3:0] s29;
  wire s30;
  wire [3:0] s31;
  wire [3:0] s32;
  wire [3:0] s33;
  wire [3:0] s34;
  wire s35;
  wire [7:0] s36;
  wire [7:0] s37;
  wire s38;
  wire s39;
  wire s40;
  assign B = B_AD[7:0];
  assign BH = B_AD[15:8];
  assign S0 = S_AD[0];
  assign S1 = S_AD[1];
  assign S2 = S_AD[2];
  assign S3 = S_AD[3];
  assign D = (S2 & DI_AD);
  assign s4[0] = S0;
  assign s4[1] = S1;
  assign s10[0] = S0;
  assign s10[1] = S1;
  assign s10[2] = S2;
  DIG_BitExtenderSingle #(
    .outputBits(8)
  )
  DIG_BitExtenderSingle_i0 (
    .in( S1 ),
    .out( s20 )
  );
  Mux_4x1_NBits #(
    .Bits(8)
  )
  Mux_4x1_NBits_i1 (
    .sel( s4 ),
    .in_0( A_AD ),
    .in_1( 8'b0 ),
    .in_2( A_AD ),
    .in_3( B ),
    .out( s5 )
  );
  assign s9 = ~ D;
  Mux_8x1 Mux_8x1_i2 (
    .sel( s10 ),
    .in_0( 1'b0 ),
    .in_1( 1'b1 ),
    .in_2( 1'b1 ),
    .in_3( 1'b0 ),
    .in_4( CI_AD ),
    .in_5( CI_AD ),
    .in_6( CI_AD ),
    .in_7( CI_AD ),
    .out( s11 )
  );
  CE_COMPL CE_COMPL_i3 (
    .DI( B ),
    .D( D ),
    .DO( s6 )
  );
  assign s7[0] = 1'b1;
  assign s7[1] = s9;
  assign s7[2] = s9;
  assign s7[3] = 1'b1;
  assign s7[4] = 1'b1;
  assign s7[5] = s9;
  assign s7[6] = s9;
  assign s7[7] = 1'b1;
  assign s12 = s5[6:0];
  assign s16 = s5[7];
  assign s22 = s5[3:0];
  assign s26 = s5[7:4];
  Mux_4x1_NBits #(
    .Bits(8)
  )
  Mux_4x1_NBits_i4 (
    .sel( s4 ),
    .in_0( B ),
    .in_1( B ),
    .in_2( s6 ),
    .in_3( s7 ),
    .out( s8 )
  );
  assign s13 = s8[6:0];
  assign s17 = s8[7];
  assign s23 = s8[3:0];
  assign s27 = s8[7:4];
  DIG_Add #(
    .Bits(7)
  )
  DIG_Add_i5 (
    .a( s12 ),
    .b( s13 ),
    .c_i( s11 ),
    .s( s14 ),
    .c_o( s15 )
  );
  DIG_Add #(
    .Bits(4)
  )
  DIG_Add_i6 (
    .a( s22 ),
    .b( s23 ),
    .c_i( CI_AD ),
    .s( s24 ),
    .c_o( s25 )
  );
  DIG_Add #(
    .Bits(1)
  )
  DIG_Add_i7 (
    .a( s16 ),
    .b( s17 ),
    .c_i( s15 ),
    .s( s18 ),
    .c_o( s19 )
  );
  assign s28 = ((s24[2] & s24[3]) | (s24[1] & s24[3]) | s25);
  DIG_Add #(
    .Bits(8)
  )
  DIG_Add_i8 (
    .a( BH ),
    .b( s20 ),
    .c_i( s19 ),
    .s( QH_AD ),
    .c_o( s21 )
  );
  DIG_Add #(
    .Bits(4)
  )
  DIG_Add_i9 (
    .a( s26 ),
    .b( s27 ),
    .c_i( s28 ),
    .s( s29 ),
    .c_o( s30 )
  );
  assign s31[0] = 1'b0;
  assign s31[1] = s28;
  assign s31[2] = s28;
  assign s31[3] = 1'b0;
  assign s37[6:0] = s14;
  assign s37[7] = s18;
  assign s39 = (s15 ^ s19);
  DIG_Add #(
    .Bits(4)
  )
  DIG_Add_i10 (
    .a( s24 ),
    .b( s31 ),
    .c_i( 1'b0 ),
    .s( s32 )
  );
  assign s35 = ((s29[2] & s29[3]) | (s29[1] & s29[3]) | s30);
  Mux_2x1 Mux_2x1_i11 (
    .sel( S3 ),
    .in_0( s19 ),
    .in_1( s21 ),
    .out( s38 )
  );
  Mux_2x1 Mux_2x1_i12 (
    .sel( D ),
    .in_0( s38 ),
    .in_1( s35 ),
    .out( CO_AD )
  );
  assign s33[0] = 1'b0;
  assign s33[1] = s35;
  assign s33[2] = s35;
  assign s33[3] = 1'b0;
  DIG_Add #(
    .Bits(4)
  )
  DIG_Add_i13 (
    .a( s29 ),
    .b( s33 ),
    .c_i( 1'b0 ),
    .s( s34 )
  );
  assign s36[3:0] = s32;
  assign s36[7:4] = s34;
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i14 (
    .sel( D ),
    .in_0( s37 ),
    .in_1( s36 ),
    .out( Q_AD )
  );
  assign s40 = ~ ((s5[3] ^ s8[3]) & (s5[3] ^ s36[3]));
  Mux_2x1 Mux_2x1_i15 (
    .sel( D ),
    .in_0( s39 ),
    .in_1( s40 ),
    .out( VO_AD )
  );
endmodule

module CE_SRL (
  input C_i, // Carry In
  input [15:0] IN, // Input
  input SEL, // 8/16 bit Select
  output C_o, // Carry Out
  output [7:0] Q, // Output Low
  output [7:0] QH // Output High

);
  wire s0;
  wire s1;
  assign Q[0] = C_i;
  assign Q[7:1] = IN[6:0];
  assign s0 = IN[15];
  assign s1 = IN[7];
  assign QH = IN[14:7];
  Mux_2x1 Mux_2x1_i0 (
    .sel( SEL ),
    .in_0( s1 ),
    .in_1( s0 ),
    .out( C_o )
  );
endmodule

module CE_SRR (
  input C_i, // Carry In
  input [15:0] IN, // Input
  input SEL, // 8/16 bit Select
  output C_o, // Carry Out
  output [7:0] Q, // Output Low
  output [7:0] QH // Output High

);
  wire [7:0] Q_temp;
  wire [7:0] QH_temp;
  wire s0;
  wire s1;
  wire [15:0] s2;
  assign QH_temp[6:0] = IN[15:9];
  assign QH_temp[7] = C_i;
  assign C_o = IN[0];
  assign s0 = IN[8];
  Mux_2x1 Mux_2x1_i0 (
    .sel( SEL ),
    .in_0( C_i ),
    .in_1( s0 ),
    .out( s1 )
  );
  assign Q_temp[6:0] = IN[7:1];
  assign Q_temp[7] = s1;
  assign s2[7:0] = Q_temp;
  assign s2[15:8] = QH_temp;
  assign Q = Q_temp;
  assign QH = QH_temp;
endmodule

module CE_M_ALU (
  input R_A, // Reset
  input nC_A,
  input [7:0] ALA_A, // A Input
  input [15:0] ALB_A, // B Input
  input [9:0] A_CTRL_A, // ALU Control
  input SOB_A, // Set Overflow... Bit?
  input CIB_A, // Clear Interrupt Bit
  output [15:0] ALO_A, // Output
  output [6:0] FLO_A // Flag output

);
  wire [7:0] B;
  wire [7:0] BH;
  wire E;
  wire [8:0] OPC;
  wire CO;
  wire ZO;
  wire nIO;
  wire DO;
  wire nEO;
  wire VO;
  wire NO;
  wire [7:0] s0;
  wire [7:0] QH;
  wire SL0;
  wire [7:0] Q;
  wire [6:0] s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire [1:0] s10;
  wire ZI;
  wire D1;
  wire s11;
  wire s12;
  wire D7;
  wire s13;
  wire s14;
  wire D6;
  wire s15;
  wire D3;
  wire s16;
  wire s17;
  wire nD2;
  wire s18;
  wire CI;
  wire D0;
  wire s19;
  wire VI;
  wire NI;
  wire D4;
  wire D5;
  wire [16:0] s20;
  wire [3:0] SL1;
  wire [3:0] SL2;
  wire [6:0] SL4;
  wire AZS;
  wire [7:0] s21;
  wire [7:0] ANDQ;
  wire [7:0] s22;
  wire [7:0] s23;
  wire [7:0] s24;
  wire [7:0] s25;
  wire [7:0] s26;
  wire [7:0] s27;
  wire [7:0] s28;
  wire [7:0] s29;
  wire [7:0] s30;
  wire [7:0] s31;
  wire [7:0] s32;
  wire [7:0] s33;
  wire [7:0] s34;
  wire [7:0] s35;
  wire s36;
  wire s37;
  wire s38;
  wire s39;
  wire s40;
  wire s41;
  wire s42;
  wire s43;
  wire s44;
  wire s45;
  wire [2:0] QHS;
  wire [7:0] s46;
  wire [7:0] s47;
  wire [7:0] s48;
  wire [7:0] s49;
  wire [7:0] s50;
  wire s51;
  wire [7:0] s52;
  wire [2:0] s53;
  wire s54;
  wire s55;
  wire s56;
  wire s57;
  wire s58;
  wire s59;
  wire s60;
  wire s61;
  wire s62;
  wire s63;
  wire s64;
  wire [15:0] s65;
  wire s66;
  wire s67;
  wire s68;
  wire s69;
  wire s70;
  wire s71;
  wire s72;
  wire s73;
  wire s74;
  wire s75;
  assign B = ALB_A[7:0];
  assign BH = ALB_A[15:8];
  assign E = A_CTRL_A[0];
  assign OPC = A_CTRL_A[9:1];
  assign nD2 = ~ B[2];
  assign ANDQ = (ALA_A & B);
  assign s26 = (ALA_A ^ B);
  DIG_Mul_unsigned #(
    .Bits(8)
  )
  DIG_Mul_unsigned_i0 (
    .a( ALA_A ),
    .b( B ),
    .mul( s65 )
  );
  DIG_Div_unsigned DIG_Div_unsigned_i1 (
    .a( ALA_A ),
    .b( B ),
    .q( s32 ),
    .r( s33 )
  );
  assign AZS = ((~ OPC[0] & ~ OPC[1] & OPC[2] & ~ OPC[3] & ~ OPC[4] & ~ OPC[5] & ~ OPC[6] & ~ OPC[7] & ~ OPC[8]) | (~ OPC[0] & ~ OPC[1] & OPC[2] & OPC[3] & ~ OPC[4] & ~ OPC[5] & ~ OPC[6] & ~ OPC[7] & ~ OPC[8]) | (~ OPC[0] & ~ OPC[1] & OPC[2] & ~ OPC[3] & OPC[4] & ~ OPC[5] & ~ OPC[6] & ~ OPC[7] & ~ OPC[8]) | (~ OPC[0] & ~ OPC[1] & OPC[2] & OPC[3] & OPC[4] & ~ OPC[5] & ~ OPC[6] & ~ OPC[7] & ~ OPC[8]) | (OPC[0] & OPC[1] & OPC[2] & ~ OPC[3] & ~ OPC[8]));
  assign s70 = (OPC[0] & OPC[1] & ~ OPC[2] & ~ OPC[3] & ~ OPC[4] & OPC[6] & OPC[7] & ~ OPC[8]);
  assign s71 = (OPC[0] & OPC[1] & ~ OPC[2] & OPC[3] & ~ OPC[4] & ~ OPC[5] & OPC[6] & OPC[7] & ~ OPC[8]);
  assign s72 = (OPC[0] & OPC[1] & ~ OPC[2] & OPC[3] & ~ OPC[4] & ~ OPC[5] & OPC[6] & OPC[7] & OPC[8]);
  assign s73 = (~ OPC[0] & OPC[1] & ~ OPC[2] & OPC[3] & ~ OPC[4] & ~ OPC[5] & OPC[6] & OPC[7] & OPC[8]);
  assign s74 = (OPC[0] & OPC[1] & ~ OPC[2] & OPC[3] & ~ OPC[4] & OPC[5] & OPC[6] & OPC[7] & OPC[8]);
  assign s75 = (OPC[0] & OPC[1] & ~ OPC[2] & OPC[3] & ~ OPC[4] & OPC[5] & OPC[6] & OPC[7] & ~ OPC[8]);
  // ALU
  DIG_ROM_512X17_ALU DIG_ROM_512X17_ALU_i2 (
    .A( OPC ),
    .sel( 1'b1 ),
    .D( s20 )
  );
  CE_CBH CE_CBH_i3 (
    .I( B ),
    .Q( s35 ),
    .C_O( s45 )
  );
  CE_CHB CE_CHB_i4 (
    .I( B ),
    .Q( s34 ),
    .C_O( s44 )
  );
  assign D0 = B[0];
  assign D1 = B[1];
  assign D3 = B[3];
  assign D4 = B[4];
  assign D5 = B[5];
  assign D6 = B[6];
  assign D7 = B[7];
  assign s53 = OPC[6:4];
  Decoder3 Decoder3_i5 (
    .sel( s53 ),
    .out_0( s54 ),
    .out_1( s55 ),
    .out_2( s56 ),
    .out_3( s57 ),
    .out_4( s58 ),
    .out_5( s59 ),
    .out_6( s60 ),
    .out_7( s61 )
  );
  assign s10[0] = s20[9];
  assign s10[1] = (~ OPC[0] & ~ OPC[1] & ~ OPC[2] & OPC[3] & ~ OPC[4] & OPC[5] & ~ OPC[6] & ~ OPC[7] & ~ OPC[8]);
  PriorityEncoder3 PriorityEncoder3_i6 (
    .in0( 1'b0 ),
    .in1( s70 ),
    .in2( s71 ),
    .in3( s72 ),
    .in4( s73 ),
    .in5( s74 ),
    .in6( s75 ),
    .in7( 1'b0 ),
    .num( QHS )
  );
  CE_NZ CE_NZ_i7 (
    .IN( s32 ),
    .Q( s43 )
  );
  CE_NZ CE_NZ_i8 (
    .IN( s33 ),
    .Q( s42 )
  );
  assign SL0 = s20[0];
  assign SL1 = s20[4:1];
  assign SL2 = s20[8:5];
  assign SL4 = s20[16:10];
  assign s30 = s65[7:0];
  assign s31 = s65[15:8];
  Mux_2x1_NBits #(
    .Bits(7)
  )
  Mux_2x1_NBits_i9 (
    .sel( E ),
    .in_0( 7'b0 ),
    .in_1( SL4 ),
    .out( s1 )
  );
  assign s52[0] = s54;
  assign s52[1] = s55;
  assign s52[2] = s56;
  assign s52[3] = s57;
  assign s52[4] = s58;
  assign s52[5] = s59;
  assign s52[6] = s60;
  assign s52[7] = s61;
  assign s66 = ((~ SL2[0] & ~ SL2[1] & ~ SL2[2] & SL2[3]) | (SL2[0] & ~ SL2[1] & ~ SL2[2] & SL2[3]));
  CE_NZ CE_NZ_i10 (
    .IN( s30 ),
    .Q( s41 )
  );
  CE_NZ CE_NZ_i11 (
    .IN( s31 ),
    .Q( s40 )
  );
  assign s15 = s10[1];
  assign s17 = s10[1];
  assign s51 = SL1[0];
  assign s62 = SL1[1];
  assign s63 = SL1[1];
  assign s64 = SL1[1];
  assign s9 = (s1[5] | SOB_A);
  Mux_2x1 Mux_2x1_i12 (
    .sel( s15 ),
    .in_0( SL0 ),
    .in_1( D3 ),
    .out( s16 )
  );
  Mux_2x1 Mux_2x1_i13 (
    .sel( s17 ),
    .in_0( SL0 ),
    .in_1( nD2 ),
    .out( s18 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i14 (
    .sel( s51 ),
    .in_0( ALA_A ),
    .in_1( s52 ),
    .out( s50 )
  );
  assign s69 = (s1[2] | CIB_A);
  CE_ASR CE_ASR_i15 (
    .IN( ALB_A ),
    .SEL( s64 ),
    .C_o( s38 ),
    .Q( s28 ),
    .QH( s48 )
  );
  assign s2 = s1[0];
  assign s3 = s1[1];
  assign s4 = s1[3];
  assign s5 = s1[4];
  assign s6 = s1[6];
  assign s24 = (~ s50 & B);
  assign s25 = (s50 | B);
  assign s68 = (s18 | CIB_A);
  CE_DFF CE_DFF_i16 (
    .C( nC_A ),
    .D( s16 ),
    .E( s4 ),
    .R( R_A ),
    .Q( DO )
  );
  CE_DFF CE_DFF_i17 (
    .C( nC_A ),
    .D( SL0 ),
    .E( s5 ),
    .R( R_A ),
    .nQ( nEO )
  );
  CE_DFF CE_DFF_i18 (
    .C( nC_A ),
    .D( s68 ),
    .E( s69 ),
    .R( R_A ),
    .nQ( nIO )
  );
  assign FLO_A[0] = CO;
  assign FLO_A[1] = ZO;
  assign FLO_A[2] = nIO;
  assign FLO_A[3] = DO;
  assign FLO_A[4] = nEO;
  assign FLO_A[5] = VO;
  assign FLO_A[6] = NO;
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i19 (
    .sel( SL0 ),
    .in_0( Q ),
    .in_1( B ),
    .out( s0 )
  );
  assign s8 = (s7 | SOB_A);
  Mux_4x1 Mux_4x1_i20 (
    .sel( s10 ),
    .in_0( ZI ),
    .in_1( SL0 ),
    .in_2( D1 ),
    .in_3( SL0 ),
    .out( s11 )
  );
  Mux_4x1 Mux_4x1_i21 (
    .sel( s10 ),
    .in_0( s12 ),
    .in_1( SL0 ),
    .in_2( D7 ),
    .in_3( SL0 ),
    .out( s13 )
  );
  Mux_4x1 Mux_4x1_i22 (
    .sel( s10 ),
    .in_0( s14 ),
    .in_1( SL0 ),
    .in_2( D6 ),
    .in_3( SL0 ),
    .out( s7 )
  );
  Mux_4x1 Mux_4x1_i23 (
    .sel( s10 ),
    .in_0( CI ),
    .in_1( SL0 ),
    .in_2( D0 ),
    .in_3( SL0 ),
    .out( s19 )
  );
  Mux_2x1 Mux_2x1_i24 (
    .sel( SL0 ),
    .in_0( VI ),
    .in_1( D6 ),
    .out( s14 )
  );
  Mux_2x1 Mux_2x1_i25 (
    .sel( SL0 ),
    .in_0( NI ),
    .in_1( D7 ),
    .out( s12 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i26 (
    .sel( AZS ),
    .in_0( s21 ),
    .in_1( ANDQ ),
    .out( s22 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i27 (
    .sel( SL0 ),
    .in_0( Q ),
    .in_1( B ),
    .out( s21 )
  );
  Mux_16x1_NBits #(
    .Bits(8)
  )
  Mux_16x1_NBits_i28 (
    .sel( SL2 ),
    .in_0( s23 ),
    .in_1( ANDQ ),
    .in_2( s24 ),
    .in_3( s25 ),
    .in_4( s26 ),
    .in_5( s27 ),
    .in_6( s28 ),
    .in_7( s29 ),
    .in_8( s27 ),
    .in_9( s29 ),
    .in_10( s30 ),
    .in_11( s31 ),
    .in_12( s32 ),
    .in_13( s33 ),
    .in_14( s34 ),
    .in_15( s35 ),
    .out( Q )
  );
  Mux_16x1 Mux_16x1_i29 (
    .sel( SL2 ),
    .in_0( s36 ),
    .in_1( 1'b0 ),
    .in_2( 1'b0 ),
    .in_3( 1'b0 ),
    .in_4( 1'b0 ),
    .in_5( s37 ),
    .in_6( s38 ),
    .in_7( s39 ),
    .in_8( s37 ),
    .in_9( s39 ),
    .in_10( s40 ),
    .in_11( s41 ),
    .in_12( s42 ),
    .in_13( s43 ),
    .in_14( s44 ),
    .in_15( s45 ),
    .out( CI )
  );
  Mux_8x1_NBits #(
    .Bits(8)
  )
  Mux_8x1_NBits_i30 (
    .sel( QHS ),
    .in_0( 8'b0 ),
    .in_1( s46 ),
    .in_2( s47 ),
    .in_3( s48 ),
    .in_4( s49 ),
    .in_5( s47 ),
    .in_6( s49 ),
    .in_7( 8'b0 ),
    .out( QH )
  );
  Mux_2x1 Mux_2x1_i31 (
    .sel( s66 ),
    .in_0( 1'b0 ),
    .in_1( CO ),
    .out( s67 )
  );
  CE_DFF CE_DFF_i32 (
    .C( nC_A ),
    .D( s19 ),
    .E( s2 ),
    .R( R_A ),
    .Q( CO )
  );
  CE_DFF CE_DFF_i33 (
    .C( nC_A ),
    .D( s11 ),
    .E( s3 ),
    .R( R_A ),
    .Q( ZO )
  );
  CE_DFF CE_DFF_i34 (
    .C( nC_A ),
    .D( s8 ),
    .E( s9 ),
    .R( R_A ),
    .Q( VO )
  );
  CE_DFF CE_DFF_i35 (
    .C( nC_A ),
    .D( s13 ),
    .E( s6 ),
    .R( R_A ),
    .Q( NO )
  );
  CE_ADDER CE_ADDER_i36 (
    .A_AD( ALA_A ),
    .B_AD( ALB_A ),
    .DI_AD( DO ),
    .CI_AD( CO ),
    .S_AD( SL1 ),
    .VO_AD( VI ),
    .CO_AD( s36 ),
    .Q_AD( s23 ),
    .QH_AD( s46 )
  );
  CE_SRL CE_SRL_i37 (
    .C_i( s67 ),
    .IN( ALB_A ),
    .SEL( s62 ),
    .C_o( s37 ),
    .Q( s27 ),
    .QH( s47 )
  );
  CE_SRR CE_SRR_i38 (
    .C_i( s67 ),
    .IN( ALB_A ),
    .SEL( s63 ),
    .C_o( s39 ),
    .Q( s29 ),
    .QH( s49 )
  );
  assign ALO_A[7:0] = s0;
  assign ALO_A[15:8] = QH;
  assign NI = s22[7];
  assign ZI = ~ (s22[0] | s22[1] | s22[2] | s22[3] | s22[4] | s22[5] | s22[6] | NI);
endmodule
module DIG_BitExtender #(
    parameter inputBits = 2,
    parameter outputBits = 4
)
(
    input [(inputBits-1):0] in,
    output [(outputBits - 1):0] out
);
    assign out = {{(outputBits - inputBits){in[inputBits - 1]}}, in};
endmodule




module Demux3
(
    output out_0,
    output out_1,
    output out_2,
    output out_3,
    output out_4,
    output out_5,
    output out_6,
    output out_7,
    input [2:0] sel,
    input in
);
    assign out_0 = (sel == 3'h0)? in : 'd0;
    assign out_1 = (sel == 3'h1)? in : 'd0;
    assign out_2 = (sel == 3'h2)? in : 'd0;
    assign out_3 = (sel == 3'h3)? in : 'd0;
    assign out_4 = (sel == 3'h4)? in : 'd0;
    assign out_5 = (sel == 3'h5)? in : 'd0;
    assign out_6 = (sel == 3'h6)? in : 'd0;
    assign out_7 = (sel == 3'h7)? in : 'd0;
endmodule

module DIG_ROM_16X5_AOS (
    input [3:0] A,
    input sel,
    output reg [4:0] D
);
    reg [4:0] my_rom [0:15];

    always @ (*) begin
        if (~sel)
            D = 5'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 5'h0;
        my_rom[1] = 5'h4;
        my_rom[2] = 5'hc;
        my_rom[3] = 5'h14;
        my_rom[4] = 5'h1c;
        my_rom[5] = 5'h1;
        my_rom[6] = 5'h9;
        my_rom[7] = 5'h11;
        my_rom[8] = 5'h5;
        my_rom[9] = 5'hd;
        my_rom[10] = 5'h7;
        my_rom[11] = 5'h2;
        my_rom[12] = 5'ha;
        my_rom[13] = 5'h12;
        my_rom[14] = 5'h1a;
        my_rom[15] = 5'h3;
    end
endmodule


module CE_PRE (
  input R,
  input C,
  input L,
  input [7:0] IN,
  input [7:0] PR,
  output [7:0] Q
);
  wire s0;
  wire [7:0] s1;
  wire s2;
  wire s3;
  wire s4;
  assign s3 = (L | R);
  // REG
  DIG_Register_BUS #(
    .Bits(8)
  )
  DIG_Register_BUS_i0 (
    .D( IN ),
    .C( C ),
    .en( s3 ),
    .Q( s1 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i1 (
    .sel( s0 ),
    .in_0( s1 ),
    .in_1( PR ),
    .out( Q )
  );
  Mux_2x1 Mux_2x1_i2 (
    .sel( s0 ),
    .in_0( 1'b1 ),
    .in_1( L ),
    .out( s2 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i3 (
    .D( s4 ),
    .C( C ),
    .\~Q ( s0 )
  );
  Mux_2x1 Mux_2x1_i4 (
    .sel( R ),
    .in_0( s2 ),
    .in_1( 1'b0 ),
    .out( s4 )
  );
endmodule

module Decoder2 (
    output out_0,
    output out_1,
    output out_2,
    output out_3,
    input [1:0] sel
);
    assign out_0 = (sel == 2'h0)? 1'b1 : 1'b0;
    assign out_1 = (sel == 2'h1)? 1'b1 : 1'b0;
    assign out_2 = (sel == 2'h2)? 1'b1 : 1'b0;
    assign out_3 = (sel == 2'h3)? 1'b1 : 1'b0;
endmodule


module DIG_Neg #(
    parameter Bits = 1
)
(
      input signed [(Bits-1):0] in,
      output signed [(Bits-1):0] out
);
    assign out = -in;
endmodule


module CE_M_REGS (
  input R_R, // Reset
  input nC_R,
  input [7:0] DI_R, // Data Input
  input [15:0] ALUI_R, // ALU Input
  input [7:0] RNDI_R, // LSFR Input
  input [7:0] FLI_R, // Flag/Status Input
  input [1:0] ANRI_R, // ABT/NMI/RES/IRQ Input
  input [31:0] R_CTRL_R, // Rregister Control Input
  input [2:0] PCO_R, // PC Offset Input
  input [3:0] SPO_R, // SP Offset Input
  output [7:0] ALA_R, // ALU A Output
  output [15:0] ALB_R, // ALU B Output
  output [7:0] DO_R, // Data Output
  output VPA_R, // Valid Program Address
  output VBA_R, // Valid Base Page Address
  output VSA_R, // Valid Stack Address
  output VVA_R, // Valid Vector Address
  output [15:0] AO_R // Address Output

);
  wire [15:0] s0;
  wire LPC;
  wire [15:0] PC;
  wire [2:0] RGS;
  wire [7:0] ALIL;
  wire [7:0] TBL;
  wire [7:0] X;
  wire [7:0] Y;
  wire [7:0] s1;
  wire [7:0] s2;
  wire [7:0] \REG ;
  wire [2:0] ALBS;
  wire [7:0] A;
  wire [7:0] B;
  wire [7:0] Z;
  wire [7:0] s3;
  wire [7:0] s4;
  wire [7:0] s5;
  wire [2:0] LRS;
  wire s6;
  wire s7;
  wire s8;
  wire YEN;
  wire s9;
  wire s10;
  wire s11;
  wire SPS;
  wire LRE;
  wire s12;
  wire [7:0] s13;
  wire [7:0] TAL;
  wire [7:0] s14;
  wire [15:0] TA;
  wire s15;
  wire [7:0] ALIH;
  wire [7:0] s16;
  wire [1:0] TBS;
  wire [7:0] s17;
  wire [7:0] s18;
  wire [7:0] s19;
  wire [7:0] s20;
  wire [7:0] s21;
  wire [15:0] SPN;
  wire [7:0] SPL;
  wire [7:0] SPH;
  wire [15:0] SP;
  wire s22;
  wire s23;
  wire s24;
  wire [1:0] PCS;
  wire s25;
  wire [7:0] PCO;
  wire [7:0] s26;
  wire [15:0] s27;
  wire [15:0] s28;
  wire [15:0] s29;
  wire [15:0] s30;
  wire [2:0] s31;
  wire [15:0] OFS;
  wire [15:0] SPO;
  wire [7:0] OFS8;
  wire [7:0] SPO8;
  wire [1:0] ALAS;
  wire [3:0] DOS;
  wire [7:0] TBH;
  wire [7:0] s32;
  wire [7:0] s33;
  wire LBH;
  wire [15:0] s34;
  wire [3:0] AOS;
  wire [4:0] s35;
  wire [1:0] s36;
  wire s37;
  wire [15:0] s38;
  wire [15:0] s39;
  wire s40;
  wire [1:0] s41;
  wire [7:0] s42;
  wire [7:0] s43;
  wire [1:0] s44;
  wire s45;
  wire LSH;
  wire LSL;
  wire s46;
  wire [7:0] s47;
  wire [7:0] s48;
  wire [15:0] s49;
  wire [15:0] s50;
  wire [15:0] s51;
  wire [7:0] s52;
  wire [7:0] s53;
  wire nEF;
  wire [15:0] s54;
  wire [15:0] s55;
  wire [15:0] s56;
  wire [7:0] s57;
  wire [7:0] s58;
  wire [7:0] s59;
  wire [15:0] s60;
  wire LBL;
  wire [15:0] s61;
  wire [15:0] s62;
  assign PCO[2:0] = PCO_R;
  assign PCO[7:3] = 5'b0;
  DIG_BitExtender #(
    .inputBits(4),
    .outputBits(16)
  )
  DIG_BitExtender_i0 (
    .in( SPO_R ),
    .out( SPO )
  );
  assign s49[0] = 1'b0;
  assign s49[2:1] = ANRI_R;
  assign s49[15:3] = 13'b0;
  assign ALIL = ALUI_R[7:0];
  assign ALIH = ALUI_R[15:8];
  assign nEF = FLI_R[5];
  assign ALAS = R_CTRL_R[1:0];
  assign ALBS = R_CTRL_R[4:2];
  assign DOS = R_CTRL_R[8:5];
  assign RGS = R_CTRL_R[11:9];
  assign AOS = R_CTRL_R[15:12];
  assign TBS = R_CTRL_R[17:16];
  assign LBL = R_CTRL_R[18];
  assign LBH = R_CTRL_R[19];
  assign LRS = R_CTRL_R[22:20];
  assign LRE = R_CTRL_R[23];
  assign PCS = R_CTRL_R[25:24];
  assign LPC = R_CTRL_R[26];
  assign LSL = R_CTRL_R[27];
  assign LSH = R_CTRL_R[28];
  assign s31 = R_CTRL_R[31:29];
  Demux3 Demux3_i1 (
    .sel( LRS ),
    .in( LRE ),
    .out_0( s6 ),
    .out_1( s7 ),
    .out_2( s8 ),
    .out_3( YEN ),
    .out_4( s9 ),
    .out_5( s10 ),
    .out_6( s11 ),
    .out_7( SPS )
  );
  DIG_BitExtender #(
    .inputBits(3),
    .outputBits(16)
  )
  DIG_BitExtender_i2 (
    .in( s31 ),
    .out( OFS )
  );
  // AOS
  DIG_ROM_16X5_AOS DIG_ROM_16X5_AOS_i3 (
    .A( AOS ),
    .sel( 1'b1 ),
    .D( s35 )
  );
  assign s45 = (LSH & RGS[0] & LSL);
  DIG_Add #(
    .Bits(16)
  )
  DIG_Add_i4 (
    .a( 16'b1111111111111000 ),
    .b( s49 ),
    .c_i( LPC ),
    .s( s50 )
  );
  assign s12 = RGS[0];
  assign s15 = TBS[0];
  assign s22 = PCS[0];
  assign s23 = PCS[1];
  assign SPO8 = SPO[7:0];
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i5 (
    .sel( s15 ),
    .in_0( DI_R ),
    .in_1( ALIH ),
    .out( s16 )
  );
  assign s24 = (SPS & s22 & s23);
  assign s25 = (s23 & s22);
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i6 (
    .sel( s22 ),
    .in_0( PCO ),
    .in_1( DI_R ),
    .out( s26 )
  );
  assign s44[0] = s45;
  assign s44[1] = s45;
  // TAH
  CE_PRE CE_PRE_i7 (
    .R( R_R ),
    .C( nC_R ),
    .L( s10 ),
    .IN( DI_R ),
    .PR( 8'b0 ),
    .Q( s14 )
  );
  // TAL
  CE_PRE CE_PRE_i8 (
    .R( R_R ),
    .C( nC_R ),
    .L( s11 ),
    .IN( DI_R ),
    .PR( 8'b0 ),
    .Q( TAL )
  );
  assign OFS8 = OFS[7:0];
  assign s36 = s35[1:0];
  assign s37 = s35[2];
  assign TA[7:0] = TAL;
  assign TA[15:8] = s14;
  DIG_BitExtender #(
    .inputBits(8),
    .outputBits(16)
  )
  DIG_BitExtender_i9 (
    .in( s26 ),
    .out( s28 )
  );
  Decoder2 Decoder2_i10 (
    .sel( s36 ),
    .out_0( s40 ),
    .out_1( VBA_R ),
    .out_2( VSA_R ),
    .out_3( VVA_R )
  );
  assign s41 = (s44 | s35[4:3]);
  assign s46 = (s36[0] & ~ s36[1]);
  // TBH
  CE_PRE CE_PRE_i11 (
    .R( R_R ),
    .C( nC_R ),
    .L( LBH ),
    .IN( s16 ),
    .PR( 8'b0 ),
    .Q( TBH )
  );
  assign VPA_R = (~ s37 & s40);
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i12 (
    .sel( s46 ),
    .in_0( SPO8 ),
    .in_1( OFS8 ),
    .out( s58 )
  );
  // PC
  DIG_Register_BUS #(
    .Bits(16)
  )
  DIG_Register_BUS_i13 (
    .D( s0 ),
    .C( nC_R ),
    .en( LPC ),
    .Q( PC )
  );
  Mux_8x1_NBits #(
    .Bits(8)
  )
  Mux_8x1_NBits_i14 (
    .sel( RGS ),
    .in_0( DI_R ),
    .in_1( ALIL ),
    .in_2( TBL ),
    .in_3( X ),
    .in_4( Y ),
    .in_5( s1 ),
    .in_6( s2 ),
    .in_7( RNDI_R ),
    .out( \REG  )
  );
  Mux_8x1_NBits #(
    .Bits(8)
  )
  Mux_8x1_NBits_i15 (
    .sel( ALBS ),
    .in_0( A ),
    .in_1( B ),
    .in_2( X ),
    .in_3( Y ),
    .in_4( Z ),
    .in_5( s3 ),
    .in_6( s4 ),
    .in_7( \REG  ),
    .out( s5 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i16 (
    .sel( s12 ),
    .in_0( DI_R ),
    .in_1( A ),
    .out( s13 )
  );
  Mux_4x1_NBits #(
    .Bits(8)
  )
  Mux_4x1_NBits_i17 (
    .sel( TBS ),
    .in_0( DI_R ),
    .in_1( ALIL ),
    .in_2( Y ),
    .in_3( Z ),
    .out( s17 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i18 (
    .sel( SPS ),
    .in_0( s18 ),
    .in_1( Y ),
    .out( s19 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i19 (
    .sel( SPS ),
    .in_0( s20 ),
    .in_1( X ),
    .out( s21 )
  );
  Mux_2x1_NBits #(
    .Bits(16)
  )
  Mux_2x1_NBits_i20 (
    .sel( s25 ),
    .in_0( PC ),
    .in_1( 16'b0 ),
    .out( s27 )
  );
  Mux_2x1_NBits #(
    .Bits(16)
  )
  Mux_2x1_NBits_i21 (
    .sel( s23 ),
    .in_0( s28 ),
    .in_1( s29 ),
    .out( s30 )
  );
  assign s29[7:0] = TBL;
  assign s29[15:8] = DI_R;
  DIG_Add #(
    .Bits(16)
  )
  DIG_Add_i22 (
    .a( s27 ),
    .b( s30 ),
    .c_i( s24 ),
    .s( s0 )
  );
  Mux_4x1_NBits #(
    .Bits(8)
  )
  Mux_4x1_NBits_i23 (
    .sel( ALAS ),
    .in_0( A ),
    .in_1( X ),
    .in_2( Y ),
    .in_3( Z ),
    .out( ALA_R )
  );
  Mux_16x1_NBits #(
    .Bits(8)
  )
  Mux_16x1_NBits_i24 (
    .sel( DOS ),
    .in_0( A ),
    .in_1( B ),
    .in_2( X ),
    .in_3( Y ),
    .in_4( Z ),
    .in_5( FLI_R ),
    .in_6( TBL ),
    .in_7( TBH ),
    .in_8( s32 ),
    .in_9( s33 ),
    .in_10( 8'b0 ),
    .in_11( 8'b0 ),
    .in_12( 8'b0 ),
    .in_13( 8'b0 ),
    .in_14( 8'b0 ),
    .in_15( 8'b0 ),
    .out( DO_R )
  );
  assign ALB_R[7:0] = s5;
  assign ALB_R[15:8] = DI_R;
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i25 (
    .sel( YEN ),
    .in_0( SPL ),
    .in_1( SPH ),
    .out( s3 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i26 (
    .sel( LBH ),
    .in_0( DI_R ),
    .in_1( TBL ),
    .out( s4 )
  );
  Mux_4x1_NBits #(
    .Bits(16)
  )
  Mux_4x1_NBits_i27 (
    .sel( s36 ),
    .in_0( s34 ),
    .in_1( s38 ),
    .in_2( SPN ),
    .in_3( s39 ),
    .out( AO_R )
  );
  Mux_4x1_NBits #(
    .Bits(8)
  )
  Mux_4x1_NBits_i28 (
    .sel( s41 ),
    .in_0( 8'b0 ),
    .in_1( X ),
    .in_2( Y ),
    .in_3( Z ),
    .out( s42 )
  );
  Mux_4x1_NBits #(
    .Bits(8)
  )
  Mux_4x1_NBits_i29 (
    .sel( s41 ),
    .in_0( 8'b0 ),
    .in_1( Y ),
    .in_2( TBL ),
    .in_3( TAL ),
    .out( s43 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i30 (
    .sel( s46 ),
    .in_0( s43 ),
    .in_1( s47 ),
    .out( s48 )
  );
  DIG_Add #(
    .Bits(16)
  )
  DIG_Add_i31 (
    .a( s51 ),
    .b( OFS ),
    .c_i( 1'b0 ),
    .s( s34 )
  );
  Mux_2x1_NBits #(
    .Bits(16)
  )
  Mux_2x1_NBits_i32 (
    .sel( nEF ),
    .in_0( s54 ),
    .in_1( s38 ),
    .out( SPN )
  );
  DIG_Add #(
    .Bits(16)
  )
  DIG_Add_i33 (
    .a( s55 ),
    .b( SPO ),
    .c_i( 1'b0 ),
    .s( s54 )
  );
  Mux_2x1_NBits #(
    .Bits(16)
  )
  Mux_2x1_NBits_i34 (
    .sel( s37 ),
    .in_0( PC ),
    .in_1( s56 ),
    .out( s51 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i35 (
    .sel( s37 ),
    .in_0( TBL ),
    .in_1( TAL ),
    .out( s47 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i36 (
    .sel( s46 ),
    .in_0( SPL ),
    .in_1( s42 ),
    .out( s57 )
  );
  DIG_Add #(
    .Bits(16)
  )
  DIG_Add_i37 (
    .a( TA ),
    .b( s60 ),
    .c_i( 1'b0 ),
    .s( s56 )
  );
  DIG_Add #(
    .Bits(8)
  )
  DIG_Add_i38 (
    .a( s58 ),
    .b( s59 ),
    .c_i( 1'b0 ),
    .s( s52 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i39 (
    .sel( s46 ),
    .in_0( SPH ),
    .in_1( B ),
    .out( s53 )
  );
  Mux_2x1_NBits #(
    .Bits(16)
  )
  Mux_2x1_NBits_i40 (
    .sel( s37 ),
    .in_0( s50 ),
    .in_1( s61 ),
    .out( s39 )
  );
  // A
  CE_PRE CE_PRE_i41 (
    .R( R_R ),
    .C( nC_R ),
    .L( s6 ),
    .IN( \REG  ),
    .PR( 8'b0 ),
    .Q( A )
  );
  // B
  CE_PRE CE_PRE_i42 (
    .R( R_R ),
    .C( nC_R ),
    .L( s7 ),
    .IN( s13 ),
    .PR( 8'b0 ),
    .Q( B )
  );
  // X
  CE_PRE CE_PRE_i43 (
    .R( R_R ),
    .C( nC_R ),
    .L( s8 ),
    .IN( \REG  ),
    .PR( 8'b0 ),
    .Q( X )
  );
  // Y
  CE_PRE CE_PRE_i44 (
    .R( R_R ),
    .C( nC_R ),
    .L( YEN ),
    .IN( \REG  ),
    .PR( 8'b0 ),
    .Q( Y )
  );
  // Z
  CE_PRE CE_PRE_i45 (
    .R( R_R ),
    .C( nC_R ),
    .L( s9 ),
    .IN( \REG  ),
    .PR( 8'b0 ),
    .Q( Z )
  );
  // TBL
  CE_PRE CE_PRE_i46 (
    .R( R_R ),
    .C( nC_R ),
    .L( LBL ),
    .IN( s17 ),
    .PR( 8'b0 ),
    .Q( TBL )
  );
  // SPH
  CE_PRE CE_PRE_i47 (
    .R( R_R ),
    .C( nC_R ),
    .L( LSH ),
    .IN( s19 ),
    .PR( 8'b1 ),
    .Q( SPH )
  );
  // SPL
  CE_PRE CE_PRE_i48 (
    .R( R_R ),
    .C( nC_R ),
    .L( LSL ),
    .IN( s21 ),
    .PR( 8'b0 ),
    .Q( SPL )
  );
  assign s1[3:0] = A[7:4];
  assign s1[7:4] = A[3:0];
  DIG_Neg #(
    .Bits(8)
  )
  DIG_Neg_i49 (
    .in( A ),
    .out( s2 )
  );
  assign SP[7:0] = SPL;
  assign SP[15:8] = SPH;
  assign s38[7:0] = s52;
  assign s38[15:8] = s53;
  assign s55[7:0] = s48;
  assign s55[15:8] = 8'b0;
  DIG_Add #(
    .Bits(8)
  )
  DIG_Add_i50 (
    .a( s57 ),
    .b( s48 ),
    .c_i( 1'b0 ),
    .s( s59 )
  );
  DIG_BitExtender #(
    .inputBits(8),
    .outputBits(16)
  )
  DIG_BitExtender_i51 (
    .in( s42 ),
    .out( s60 )
  );
  assign s62[7:0] = Y;
  assign s62[15:8] = X;
  assign s20 = SPN[7:0];
  assign s18 = SPN[15:8];
  assign s32 = s34[7:0];
  assign s33 = s34[15:8];
  DIG_Add #(
    .Bits(16)
  )
  DIG_Add_i52 (
    .a( PC ),
    .b( s62 ),
    .c_i( 1'b0 ),
    .s( s61 )
  );
endmodule

module DIG_CounterPreset #(
    parameter Bits = 2,
    parameter maxValue = 4
)
(
    input C,
    input en,
    input clr,
    input dir,
    input [(Bits-1):0] in,
    input ld,
    output [(Bits-1):0] out,
    output ovf
);

    reg [(Bits-1):0] count = 'h0;

    function [(Bits-1):0] maxVal (input [(Bits-1):0] maxv);
        if (maxv == 0)
            maxVal = (1 << Bits) - 1;
        else
            maxVal = maxv;
    endfunction

    assign out = count;
    assign ovf = ((count == maxVal(maxValue) & dir == 1'b0)
                  | (count == 'b0 & dir == 1'b1))? en : 1'b0;

    always @ (posedge C) begin
        if (clr == 1'b1)
            count <= 'h0;
        else if (ld == 1'b1)
            count <= in;
        else if (en == 1'b1) begin
            if (dir == 1'b0) begin
                if (count == maxVal(maxValue))
                    count <= 'h0;
                else
                    count <= count + 1'b1;
            end
            else begin
                if (count == 'h0)
                    count <= maxVal(maxValue);
                else
                    count <= count - 1;
            end
        end
    end
endmodule

module DIG_JK_FF
#(
    parameter Default = 1'b0
)
(
   input J,
   input C,
   input K,
   output Q,
   output \~Q
);
    reg state;

    assign Q = state;
    assign \~Q = ~state;

    always @ (posedge C) begin
        if (~J & K)
            state <= 1'b0;
         else if (J & ~K)
            state <= 1'b1;
         else if (J & K)
            state <= ~state;
    end

    initial begin
        state = Default;
    end
endmodule


module CE_STATE (
  input R,
  input C,
  input L,
  input [3:0] IN,
  output RES,
  output [3:0] OUT
);
  wire s0;
  DIG_CounterPreset #(
    .Bits(4),
    .maxValue(0)
  )
  DIG_CounterPreset_i0 (
    .en( 1'b1 ),
    .C( C ),
    .dir( 1'b0 ),
    .in( IN ),
    .ld( L ),
    .clr( R ),
    .out( OUT )
  );
  assign s0 = (L & ~ R);
  DIG_JK_FF #(
    .Default(0)
  )
  DIG_JK_FF_i1 (
    .J( s0 ),
    .C( C ),
    .K( R ),
    .\~Q ( RES )
  );
endmodule

module CE_JKFF (
  input C,
  input J,
  input K,
  input R,
  output Q,
  output \~Q 
);
  wire s0;
  wire s1;
  assign s0 = (J & ~ R);
  assign s1 = (K | R);
  DIG_JK_FF #(
    .Default(0)
  )
  DIG_JK_FF_i0 (
    .J( s0 ),
    .C( C ),
    .K( s1 ),
    .Q( Q ),
    .\~Q ( \~Q  )
  );
endmodule

module CE_EDFF (
  input R, // Reset
  input C,
  input IN, // Input
  output Q,
  output \~Q 
);
  wire s0;
  wire s1;
  Mux_2x1 Mux_2x1_i0 (
    .sel( R ),
    .in_0( IN ),
    .in_1( C ),
    .out( s1 )
  );
  assign s0 = ~ R;
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i1 (
    .D( s0 ),
    .C( s1 ),
    .Q( Q ),
    .\~Q ( \~Q  )
  );
endmodule
module DIG_ROM_512X8_OPC (
    input [8:0] A,
    input sel,
    output reg [7:0] D
);
    reg [7:0] my_rom [0:511];

    always @ (*) begin
        if (~sel)
            D = 8'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 8'h0;
        my_rom[1] = 8'h1c;
        my_rom[2] = 8'h2;
        my_rom[3] = 8'h2;
        my_rom[4] = 8'h55;
        my_rom[5] = 8'h17;
        my_rom[6] = 8'h55;
        my_rom[7] = 8'h55;
        my_rom[8] = 8'h5b;
        my_rom[9] = 8'h16;
        my_rom[10] = 8'h54;
        my_rom[11] = 8'h78;
        my_rom[12] = 8'h57;
        my_rom[13] = 8'h19;
        my_rom[14] = 8'h57;
        my_rom[15] = 8'h13;
        my_rom[16] = 8'hf;
        my_rom[17] = 8'h1d;
        my_rom[18] = 8'h1e;
        my_rom[19] = 8'h11;
        my_rom[20] = 8'h55;
        my_rom[21] = 8'h18;
        my_rom[22] = 8'h56;
        my_rom[23] = 8'h55;
        my_rom[24] = 8'h2;
        my_rom[25] = 8'h1b;
        my_rom[26] = 8'h54;
        my_rom[27] = 8'h69;
        my_rom[28] = 8'h57;
        my_rom[29] = 8'h1a;
        my_rom[30] = 8'h58;
        my_rom[31] = 8'h13;
        my_rom[32] = 8'h3;
        my_rom[33] = 8'h1c;
        my_rom[34] = 8'h4;
        my_rom[35] = 8'h5;
        my_rom[36] = 8'h43;
        my_rom[37] = 8'h17;
        my_rom[38] = 8'h55;
        my_rom[39] = 8'h55;
        my_rom[40] = 8'h62;
        my_rom[41] = 8'h16;
        my_rom[42] = 8'h54;
        my_rom[43] = 8'h76;
        my_rom[44] = 8'h45;
        my_rom[45] = 8'h19;
        my_rom[46] = 8'h57;
        my_rom[47] = 8'h13;
        my_rom[48] = 8'h10;
        my_rom[49] = 8'h1d;
        my_rom[50] = 8'h1e;
        my_rom[51] = 8'h12;
        my_rom[52] = 8'h44;
        my_rom[53] = 8'h18;
        my_rom[54] = 8'h56;
        my_rom[55] = 8'h55;
        my_rom[56] = 8'h2;
        my_rom[57] = 8'h1b;
        my_rom[58] = 8'h54;
        my_rom[59] = 8'h6c;
        my_rom[60] = 8'h46;
        my_rom[61] = 8'h1a;
        my_rom[62] = 8'h58;
        my_rom[63] = 8'h13;
        my_rom[64] = 8'h7;
        my_rom[65] = 8'h1c;
        my_rom[66] = 8'h15;
        my_rom[67] = 8'h54;
        my_rom[68] = 8'h55;
        my_rom[69] = 8'h17;
        my_rom[70] = 8'h55;
        my_rom[71] = 8'h55;
        my_rom[72] = 8'h5c;
        my_rom[73] = 8'h16;
        my_rom[74] = 8'h54;
        my_rom[75] = 8'h70;
        my_rom[76] = 8'ha;
        my_rom[77] = 8'h19;
        my_rom[78] = 8'h57;
        my_rom[79] = 8'h13;
        my_rom[80] = 8'hf;
        my_rom[81] = 8'h1d;
        my_rom[82] = 8'h1e;
        my_rom[83] = 8'h11;
        my_rom[84] = 8'h56;
        my_rom[85] = 8'h18;
        my_rom[86] = 8'h56;
        my_rom[87] = 8'h55;
        my_rom[88] = 8'h2;
        my_rom[89] = 8'h1b;
        my_rom[90] = 8'h5e;
        my_rom[91] = 8'h6d;
        my_rom[92] = 8'h79;
        my_rom[93] = 8'h1a;
        my_rom[94] = 8'h58;
        my_rom[95] = 8'h13;
        my_rom[96] = 8'h8;
        my_rom[97] = 8'h1c;
        my_rom[98] = 8'h9;
        my_rom[99] = 8'h6;
        my_rom[100] = 8'h34;
        my_rom[101] = 8'h17;
        my_rom[102] = 8'h55;
        my_rom[103] = 8'h55;
        my_rom[104] = 8'h63;
        my_rom[105] = 8'h16;
        my_rom[106] = 8'h54;
        my_rom[107] = 8'h74;
        my_rom[108] = 8'hb;
        my_rom[109] = 8'h19;
        my_rom[110] = 8'h57;
        my_rom[111] = 8'h13;
        my_rom[112] = 8'h10;
        my_rom[113] = 8'h1d;
        my_rom[114] = 8'h1e;
        my_rom[115] = 8'h12;
        my_rom[116] = 8'h38;
        my_rom[117] = 8'h18;
        my_rom[118] = 8'h56;
        my_rom[119] = 8'h55;
        my_rom[120] = 8'h2;
        my_rom[121] = 8'h1b;
        my_rom[122] = 8'h65;
        my_rom[123] = 8'h71;
        my_rom[124] = 8'hc;
        my_rom[125] = 8'h1a;
        my_rom[126] = 8'h58;
        my_rom[127] = 8'h13;
        my_rom[128] = 8'hd;
        my_rom[129] = 8'h2e;
        my_rom[130] = 8'h2d;
        my_rom[131] = 8'he;
        my_rom[132] = 8'h33;
        my_rom[133] = 8'h31;
        my_rom[134] = 8'h32;
        my_rom[135] = 8'h55;
        my_rom[136] = 8'h6b;
        my_rom[137] = 8'h42;
        my_rom[138] = 8'h72;
        my_rom[139] = 8'h3e;
        my_rom[140] = 8'h3b;
        my_rom[141] = 8'h39;
        my_rom[142] = 8'h3a;
        my_rom[143] = 8'h14;
        my_rom[144] = 8'hf;
        my_rom[145] = 8'h2f;
        my_rom[146] = 8'h30;
        my_rom[147] = 8'h11;
        my_rom[148] = 8'h37;
        my_rom[149] = 8'h35;
        my_rom[150] = 8'h36;
        my_rom[151] = 8'h55;
        my_rom[152] = 8'h73;
        my_rom[153] = 8'h40;
        my_rom[154] = 8'h75;
        my_rom[155] = 8'h41;
        my_rom[156] = 8'h3c;
        my_rom[157] = 8'h3d;
        my_rom[158] = 8'h3f;
        my_rom[159] = 8'h14;
        my_rom[160] = 8'h21;
        my_rom[161] = 8'h1c;
        my_rom[162] = 8'h20;
        my_rom[163] = 8'h22;
        my_rom[164] = 8'h24;
        my_rom[165] = 8'h17;
        my_rom[166] = 8'h23;
        my_rom[167] = 8'h55;
        my_rom[168] = 8'h6f;
        my_rom[169] = 8'h16;
        my_rom[170] = 8'h6e;
        my_rom[171] = 8'h29;
        my_rom[172] = 8'h28;
        my_rom[173] = 8'h19;
        my_rom[174] = 8'h27;
        my_rom[175] = 8'h14;
        my_rom[176] = 8'h10;
        my_rom[177] = 8'h1d;
        my_rom[178] = 8'h1e;
        my_rom[179] = 8'h12;
        my_rom[180] = 8'h26;
        my_rom[181] = 8'h18;
        my_rom[182] = 8'h25;
        my_rom[183] = 8'h55;
        my_rom[184] = 8'h2;
        my_rom[185] = 8'h1b;
        my_rom[186] = 8'h77;
        my_rom[187] = 8'h2c;
        my_rom[188] = 8'h2b;
        my_rom[189] = 8'h1a;
        my_rom[190] = 8'h2a;
        my_rom[191] = 8'h14;
        my_rom[192] = 8'h4c;
        my_rom[193] = 8'h48;
        my_rom[194] = 8'h4d;
        my_rom[195] = 8'h59;
        my_rom[196] = 8'h4f;
        my_rom[197] = 8'h43;
        my_rom[198] = 8'h55;
        my_rom[199] = 8'h55;
        my_rom[200] = 8'h68;
        my_rom[201] = 8'h42;
        my_rom[202] = 8'h6a;
        my_rom[203] = 8'h5a;
        my_rom[204] = 8'h52;
        my_rom[205] = 8'h45;
        my_rom[206] = 8'h57;
        my_rom[207] = 8'h14;
        my_rom[208] = 8'hf;
        my_rom[209] = 8'h49;
        my_rom[210] = 8'h4a;
        my_rom[211] = 8'h11;
        my_rom[212] = 8'h50;
        my_rom[213] = 8'h44;
        my_rom[214] = 8'h56;
        my_rom[215] = 8'h55;
        my_rom[216] = 8'h2;
        my_rom[217] = 8'h47;
        my_rom[218] = 8'h5d;
        my_rom[219] = 8'h5f;
        my_rom[220] = 8'h53;
        my_rom[221] = 8'h46;
        my_rom[222] = 8'h58;
        my_rom[223] = 8'h14;
        my_rom[224] = 8'h4b;
        my_rom[225] = 8'h1c;
        my_rom[226] = 8'h1f;
        my_rom[227] = 8'h59;
        my_rom[228] = 8'h4e;
        my_rom[229] = 8'h17;
        my_rom[230] = 8'h55;
        my_rom[231] = 8'h55;
        my_rom[232] = 8'h67;
        my_rom[233] = 8'h16;
        my_rom[234] = 8'h1;
        my_rom[235] = 8'h5a;
        my_rom[236] = 8'h51;
        my_rom[237] = 8'h19;
        my_rom[238] = 8'h57;
        my_rom[239] = 8'h14;
        my_rom[240] = 8'h10;
        my_rom[241] = 8'h1d;
        my_rom[242] = 8'h1e;
        my_rom[243] = 8'h12;
        my_rom[244] = 8'h60;
        my_rom[245] = 8'h18;
        my_rom[246] = 8'h56;
        my_rom[247] = 8'h55;
        my_rom[248] = 8'h2;
        my_rom[249] = 8'h1b;
        my_rom[250] = 8'h64;
        my_rom[251] = 8'h66;
        my_rom[252] = 8'h61;
        my_rom[253] = 8'h1a;
        my_rom[254] = 8'h58;
        my_rom[255] = 8'h14;
        my_rom[256] = 8'h0;
        my_rom[257] = 8'h0;
        my_rom[258] = 8'h0;
        my_rom[259] = 8'h0;
        my_rom[260] = 8'h0;
        my_rom[261] = 8'h17;
        my_rom[262] = 8'h0;
        my_rom[263] = 8'h0;
        my_rom[264] = 8'h0;
        my_rom[265] = 8'h16;
        my_rom[266] = 8'h0;
        my_rom[267] = 8'h0;
        my_rom[268] = 8'h0;
        my_rom[269] = 8'h19;
        my_rom[270] = 8'h0;
        my_rom[271] = 8'h0;
        my_rom[272] = 8'h0;
        my_rom[273] = 8'h0;
        my_rom[274] = 8'h0;
        my_rom[275] = 8'h0;
        my_rom[276] = 8'h0;
        my_rom[277] = 8'h18;
        my_rom[278] = 8'h0;
        my_rom[279] = 8'h0;
        my_rom[280] = 8'h0;
        my_rom[281] = 8'h1b;
        my_rom[282] = 8'h0;
        my_rom[283] = 8'h0;
        my_rom[284] = 8'h0;
        my_rom[285] = 8'h1a;
        my_rom[286] = 8'h0;
        my_rom[287] = 8'h0;
        my_rom[288] = 8'h0;
        my_rom[289] = 8'h0;
        my_rom[290] = 8'h0;
        my_rom[291] = 8'h0;
        my_rom[292] = 8'h0;
        my_rom[293] = 8'h17;
        my_rom[294] = 8'h0;
        my_rom[295] = 8'h0;
        my_rom[296] = 8'h0;
        my_rom[297] = 8'h16;
        my_rom[298] = 8'h0;
        my_rom[299] = 8'h0;
        my_rom[300] = 8'h0;
        my_rom[301] = 8'h19;
        my_rom[302] = 8'h0;
        my_rom[303] = 8'h0;
        my_rom[304] = 8'h0;
        my_rom[305] = 8'h0;
        my_rom[306] = 8'h0;
        my_rom[307] = 8'h0;
        my_rom[308] = 8'h0;
        my_rom[309] = 8'h18;
        my_rom[310] = 8'h0;
        my_rom[311] = 8'h0;
        my_rom[312] = 8'h0;
        my_rom[313] = 8'h1b;
        my_rom[314] = 8'h0;
        my_rom[315] = 8'h7a;
        my_rom[316] = 8'h0;
        my_rom[317] = 8'h1a;
        my_rom[318] = 8'h0;
        my_rom[319] = 8'h0;
        my_rom[320] = 8'h0;
        my_rom[321] = 8'h0;
        my_rom[322] = 8'h0;
        my_rom[323] = 8'h0;
        my_rom[324] = 8'h0;
        my_rom[325] = 8'h17;
        my_rom[326] = 8'h0;
        my_rom[327] = 8'h0;
        my_rom[328] = 8'h81;
        my_rom[329] = 8'h16;
        my_rom[330] = 8'h0;
        my_rom[331] = 8'h7b;
        my_rom[332] = 8'h0;
        my_rom[333] = 8'h19;
        my_rom[334] = 8'h0;
        my_rom[335] = 8'h0;
        my_rom[336] = 8'h0;
        my_rom[337] = 8'h0;
        my_rom[338] = 8'h0;
        my_rom[339] = 8'h0;
        my_rom[340] = 8'h0;
        my_rom[341] = 8'h18;
        my_rom[342] = 8'h0;
        my_rom[343] = 8'h0;
        my_rom[344] = 8'h0;
        my_rom[345] = 8'h1b;
        my_rom[346] = 8'h0;
        my_rom[347] = 8'h7c;
        my_rom[348] = 8'h0;
        my_rom[349] = 8'h1a;
        my_rom[350] = 8'h0;
        my_rom[351] = 8'h0;
        my_rom[352] = 8'h0;
        my_rom[353] = 8'h0;
        my_rom[354] = 8'h0;
        my_rom[355] = 8'h0;
        my_rom[356] = 8'h0;
        my_rom[357] = 8'h17;
        my_rom[358] = 8'h0;
        my_rom[359] = 8'h0;
        my_rom[360] = 8'h82;
        my_rom[361] = 8'h16;
        my_rom[362] = 8'h0;
        my_rom[363] = 8'h7d;
        my_rom[364] = 8'h0;
        my_rom[365] = 8'h19;
        my_rom[366] = 8'h0;
        my_rom[367] = 8'h0;
        my_rom[368] = 8'h0;
        my_rom[369] = 8'h0;
        my_rom[370] = 8'h0;
        my_rom[371] = 8'h0;
        my_rom[372] = 8'h0;
        my_rom[373] = 8'h18;
        my_rom[374] = 8'h0;
        my_rom[375] = 8'h0;
        my_rom[376] = 8'h0;
        my_rom[377] = 8'h1b;
        my_rom[378] = 8'h0;
        my_rom[379] = 8'h7e;
        my_rom[380] = 8'h0;
        my_rom[381] = 8'h1a;
        my_rom[382] = 8'h0;
        my_rom[383] = 8'h0;
        my_rom[384] = 8'h0;
        my_rom[385] = 8'h85;
        my_rom[386] = 8'h80;
        my_rom[387] = 8'h0;
        my_rom[388] = 8'h0;
        my_rom[389] = 8'h0;
        my_rom[390] = 8'h0;
        my_rom[391] = 8'h0;
        my_rom[392] = 8'h0;
        my_rom[393] = 8'h0;
        my_rom[394] = 8'h0;
        my_rom[395] = 8'h0;
        my_rom[396] = 8'h0;
        my_rom[397] = 8'h0;
        my_rom[398] = 8'h0;
        my_rom[399] = 8'h0;
        my_rom[400] = 8'h0;
        my_rom[401] = 8'h87;
        my_rom[402] = 8'h0;
        my_rom[403] = 8'h0;
        my_rom[404] = 8'h0;
        my_rom[405] = 8'h0;
        my_rom[406] = 8'h0;
        my_rom[407] = 8'h0;
        my_rom[408] = 8'h0;
        my_rom[409] = 8'h0;
        my_rom[410] = 8'h0;
        my_rom[411] = 8'h0;
        my_rom[412] = 8'h0;
        my_rom[413] = 8'h0;
        my_rom[414] = 8'h0;
        my_rom[415] = 8'h0;
        my_rom[416] = 8'h0;
        my_rom[417] = 8'h0;
        my_rom[418] = 8'h0;
        my_rom[419] = 8'h0;
        my_rom[420] = 8'h0;
        my_rom[421] = 8'h0;
        my_rom[422] = 8'h0;
        my_rom[423] = 8'h0;
        my_rom[424] = 8'h0;
        my_rom[425] = 8'h0;
        my_rom[426] = 8'h0;
        my_rom[427] = 8'h0;
        my_rom[428] = 8'h0;
        my_rom[429] = 8'h0;
        my_rom[430] = 8'h0;
        my_rom[431] = 8'h0;
        my_rom[432] = 8'h0;
        my_rom[433] = 8'h0;
        my_rom[434] = 8'h0;
        my_rom[435] = 8'h0;
        my_rom[436] = 8'h0;
        my_rom[437] = 8'h0;
        my_rom[438] = 8'h0;
        my_rom[439] = 8'h0;
        my_rom[440] = 8'h0;
        my_rom[441] = 8'h0;
        my_rom[442] = 8'h0;
        my_rom[443] = 8'h0;
        my_rom[444] = 8'h0;
        my_rom[445] = 8'h0;
        my_rom[446] = 8'h0;
        my_rom[447] = 8'h0;
        my_rom[448] = 8'h0;
        my_rom[449] = 8'h0;
        my_rom[450] = 8'h0;
        my_rom[451] = 8'h0;
        my_rom[452] = 8'h0;
        my_rom[453] = 8'h0;
        my_rom[454] = 8'h55;
        my_rom[455] = 8'h0;
        my_rom[456] = 8'h54;
        my_rom[457] = 8'h0;
        my_rom[458] = 8'h5a;
        my_rom[459] = 8'h5a;
        my_rom[460] = 8'h0;
        my_rom[461] = 8'h0;
        my_rom[462] = 8'h57;
        my_rom[463] = 8'h0;
        my_rom[464] = 8'h0;
        my_rom[465] = 8'h0;
        my_rom[466] = 8'h0;
        my_rom[467] = 8'h0;
        my_rom[468] = 8'h0;
        my_rom[469] = 8'h0;
        my_rom[470] = 8'h56;
        my_rom[471] = 8'h0;
        my_rom[472] = 8'h0;
        my_rom[473] = 8'h0;
        my_rom[474] = 8'h0;
        my_rom[475] = 8'h0;
        my_rom[476] = 8'h0;
        my_rom[477] = 8'h0;
        my_rom[478] = 8'h58;
        my_rom[479] = 8'h0;
        my_rom[480] = 8'h0;
        my_rom[481] = 8'h86;
        my_rom[482] = 8'h7f;
        my_rom[483] = 8'h0;
        my_rom[484] = 8'h0;
        my_rom[485] = 8'h0;
        my_rom[486] = 8'h55;
        my_rom[487] = 8'h0;
        my_rom[488] = 8'h54;
        my_rom[489] = 8'h0;
        my_rom[490] = 8'h1;
        my_rom[491] = 8'h5a;
        my_rom[492] = 8'h0;
        my_rom[493] = 8'h0;
        my_rom[494] = 8'h57;
        my_rom[495] = 8'h83;
        my_rom[496] = 8'h0;
        my_rom[497] = 8'h86;
        my_rom[498] = 8'h0;
        my_rom[499] = 8'h0;
        my_rom[500] = 8'h0;
        my_rom[501] = 8'h0;
        my_rom[502] = 8'h56;
        my_rom[503] = 8'h0;
        my_rom[504] = 8'h0;
        my_rom[505] = 8'h0;
        my_rom[506] = 8'h0;
        my_rom[507] = 8'h0;
        my_rom[508] = 8'h0;
        my_rom[509] = 8'h0;
        my_rom[510] = 8'h58;
        my_rom[511] = 8'h84;
    end
endmodule

module DIG_ROM_512X4_CON (
    input [8:0] A,
    input sel,
    output reg [3:0] D
);
    reg [3:0] my_rom [0:495];

    always @ (*) begin
        if (~sel)
            D = 4'hz;
        else if (A > 9'h1ef)
            D = 4'h0;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 4'h0;
        my_rom[1] = 4'h0;
        my_rom[2] = 4'h0;
        my_rom[3] = 4'h0;
        my_rom[4] = 4'h0;
        my_rom[5] = 4'h0;
        my_rom[6] = 4'h0;
        my_rom[7] = 4'h0;
        my_rom[8] = 4'h0;
        my_rom[9] = 4'h0;
        my_rom[10] = 4'h0;
        my_rom[11] = 4'h0;
        my_rom[12] = 4'h0;
        my_rom[13] = 4'h0;
        my_rom[14] = 4'h0;
        my_rom[15] = 4'h8;
        my_rom[16] = 4'h7;
        my_rom[17] = 4'h0;
        my_rom[18] = 4'h0;
        my_rom[19] = 4'h7;
        my_rom[20] = 4'h0;
        my_rom[21] = 4'h0;
        my_rom[22] = 4'h0;
        my_rom[23] = 4'h0;
        my_rom[24] = 4'h0;
        my_rom[25] = 4'h0;
        my_rom[26] = 4'h0;
        my_rom[27] = 4'h0;
        my_rom[28] = 4'h0;
        my_rom[29] = 4'h0;
        my_rom[30] = 4'h0;
        my_rom[31] = 4'h9;
        my_rom[32] = 4'h0;
        my_rom[33] = 4'h0;
        my_rom[34] = 4'h0;
        my_rom[35] = 4'h0;
        my_rom[36] = 4'h0;
        my_rom[37] = 4'h0;
        my_rom[38] = 4'h0;
        my_rom[39] = 4'h0;
        my_rom[40] = 4'h0;
        my_rom[41] = 4'h0;
        my_rom[42] = 4'h0;
        my_rom[43] = 4'h0;
        my_rom[44] = 4'h0;
        my_rom[45] = 4'h0;
        my_rom[46] = 4'h0;
        my_rom[47] = 4'ha;
        my_rom[48] = 4'h7;
        my_rom[49] = 4'h0;
        my_rom[50] = 4'h0;
        my_rom[51] = 4'h7;
        my_rom[52] = 4'h0;
        my_rom[53] = 4'h0;
        my_rom[54] = 4'h0;
        my_rom[55] = 4'h0;
        my_rom[56] = 4'h0;
        my_rom[57] = 4'h0;
        my_rom[58] = 4'h0;
        my_rom[59] = 4'h0;
        my_rom[60] = 4'h0;
        my_rom[61] = 4'h0;
        my_rom[62] = 4'h0;
        my_rom[63] = 4'hb;
        my_rom[64] = 4'h0;
        my_rom[65] = 4'h0;
        my_rom[66] = 4'h0;
        my_rom[67] = 4'h0;
        my_rom[68] = 4'h0;
        my_rom[69] = 4'h0;
        my_rom[70] = 4'h0;
        my_rom[71] = 4'h0;
        my_rom[72] = 4'h0;
        my_rom[73] = 4'h0;
        my_rom[74] = 4'h0;
        my_rom[75] = 4'h0;
        my_rom[76] = 4'h0;
        my_rom[77] = 4'h0;
        my_rom[78] = 4'h0;
        my_rom[79] = 4'hc;
        my_rom[80] = 4'h6;
        my_rom[81] = 4'h0;
        my_rom[82] = 4'h0;
        my_rom[83] = 4'h6;
        my_rom[84] = 4'h0;
        my_rom[85] = 4'h0;
        my_rom[86] = 4'h0;
        my_rom[87] = 4'h0;
        my_rom[88] = 4'h0;
        my_rom[89] = 4'h0;
        my_rom[90] = 4'h0;
        my_rom[91] = 4'h0;
        my_rom[92] = 4'h0;
        my_rom[93] = 4'h0;
        my_rom[94] = 4'h0;
        my_rom[95] = 4'hd;
        my_rom[96] = 4'h0;
        my_rom[97] = 4'h0;
        my_rom[98] = 4'h0;
        my_rom[99] = 4'h0;
        my_rom[100] = 4'h0;
        my_rom[101] = 4'h0;
        my_rom[102] = 4'h0;
        my_rom[103] = 4'h0;
        my_rom[104] = 4'h0;
        my_rom[105] = 4'h0;
        my_rom[106] = 4'h0;
        my_rom[107] = 4'h0;
        my_rom[108] = 4'h0;
        my_rom[109] = 4'h0;
        my_rom[110] = 4'h0;
        my_rom[111] = 4'he;
        my_rom[112] = 4'h6;
        my_rom[113] = 4'h0;
        my_rom[114] = 4'h0;
        my_rom[115] = 4'h6;
        my_rom[116] = 4'h0;
        my_rom[117] = 4'h0;
        my_rom[118] = 4'h0;
        my_rom[119] = 4'h0;
        my_rom[120] = 4'h0;
        my_rom[121] = 4'h0;
        my_rom[122] = 4'h0;
        my_rom[123] = 4'h0;
        my_rom[124] = 4'h0;
        my_rom[125] = 4'h0;
        my_rom[126] = 4'h0;
        my_rom[127] = 4'hf;
        my_rom[128] = 4'h0;
        my_rom[129] = 4'h0;
        my_rom[130] = 4'h0;
        my_rom[131] = 4'h0;
        my_rom[132] = 4'h0;
        my_rom[133] = 4'h0;
        my_rom[134] = 4'h0;
        my_rom[135] = 4'h0;
        my_rom[136] = 4'h0;
        my_rom[137] = 4'h0;
        my_rom[138] = 4'h0;
        my_rom[139] = 4'h0;
        my_rom[140] = 4'h0;
        my_rom[141] = 4'h0;
        my_rom[142] = 4'h0;
        my_rom[143] = 4'h8;
        my_rom[144] = 4'h4;
        my_rom[145] = 4'h0;
        my_rom[146] = 4'h0;
        my_rom[147] = 4'h4;
        my_rom[148] = 4'h0;
        my_rom[149] = 4'h0;
        my_rom[150] = 4'h0;
        my_rom[151] = 4'h0;
        my_rom[152] = 4'h0;
        my_rom[153] = 4'h0;
        my_rom[154] = 4'h0;
        my_rom[155] = 4'h0;
        my_rom[156] = 4'h0;
        my_rom[157] = 4'h0;
        my_rom[158] = 4'h0;
        my_rom[159] = 4'h9;
        my_rom[160] = 4'h0;
        my_rom[161] = 4'h0;
        my_rom[162] = 4'h0;
        my_rom[163] = 4'h0;
        my_rom[164] = 4'h0;
        my_rom[165] = 4'h0;
        my_rom[166] = 4'h0;
        my_rom[167] = 4'h0;
        my_rom[168] = 4'h0;
        my_rom[169] = 4'h0;
        my_rom[170] = 4'h0;
        my_rom[171] = 4'h0;
        my_rom[172] = 4'h0;
        my_rom[173] = 4'h0;
        my_rom[174] = 4'h0;
        my_rom[175] = 4'ha;
        my_rom[176] = 4'h4;
        my_rom[177] = 4'h0;
        my_rom[178] = 4'h0;
        my_rom[179] = 4'h4;
        my_rom[180] = 4'h0;
        my_rom[181] = 4'h0;
        my_rom[182] = 4'h0;
        my_rom[183] = 4'h0;
        my_rom[184] = 4'h0;
        my_rom[185] = 4'h0;
        my_rom[186] = 4'h0;
        my_rom[187] = 4'h0;
        my_rom[188] = 4'h0;
        my_rom[189] = 4'h0;
        my_rom[190] = 4'h0;
        my_rom[191] = 4'hb;
        my_rom[192] = 4'h0;
        my_rom[193] = 4'h0;
        my_rom[194] = 4'h0;
        my_rom[195] = 4'h0;
        my_rom[196] = 4'h0;
        my_rom[197] = 4'h0;
        my_rom[198] = 4'h0;
        my_rom[199] = 4'h0;
        my_rom[200] = 4'h0;
        my_rom[201] = 4'h0;
        my_rom[202] = 4'h0;
        my_rom[203] = 4'h0;
        my_rom[204] = 4'h0;
        my_rom[205] = 4'h0;
        my_rom[206] = 4'h0;
        my_rom[207] = 4'hc;
        my_rom[208] = 4'h5;
        my_rom[209] = 4'h0;
        my_rom[210] = 4'h0;
        my_rom[211] = 4'h5;
        my_rom[212] = 4'h0;
        my_rom[213] = 4'h0;
        my_rom[214] = 4'h0;
        my_rom[215] = 4'h0;
        my_rom[216] = 4'h0;
        my_rom[217] = 4'h0;
        my_rom[218] = 4'h0;
        my_rom[219] = 4'h0;
        my_rom[220] = 4'h0;
        my_rom[221] = 4'h0;
        my_rom[222] = 4'h0;
        my_rom[223] = 4'hd;
        my_rom[224] = 4'h0;
        my_rom[225] = 4'h0;
        my_rom[226] = 4'h0;
        my_rom[227] = 4'h0;
        my_rom[228] = 4'h0;
        my_rom[229] = 4'h0;
        my_rom[230] = 4'h0;
        my_rom[231] = 4'h0;
        my_rom[232] = 4'h0;
        my_rom[233] = 4'h0;
        my_rom[234] = 4'h0;
        my_rom[235] = 4'h0;
        my_rom[236] = 4'h0;
        my_rom[237] = 4'h0;
        my_rom[238] = 4'h0;
        my_rom[239] = 4'he;
        my_rom[240] = 4'h5;
        my_rom[241] = 4'h0;
        my_rom[242] = 4'h0;
        my_rom[243] = 4'h5;
        my_rom[244] = 4'h0;
        my_rom[245] = 4'h0;
        my_rom[246] = 4'h0;
        my_rom[247] = 4'h0;
        my_rom[248] = 4'h0;
        my_rom[249] = 4'h0;
        my_rom[250] = 4'h0;
        my_rom[251] = 4'h0;
        my_rom[252] = 4'h0;
        my_rom[253] = 4'h0;
        my_rom[254] = 4'h0;
        my_rom[255] = 4'hf;
        my_rom[256] = 4'h0;
        my_rom[257] = 4'h0;
        my_rom[258] = 4'h0;
        my_rom[259] = 4'h0;
        my_rom[260] = 4'h0;
        my_rom[261] = 4'h0;
        my_rom[262] = 4'h0;
        my_rom[263] = 4'h0;
        my_rom[264] = 4'h0;
        my_rom[265] = 4'h0;
        my_rom[266] = 4'h0;
        my_rom[267] = 4'h0;
        my_rom[268] = 4'h0;
        my_rom[269] = 4'h0;
        my_rom[270] = 4'h0;
        my_rom[271] = 4'h0;
        my_rom[272] = 4'h0;
        my_rom[273] = 4'h0;
        my_rom[274] = 4'h0;
        my_rom[275] = 4'h0;
        my_rom[276] = 4'h0;
        my_rom[277] = 4'h0;
        my_rom[278] = 4'h0;
        my_rom[279] = 4'h0;
        my_rom[280] = 4'h0;
        my_rom[281] = 4'h0;
        my_rom[282] = 4'h0;
        my_rom[283] = 4'h0;
        my_rom[284] = 4'h0;
        my_rom[285] = 4'h0;
        my_rom[286] = 4'h0;
        my_rom[287] = 4'h0;
        my_rom[288] = 4'h0;
        my_rom[289] = 4'h0;
        my_rom[290] = 4'h0;
        my_rom[291] = 4'h0;
        my_rom[292] = 4'h0;
        my_rom[293] = 4'h0;
        my_rom[294] = 4'h0;
        my_rom[295] = 4'h0;
        my_rom[296] = 4'h0;
        my_rom[297] = 4'h0;
        my_rom[298] = 4'h0;
        my_rom[299] = 4'h0;
        my_rom[300] = 4'h0;
        my_rom[301] = 4'h0;
        my_rom[302] = 4'h0;
        my_rom[303] = 4'h0;
        my_rom[304] = 4'h0;
        my_rom[305] = 4'h0;
        my_rom[306] = 4'h0;
        my_rom[307] = 4'h0;
        my_rom[308] = 4'h0;
        my_rom[309] = 4'h0;
        my_rom[310] = 4'h0;
        my_rom[311] = 4'h0;
        my_rom[312] = 4'h0;
        my_rom[313] = 4'h0;
        my_rom[314] = 4'h0;
        my_rom[315] = 4'h0;
        my_rom[316] = 4'h0;
        my_rom[317] = 4'h0;
        my_rom[318] = 4'h0;
        my_rom[319] = 4'h0;
        my_rom[320] = 4'h0;
        my_rom[321] = 4'h0;
        my_rom[322] = 4'h0;
        my_rom[323] = 4'h0;
        my_rom[324] = 4'h0;
        my_rom[325] = 4'h0;
        my_rom[326] = 4'h0;
        my_rom[327] = 4'h0;
        my_rom[328] = 4'h0;
        my_rom[329] = 4'h0;
        my_rom[330] = 4'h0;
        my_rom[331] = 4'h0;
        my_rom[332] = 4'h0;
        my_rom[333] = 4'h0;
        my_rom[334] = 4'h0;
        my_rom[335] = 4'h0;
        my_rom[336] = 4'h0;
        my_rom[337] = 4'h0;
        my_rom[338] = 4'h0;
        my_rom[339] = 4'h0;
        my_rom[340] = 4'h0;
        my_rom[341] = 4'h0;
        my_rom[342] = 4'h0;
        my_rom[343] = 4'h0;
        my_rom[344] = 4'h0;
        my_rom[345] = 4'h0;
        my_rom[346] = 4'h0;
        my_rom[347] = 4'h0;
        my_rom[348] = 4'h0;
        my_rom[349] = 4'h0;
        my_rom[350] = 4'h0;
        my_rom[351] = 4'h0;
        my_rom[352] = 4'h0;
        my_rom[353] = 4'h0;
        my_rom[354] = 4'h0;
        my_rom[355] = 4'h0;
        my_rom[356] = 4'h0;
        my_rom[357] = 4'h0;
        my_rom[358] = 4'h0;
        my_rom[359] = 4'h0;
        my_rom[360] = 4'h0;
        my_rom[361] = 4'h0;
        my_rom[362] = 4'h0;
        my_rom[363] = 4'h0;
        my_rom[364] = 4'h0;
        my_rom[365] = 4'h0;
        my_rom[366] = 4'h0;
        my_rom[367] = 4'h0;
        my_rom[368] = 4'h0;
        my_rom[369] = 4'h0;
        my_rom[370] = 4'h0;
        my_rom[371] = 4'h0;
        my_rom[372] = 4'h0;
        my_rom[373] = 4'h0;
        my_rom[374] = 4'h0;
        my_rom[375] = 4'h0;
        my_rom[376] = 4'h0;
        my_rom[377] = 4'h0;
        my_rom[378] = 4'h0;
        my_rom[379] = 4'h0;
        my_rom[380] = 4'h0;
        my_rom[381] = 4'h0;
        my_rom[382] = 4'h0;
        my_rom[383] = 4'h0;
        my_rom[384] = 4'h0;
        my_rom[385] = 4'h0;
        my_rom[386] = 4'h0;
        my_rom[387] = 4'h0;
        my_rom[388] = 4'h0;
        my_rom[389] = 4'h0;
        my_rom[390] = 4'h0;
        my_rom[391] = 4'h0;
        my_rom[392] = 4'h0;
        my_rom[393] = 4'h0;
        my_rom[394] = 4'h0;
        my_rom[395] = 4'h0;
        my_rom[396] = 4'h0;
        my_rom[397] = 4'h0;
        my_rom[398] = 4'h0;
        my_rom[399] = 4'h0;
        my_rom[400] = 4'h0;
        my_rom[401] = 4'h0;
        my_rom[402] = 4'h0;
        my_rom[403] = 4'h0;
        my_rom[404] = 4'h0;
        my_rom[405] = 4'h0;
        my_rom[406] = 4'h0;
        my_rom[407] = 4'h0;
        my_rom[408] = 4'h0;
        my_rom[409] = 4'h0;
        my_rom[410] = 4'h0;
        my_rom[411] = 4'h0;
        my_rom[412] = 4'h0;
        my_rom[413] = 4'h0;
        my_rom[414] = 4'h0;
        my_rom[415] = 4'h0;
        my_rom[416] = 4'h0;
        my_rom[417] = 4'h0;
        my_rom[418] = 4'h0;
        my_rom[419] = 4'h0;
        my_rom[420] = 4'h0;
        my_rom[421] = 4'h0;
        my_rom[422] = 4'h0;
        my_rom[423] = 4'h0;
        my_rom[424] = 4'h0;
        my_rom[425] = 4'h0;
        my_rom[426] = 4'h0;
        my_rom[427] = 4'h0;
        my_rom[428] = 4'h0;
        my_rom[429] = 4'h0;
        my_rom[430] = 4'h0;
        my_rom[431] = 4'h0;
        my_rom[432] = 4'h0;
        my_rom[433] = 4'h0;
        my_rom[434] = 4'h0;
        my_rom[435] = 4'h0;
        my_rom[436] = 4'h0;
        my_rom[437] = 4'h0;
        my_rom[438] = 4'h0;
        my_rom[439] = 4'h0;
        my_rom[440] = 4'h0;
        my_rom[441] = 4'h0;
        my_rom[442] = 4'h0;
        my_rom[443] = 4'h0;
        my_rom[444] = 4'h0;
        my_rom[445] = 4'h0;
        my_rom[446] = 4'h0;
        my_rom[447] = 4'h0;
        my_rom[448] = 4'h0;
        my_rom[449] = 4'h0;
        my_rom[450] = 4'h0;
        my_rom[451] = 4'h0;
        my_rom[452] = 4'h0;
        my_rom[453] = 4'h0;
        my_rom[454] = 4'h0;
        my_rom[455] = 4'h0;
        my_rom[456] = 4'h0;
        my_rom[457] = 4'h0;
        my_rom[458] = 4'h0;
        my_rom[459] = 4'h0;
        my_rom[460] = 4'h0;
        my_rom[461] = 4'h0;
        my_rom[462] = 4'h0;
        my_rom[463] = 4'h0;
        my_rom[464] = 4'h0;
        my_rom[465] = 4'h0;
        my_rom[466] = 4'h0;
        my_rom[467] = 4'h0;
        my_rom[468] = 4'h0;
        my_rom[469] = 4'h0;
        my_rom[470] = 4'h0;
        my_rom[471] = 4'h0;
        my_rom[472] = 4'h0;
        my_rom[473] = 4'h0;
        my_rom[474] = 4'h0;
        my_rom[475] = 4'h0;
        my_rom[476] = 4'h0;
        my_rom[477] = 4'h0;
        my_rom[478] = 4'h0;
        my_rom[479] = 4'h0;
        my_rom[480] = 4'h0;
        my_rom[481] = 4'h0;
        my_rom[482] = 4'h0;
        my_rom[483] = 4'h0;
        my_rom[484] = 4'h0;
        my_rom[485] = 4'h0;
        my_rom[486] = 4'h0;
        my_rom[487] = 4'h0;
        my_rom[488] = 4'h0;
        my_rom[489] = 4'h0;
        my_rom[490] = 4'h0;
        my_rom[491] = 4'h0;
        my_rom[492] = 4'h0;
        my_rom[493] = 4'h0;
        my_rom[494] = 4'h0;
        my_rom[495] = 4'h3;
    end
endmodule

module DIG_ROM_8X8_INA (
    input [2:0] A,
    input sel,
    output reg [7:0] D
);
    reg [7:0] my_rom [0:4];

    always @ (*) begin
        if (~sel)
            D = 8'hz;
        else if (A > 3'h4)
            D = 8'h0;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 8'h93;
        my_rom[1] = 8'h89;
        my_rom[2] = 8'h8d;
        my_rom[3] = 8'h79;
        my_rom[4] = 8'ha9;
    end
endmodule

module DIG_ROM_2X8_RES (
    input [0:0] A,
    input sel,
    output reg [7:0] D
);
    reg [7:0] my_rom [0:1];

    always @ (*) begin
        if (~sel)
            D = 8'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 8'h79;
        my_rom[1] = 8'ha9;
    end
endmodule

module DIG_ROM_1024X8_INST0 (
    input [9:0] A,
    input sel,
    output reg [7:0] D
);
    reg [7:0] my_rom [0:1088];

    always @ (*) begin
        if (~sel)
            D = 8'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 8'h93;
        my_rom[1] = 8'h89;
        my_rom[2] = 8'h8d;
        my_rom[3] = 8'h79;
        my_rom[4] = 8'h32;
        my_rom[5] = 8'h0;
        my_rom[6] = 8'h0;
        my_rom[7] = 8'h0;
        my_rom[8] = 8'h6f;
        my_rom[9] = 8'h0;
        my_rom[10] = 8'h0;
        my_rom[11] = 8'h0;
        my_rom[12] = 8'h0;
        my_rom[13] = 8'h0;
        my_rom[14] = 8'h0;
        my_rom[15] = 8'h0;
        my_rom[16] = 8'he;
        my_rom[17] = 8'h0;
        my_rom[18] = 8'h0;
        my_rom[19] = 8'h0;
        my_rom[20] = 8'h0;
        my_rom[21] = 8'h0;
        my_rom[22] = 8'h0;
        my_rom[23] = 8'h0;
        my_rom[24] = 8'h94;
        my_rom[25] = 8'h8a;
        my_rom[26] = 8'h76;
        my_rom[27] = 8'h2c;
        my_rom[28] = 8'h0;
        my_rom[29] = 8'h0;
        my_rom[30] = 8'h0;
        my_rom[31] = 8'h0;
        my_rom[32] = 8'h3c;
        my_rom[33] = 8'h37;
        my_rom[34] = 8'h94;
        my_rom[35] = 8'h8a;
        my_rom[36] = 8'h77;
        my_rom[37] = 8'h30;
        my_rom[38] = 8'h0;
        my_rom[39] = 8'h0;
        my_rom[40] = 8'h3c;
        my_rom[41] = 8'h37;
        my_rom[42] = 8'h94;
        my_rom[43] = 8'h8a;
        my_rom[44] = 8'h78;
        my_rom[45] = 8'h31;
        my_rom[46] = 8'h0;
        my_rom[47] = 8'h0;
        my_rom[48] = 8'h94;
        my_rom[49] = 8'h8a;
        my_rom[50] = 8'h76;
        my_rom[51] = 8'h1;
        my_rom[52] = 8'h0;
        my_rom[53] = 8'h0;
        my_rom[54] = 8'h0;
        my_rom[55] = 8'h0;
        my_rom[56] = 8'h8;
        my_rom[57] = 8'h44;
        my_rom[58] = 8'h2e;
        my_rom[59] = 8'h72;
        my_rom[60] = 8'h0;
        my_rom[61] = 8'h0;
        my_rom[62] = 8'h0;
        my_rom[63] = 8'h0;
        my_rom[64] = 8'h43;
        my_rom[65] = 8'h2d;
        my_rom[66] = 8'h71;
        my_rom[67] = 8'h0;
        my_rom[68] = 8'h0;
        my_rom[69] = 8'h0;
        my_rom[70] = 8'h0;
        my_rom[71] = 8'h0;
        my_rom[72] = 8'h3b;
        my_rom[73] = 8'h45;
        my_rom[74] = 8'h2f;
        my_rom[75] = 8'h7b;
        my_rom[76] = 8'h0;
        my_rom[77] = 8'h0;
        my_rom[78] = 8'h0;
        my_rom[79] = 8'h0;
        my_rom[80] = 8'h42;
        my_rom[81] = 8'h2c;
        my_rom[82] = 8'h0;
        my_rom[83] = 8'h0;
        my_rom[84] = 8'h0;
        my_rom[85] = 8'h0;
        my_rom[86] = 8'h0;
        my_rom[87] = 8'h0;
        my_rom[88] = 8'h3c;
        my_rom[89] = 8'h37;
        my_rom[90] = 8'h46;
        my_rom[91] = 8'h30;
        my_rom[92] = 8'h0;
        my_rom[93] = 8'h0;
        my_rom[94] = 8'h0;
        my_rom[95] = 8'h0;
        my_rom[96] = 8'h3c;
        my_rom[97] = 8'h37;
        my_rom[98] = 8'h48;
        my_rom[99] = 8'h31;
        my_rom[100] = 8'h0;
        my_rom[101] = 8'h0;
        my_rom[102] = 8'h0;
        my_rom[103] = 8'h0;
        my_rom[104] = 8'h2;
        my_rom[105] = 8'h0;
        my_rom[106] = 8'h0;
        my_rom[107] = 8'h0;
        my_rom[108] = 8'h0;
        my_rom[109] = 8'h0;
        my_rom[110] = 8'h0;
        my_rom[111] = 8'h0;
        my_rom[112] = 8'h42;
        my_rom[113] = 8'h1;
        my_rom[114] = 8'h0;
        my_rom[115] = 8'h0;
        my_rom[116] = 8'h0;
        my_rom[117] = 8'h0;
        my_rom[118] = 8'h0;
        my_rom[119] = 8'h0;
        my_rom[120] = 8'h4;
        my_rom[121] = 8'h2;
        my_rom[122] = 8'h0;
        my_rom[123] = 8'h0;
        my_rom[124] = 8'h0;
        my_rom[125] = 8'h6f;
        my_rom[126] = 8'h0;
        my_rom[127] = 8'h0;
        my_rom[128] = 8'h4;
        my_rom[129] = 8'h6f;
        my_rom[130] = 8'h0;
        my_rom[131] = 8'h0;
        my_rom[132] = 8'h0;
        my_rom[133] = 8'h2;
        my_rom[134] = 8'h0;
        my_rom[135] = 8'h0;
        my_rom[136] = 8'h4;
        my_rom[137] = 8'h42;
        my_rom[138] = 8'h1;
        my_rom[139] = 8'h0;
        my_rom[140] = 8'h0;
        my_rom[141] = 8'h6f;
        my_rom[142] = 8'h0;
        my_rom[143] = 8'h0;
        my_rom[144] = 8'h4;
        my_rom[145] = 8'h6f;
        my_rom[146] = 8'h0;
        my_rom[147] = 8'h0;
        my_rom[148] = 8'h0;
        my_rom[149] = 8'h42;
        my_rom[150] = 8'h1;
        my_rom[151] = 8'h0;
        my_rom[152] = 8'h42;
        my_rom[153] = 8'h3;
        my_rom[154] = 8'h2;
        my_rom[155] = 8'h6f;
        my_rom[156] = 8'h0;
        my_rom[157] = 8'h0;
        my_rom[158] = 8'h0;
        my_rom[159] = 8'h0;
        my_rom[160] = 8'h42;
        my_rom[161] = 8'h3;
        my_rom[162] = 8'h6f;
        my_rom[163] = 8'h2;
        my_rom[164] = 8'h0;
        my_rom[165] = 8'h0;
        my_rom[166] = 8'h0;
        my_rom[167] = 8'h0;
        my_rom[168] = 8'hf;
        my_rom[169] = 8'h0;
        my_rom[170] = 8'h0;
        my_rom[171] = 8'h0;
        my_rom[172] = 8'h0;
        my_rom[173] = 8'h0;
        my_rom[174] = 8'h0;
        my_rom[175] = 8'h0;
        my_rom[176] = 8'h1e;
        my_rom[177] = 8'h0;
        my_rom[178] = 8'h0;
        my_rom[179] = 8'h0;
        my_rom[180] = 8'h0;
        my_rom[181] = 8'h0;
        my_rom[182] = 8'h0;
        my_rom[183] = 8'h0;
        my_rom[184] = 8'h41;
        my_rom[185] = 8'h1c;
        my_rom[186] = 8'h0;
        my_rom[187] = 8'h0;
        my_rom[188] = 8'h0;
        my_rom[189] = 8'h0;
        my_rom[190] = 8'h0;
        my_rom[191] = 8'h0;
        my_rom[192] = 8'h41;
        my_rom[193] = 8'h1d;
        my_rom[194] = 8'h0;
        my_rom[195] = 8'h0;
        my_rom[196] = 8'h0;
        my_rom[197] = 8'h0;
        my_rom[198] = 8'h0;
        my_rom[199] = 8'h0;
        my_rom[200] = 8'h3c;
        my_rom[201] = 8'h37;
        my_rom[202] = 8'h21;
        my_rom[203] = 8'h0;
        my_rom[204] = 8'h0;
        my_rom[205] = 8'h0;
        my_rom[206] = 8'h0;
        my_rom[207] = 8'h0;
        my_rom[208] = 8'h3c;
        my_rom[209] = 8'h37;
        my_rom[210] = 8'h22;
        my_rom[211] = 8'h0;
        my_rom[212] = 8'h0;
        my_rom[213] = 8'h0;
        my_rom[214] = 8'h0;
        my_rom[215] = 8'h0;
        my_rom[216] = 8'h3c;
        my_rom[217] = 8'h37;
        my_rom[218] = 8'h23;
        my_rom[219] = 8'h0;
        my_rom[220] = 8'h0;
        my_rom[221] = 8'h0;
        my_rom[222] = 8'h0;
        my_rom[223] = 8'h0;
        my_rom[224] = 8'h41;
        my_rom[225] = 8'h3a;
        my_rom[226] = 8'h36;
        my_rom[227] = 8'h21;
        my_rom[228] = 8'h0;
        my_rom[229] = 8'h0;
        my_rom[230] = 8'h0;
        my_rom[231] = 8'h0;
        my_rom[232] = 8'h41;
        my_rom[233] = 8'h39;
        my_rom[234] = 8'h35;
        my_rom[235] = 8'h23;
        my_rom[236] = 8'h0;
        my_rom[237] = 8'h0;
        my_rom[238] = 8'h0;
        my_rom[239] = 8'h0;
        my_rom[240] = 8'h41;
        my_rom[241] = 8'h39;
        my_rom[242] = 8'h35;
        my_rom[243] = 8'h24;
        my_rom[244] = 8'h0;
        my_rom[245] = 8'h0;
        my_rom[246] = 8'h0;
        my_rom[247] = 8'h0;
        my_rom[248] = 8'h41;
        my_rom[249] = 8'h3d;
        my_rom[250] = 8'h38;
        my_rom[251] = 8'h23;
        my_rom[252] = 8'h0;
        my_rom[253] = 8'h0;
        my_rom[254] = 8'h0;
        my_rom[255] = 8'h0;
        my_rom[256] = 8'h52;
        my_rom[257] = 8'h0;
        my_rom[258] = 8'h0;
        my_rom[259] = 8'h0;
        my_rom[260] = 8'h0;
        my_rom[261] = 8'h0;
        my_rom[262] = 8'h0;
        my_rom[263] = 8'h0;
        my_rom[264] = 8'h5d;
        my_rom[265] = 8'h0;
        my_rom[266] = 8'h0;
        my_rom[267] = 8'h0;
        my_rom[268] = 8'h0;
        my_rom[269] = 8'h0;
        my_rom[270] = 8'h0;
        my_rom[271] = 8'h0;
        my_rom[272] = 8'h67;
        my_rom[273] = 8'h0;
        my_rom[274] = 8'h0;
        my_rom[275] = 8'h0;
        my_rom[276] = 8'h0;
        my_rom[277] = 8'h0;
        my_rom[278] = 8'h0;
        my_rom[279] = 8'h0;
        my_rom[280] = 8'h41;
        my_rom[281] = 8'h50;
        my_rom[282] = 8'h0;
        my_rom[283] = 8'h0;
        my_rom[284] = 8'h0;
        my_rom[285] = 8'h0;
        my_rom[286] = 8'h0;
        my_rom[287] = 8'h0;
        my_rom[288] = 8'h41;
        my_rom[289] = 8'h5b;
        my_rom[290] = 8'h0;
        my_rom[291] = 8'h0;
        my_rom[292] = 8'h0;
        my_rom[293] = 8'h0;
        my_rom[294] = 8'h0;
        my_rom[295] = 8'h0;
        my_rom[296] = 8'h41;
        my_rom[297] = 8'h51;
        my_rom[298] = 8'h0;
        my_rom[299] = 8'h0;
        my_rom[300] = 8'h0;
        my_rom[301] = 8'h0;
        my_rom[302] = 8'h0;
        my_rom[303] = 8'h0;
        my_rom[304] = 8'h41;
        my_rom[305] = 8'h5c;
        my_rom[306] = 8'h0;
        my_rom[307] = 8'h0;
        my_rom[308] = 8'h0;
        my_rom[309] = 8'h0;
        my_rom[310] = 8'h0;
        my_rom[311] = 8'h0;
        my_rom[312] = 8'h3c;
        my_rom[313] = 8'h37;
        my_rom[314] = 8'h54;
        my_rom[315] = 8'h0;
        my_rom[316] = 8'h0;
        my_rom[317] = 8'h0;
        my_rom[318] = 8'h0;
        my_rom[319] = 8'h0;
        my_rom[320] = 8'h3c;
        my_rom[321] = 8'h37;
        my_rom[322] = 8'h5f;
        my_rom[323] = 8'h0;
        my_rom[324] = 8'h0;
        my_rom[325] = 8'h0;
        my_rom[326] = 8'h0;
        my_rom[327] = 8'h0;
        my_rom[328] = 8'h3c;
        my_rom[329] = 8'h37;
        my_rom[330] = 8'h69;
        my_rom[331] = 8'h0;
        my_rom[332] = 8'h0;
        my_rom[333] = 8'h0;
        my_rom[334] = 8'h0;
        my_rom[335] = 8'h0;
        my_rom[336] = 8'h3c;
        my_rom[337] = 8'h37;
        my_rom[338] = 8'h55;
        my_rom[339] = 8'h0;
        my_rom[340] = 8'h0;
        my_rom[341] = 8'h0;
        my_rom[342] = 8'h0;
        my_rom[343] = 8'h0;
        my_rom[344] = 8'h3c;
        my_rom[345] = 8'h37;
        my_rom[346] = 8'h60;
        my_rom[347] = 8'h0;
        my_rom[348] = 8'h0;
        my_rom[349] = 8'h0;
        my_rom[350] = 8'h0;
        my_rom[351] = 8'h0;
        my_rom[352] = 8'h3c;
        my_rom[353] = 8'h37;
        my_rom[354] = 8'h6a;
        my_rom[355] = 8'h0;
        my_rom[356] = 8'h0;
        my_rom[357] = 8'h0;
        my_rom[358] = 8'h0;
        my_rom[359] = 8'h0;
        my_rom[360] = 8'h41;
        my_rom[361] = 8'h3d;
        my_rom[362] = 8'h38;
        my_rom[363] = 8'ha5;
        my_rom[364] = 8'h0;
        my_rom[365] = 8'h0;
        my_rom[366] = 8'h0;
        my_rom[367] = 8'h0;
        my_rom[368] = 8'h41;
        my_rom[369] = 8'h3a;
        my_rom[370] = 8'h36;
        my_rom[371] = 8'h9b;
        my_rom[372] = 8'h0;
        my_rom[373] = 8'h0;
        my_rom[374] = 8'h0;
        my_rom[375] = 8'h0;
        my_rom[376] = 8'h41;
        my_rom[377] = 8'h39;
        my_rom[378] = 8'h35;
        my_rom[379] = 8'ha5;
        my_rom[380] = 8'h0;
        my_rom[381] = 8'h0;
        my_rom[382] = 8'h0;
        my_rom[383] = 8'h0;
        my_rom[384] = 8'h41;
        my_rom[385] = 8'h39;
        my_rom[386] = 8'h35;
        my_rom[387] = 8'ha7;
        my_rom[388] = 8'h0;
        my_rom[389] = 8'h0;
        my_rom[390] = 8'h0;
        my_rom[391] = 8'h0;
        my_rom[392] = 8'h41;
        my_rom[393] = 8'h81;
        my_rom[394] = 8'h0;
        my_rom[395] = 8'h0;
        my_rom[396] = 8'h0;
        my_rom[397] = 8'h0;
        my_rom[398] = 8'h0;
        my_rom[399] = 8'h0;
        my_rom[400] = 8'h41;
        my_rom[401] = 8'h82;
        my_rom[402] = 8'h0;
        my_rom[403] = 8'h0;
        my_rom[404] = 8'h0;
        my_rom[405] = 8'h0;
        my_rom[406] = 8'h0;
        my_rom[407] = 8'h0;
        my_rom[408] = 8'h41;
        my_rom[409] = 8'h83;
        my_rom[410] = 8'h0;
        my_rom[411] = 8'h0;
        my_rom[412] = 8'h0;
        my_rom[413] = 8'h0;
        my_rom[414] = 8'h0;
        my_rom[415] = 8'h0;
        my_rom[416] = 8'h41;
        my_rom[417] = 8'h84;
        my_rom[418] = 8'h0;
        my_rom[419] = 8'h0;
        my_rom[420] = 8'h0;
        my_rom[421] = 8'h0;
        my_rom[422] = 8'h0;
        my_rom[423] = 8'h0;
        my_rom[424] = 8'h41;
        my_rom[425] = 8'h85;
        my_rom[426] = 8'h0;
        my_rom[427] = 8'h0;
        my_rom[428] = 8'h0;
        my_rom[429] = 8'h0;
        my_rom[430] = 8'h0;
        my_rom[431] = 8'h0;
        my_rom[432] = 8'h41;
        my_rom[433] = 8'h88;
        my_rom[434] = 8'h0;
        my_rom[435] = 8'h0;
        my_rom[436] = 8'h0;
        my_rom[437] = 8'h0;
        my_rom[438] = 8'h0;
        my_rom[439] = 8'h0;
        my_rom[440] = 8'h41;
        my_rom[441] = 8'h86;
        my_rom[442] = 8'h0;
        my_rom[443] = 8'h0;
        my_rom[444] = 8'h0;
        my_rom[445] = 8'h0;
        my_rom[446] = 8'h0;
        my_rom[447] = 8'h0;
        my_rom[448] = 8'h41;
        my_rom[449] = 8'h87;
        my_rom[450] = 8'h0;
        my_rom[451] = 8'h0;
        my_rom[452] = 8'h0;
        my_rom[453] = 8'h0;
        my_rom[454] = 8'h0;
        my_rom[455] = 8'h0;
        my_rom[456] = 8'h3c;
        my_rom[457] = 8'h37;
        my_rom[458] = 8'h9b;
        my_rom[459] = 8'h0;
        my_rom[460] = 8'h0;
        my_rom[461] = 8'h0;
        my_rom[462] = 8'h0;
        my_rom[463] = 8'h0;
        my_rom[464] = 8'h3c;
        my_rom[465] = 8'h37;
        my_rom[466] = 8'h9e;
        my_rom[467] = 8'h0;
        my_rom[468] = 8'h0;
        my_rom[469] = 8'h0;
        my_rom[470] = 8'h0;
        my_rom[471] = 8'h0;
        my_rom[472] = 8'h3c;
        my_rom[473] = 8'h37;
        my_rom[474] = 8'h9f;
        my_rom[475] = 8'h0;
        my_rom[476] = 8'h0;
        my_rom[477] = 8'h0;
        my_rom[478] = 8'h0;
        my_rom[479] = 8'h0;
        my_rom[480] = 8'h3c;
        my_rom[481] = 8'h37;
        my_rom[482] = 8'ha0;
        my_rom[483] = 8'h0;
        my_rom[484] = 8'h0;
        my_rom[485] = 8'h0;
        my_rom[486] = 8'h0;
        my_rom[487] = 8'h0;
        my_rom[488] = 8'h3c;
        my_rom[489] = 8'h37;
        my_rom[490] = 8'ha1;
        my_rom[491] = 8'h0;
        my_rom[492] = 8'h0;
        my_rom[493] = 8'h0;
        my_rom[494] = 8'h0;
        my_rom[495] = 8'h0;
        my_rom[496] = 8'h3c;
        my_rom[497] = 8'h37;
        my_rom[498] = 8'ha3;
        my_rom[499] = 8'h0;
        my_rom[500] = 8'h0;
        my_rom[501] = 8'h0;
        my_rom[502] = 8'h0;
        my_rom[503] = 8'h0;
        my_rom[504] = 8'h3c;
        my_rom[505] = 8'h37;
        my_rom[506] = 8'ha4;
        my_rom[507] = 8'h0;
        my_rom[508] = 8'h0;
        my_rom[509] = 8'h0;
        my_rom[510] = 8'h0;
        my_rom[511] = 8'h0;
        my_rom[512] = 8'h3c;
        my_rom[513] = 8'h37;
        my_rom[514] = 8'ha5;
        my_rom[515] = 8'h0;
        my_rom[516] = 8'h0;
        my_rom[517] = 8'h0;
        my_rom[518] = 8'h0;
        my_rom[519] = 8'h0;
        my_rom[520] = 8'h3c;
        my_rom[521] = 8'h37;
        my_rom[522] = 8'ha6;
        my_rom[523] = 8'h0;
        my_rom[524] = 8'h0;
        my_rom[525] = 8'h0;
        my_rom[526] = 8'h0;
        my_rom[527] = 8'h0;
        my_rom[528] = 8'h7;
        my_rom[529] = 8'h0;
        my_rom[530] = 8'h0;
        my_rom[531] = 8'h0;
        my_rom[532] = 8'h0;
        my_rom[533] = 8'h0;
        my_rom[534] = 8'h0;
        my_rom[535] = 8'h0;
        my_rom[536] = 8'h41;
        my_rom[537] = 8'h5;
        my_rom[538] = 8'h0;
        my_rom[539] = 8'h0;
        my_rom[540] = 8'h0;
        my_rom[541] = 8'h0;
        my_rom[542] = 8'h0;
        my_rom[543] = 8'h0;
        my_rom[544] = 8'h41;
        my_rom[545] = 8'h6;
        my_rom[546] = 8'h0;
        my_rom[547] = 8'h0;
        my_rom[548] = 8'h0;
        my_rom[549] = 8'h0;
        my_rom[550] = 8'h0;
        my_rom[551] = 8'h0;
        my_rom[552] = 8'h3c;
        my_rom[553] = 8'h37;
        my_rom[554] = 8'ha;
        my_rom[555] = 8'h0;
        my_rom[556] = 8'h0;
        my_rom[557] = 8'h0;
        my_rom[558] = 8'h0;
        my_rom[559] = 8'h0;
        my_rom[560] = 8'h3c;
        my_rom[561] = 8'h37;
        my_rom[562] = 8'hb;
        my_rom[563] = 8'h0;
        my_rom[564] = 8'h0;
        my_rom[565] = 8'h0;
        my_rom[566] = 8'h0;
        my_rom[567] = 8'h0;
        my_rom[568] = 8'h3c;
        my_rom[569] = 8'h37;
        my_rom[570] = 8'hc;
        my_rom[571] = 8'h0;
        my_rom[572] = 8'h0;
        my_rom[573] = 8'h0;
        my_rom[574] = 8'h0;
        my_rom[575] = 8'h0;
        my_rom[576] = 8'h41;
        my_rom[577] = 8'h3a;
        my_rom[578] = 8'h36;
        my_rom[579] = 8'ha;
        my_rom[580] = 8'h0;
        my_rom[581] = 8'h0;
        my_rom[582] = 8'h0;
        my_rom[583] = 8'h0;
        my_rom[584] = 8'h41;
        my_rom[585] = 8'h39;
        my_rom[586] = 8'h35;
        my_rom[587] = 8'hc;
        my_rom[588] = 8'h0;
        my_rom[589] = 8'h0;
        my_rom[590] = 8'h0;
        my_rom[591] = 8'h0;
        my_rom[592] = 8'h41;
        my_rom[593] = 8'h39;
        my_rom[594] = 8'h35;
        my_rom[595] = 8'hd;
        my_rom[596] = 8'h0;
        my_rom[597] = 8'h0;
        my_rom[598] = 8'h0;
        my_rom[599] = 8'h0;
        my_rom[600] = 8'h13;
        my_rom[601] = 8'h0;
        my_rom[602] = 8'h0;
        my_rom[603] = 8'h0;
        my_rom[604] = 8'h0;
        my_rom[605] = 8'h0;
        my_rom[606] = 8'h0;
        my_rom[607] = 8'h0;
        my_rom[608] = 8'h16;
        my_rom[609] = 8'h0;
        my_rom[610] = 8'h0;
        my_rom[611] = 8'h0;
        my_rom[612] = 8'h0;
        my_rom[613] = 8'h0;
        my_rom[614] = 8'h0;
        my_rom[615] = 8'h0;
        my_rom[616] = 8'h19;
        my_rom[617] = 8'h0;
        my_rom[618] = 8'h0;
        my_rom[619] = 8'h0;
        my_rom[620] = 8'h0;
        my_rom[621] = 8'h0;
        my_rom[622] = 8'h0;
        my_rom[623] = 8'h0;
        my_rom[624] = 8'h41;
        my_rom[625] = 8'h12;
        my_rom[626] = 8'h0;
        my_rom[627] = 8'h0;
        my_rom[628] = 8'h0;
        my_rom[629] = 8'h0;
        my_rom[630] = 8'h0;
        my_rom[631] = 8'h0;
        my_rom[632] = 8'h41;
        my_rom[633] = 8'h15;
        my_rom[634] = 8'h0;
        my_rom[635] = 8'h0;
        my_rom[636] = 8'h0;
        my_rom[637] = 8'h0;
        my_rom[638] = 8'h0;
        my_rom[639] = 8'h0;
        my_rom[640] = 8'h41;
        my_rom[641] = 8'h18;
        my_rom[642] = 8'h0;
        my_rom[643] = 8'h0;
        my_rom[644] = 8'h0;
        my_rom[645] = 8'h0;
        my_rom[646] = 8'h0;
        my_rom[647] = 8'h0;
        my_rom[648] = 8'h3c;
        my_rom[649] = 8'h37;
        my_rom[650] = 8'h14;
        my_rom[651] = 8'h0;
        my_rom[652] = 8'h0;
        my_rom[653] = 8'h0;
        my_rom[654] = 8'h0;
        my_rom[655] = 8'h0;
        my_rom[656] = 8'h3c;
        my_rom[657] = 8'h37;
        my_rom[658] = 8'h17;
        my_rom[659] = 8'h0;
        my_rom[660] = 8'h0;
        my_rom[661] = 8'h0;
        my_rom[662] = 8'h0;
        my_rom[663] = 8'h0;
        my_rom[664] = 8'h3c;
        my_rom[665] = 8'h37;
        my_rom[666] = 8'h1a;
        my_rom[667] = 8'h0;
        my_rom[668] = 8'h0;
        my_rom[669] = 8'h0;
        my_rom[670] = 8'h0;
        my_rom[671] = 8'h0;
        my_rom[672] = 8'h25;
        my_rom[673] = 8'h0;
        my_rom[674] = 8'h0;
        my_rom[675] = 8'h0;
        my_rom[676] = 8'h0;
        my_rom[677] = 8'h0;
        my_rom[678] = 8'h0;
        my_rom[679] = 8'h0;
        my_rom[680] = 8'h3b;
        my_rom[681] = 8'h49;
        my_rom[682] = 8'h7f;
        my_rom[683] = 8'h0;
        my_rom[684] = 8'h0;
        my_rom[685] = 8'h0;
        my_rom[686] = 8'h0;
        my_rom[687] = 8'h0;
        my_rom[688] = 8'h3b;
        my_rom[689] = 8'h4a;
        my_rom[690] = 8'h80;
        my_rom[691] = 8'h0;
        my_rom[692] = 8'h0;
        my_rom[693] = 8'h0;
        my_rom[694] = 8'h0;
        my_rom[695] = 8'h0;
        my_rom[696] = 8'h3c;
        my_rom[697] = 8'h37;
        my_rom[698] = 8'h4b;
        my_rom[699] = 8'h9d;
        my_rom[700] = 8'h0;
        my_rom[701] = 8'h0;
        my_rom[702] = 8'h0;
        my_rom[703] = 8'h0;
        my_rom[704] = 8'h3c;
        my_rom[705] = 8'h37;
        my_rom[706] = 8'h4c;
        my_rom[707] = 8'ha2;
        my_rom[708] = 8'h0;
        my_rom[709] = 8'h0;
        my_rom[710] = 8'h0;
        my_rom[711] = 8'h0;
        my_rom[712] = 8'h3b;
        my_rom[713] = 8'h40;
        my_rom[714] = 8'h4d;
        my_rom[715] = 8'h7e;
        my_rom[716] = 8'h7d;
        my_rom[717] = 8'h0;
        my_rom[718] = 8'h0;
        my_rom[719] = 8'h0;
        my_rom[720] = 8'h3c;
        my_rom[721] = 8'h37;
        my_rom[722] = 8'h47;
        my_rom[723] = 8'h4e;
        my_rom[724] = 8'h9c;
        my_rom[725] = 8'h9a;
        my_rom[726] = 8'h0;
        my_rom[727] = 8'h0;
        my_rom[728] = 8'h92;
        my_rom[729] = 8'h74;
        my_rom[730] = 8'h0;
        my_rom[731] = 8'h0;
        my_rom[732] = 8'h0;
        my_rom[733] = 8'h0;
        my_rom[734] = 8'h0;
        my_rom[735] = 8'h0;
        my_rom[736] = 8'h91;
        my_rom[737] = 8'h74;
        my_rom[738] = 8'h0;
        my_rom[739] = 8'h0;
        my_rom[740] = 8'h0;
        my_rom[741] = 8'h0;
        my_rom[742] = 8'h0;
        my_rom[743] = 8'h0;
        my_rom[744] = 8'h96;
        my_rom[745] = 8'h74;
        my_rom[746] = 8'h0;
        my_rom[747] = 8'h0;
        my_rom[748] = 8'h0;
        my_rom[749] = 8'h0;
        my_rom[750] = 8'h0;
        my_rom[751] = 8'h0;
        my_rom[752] = 8'h97;
        my_rom[753] = 8'h74;
        my_rom[754] = 8'h0;
        my_rom[755] = 8'h0;
        my_rom[756] = 8'h0;
        my_rom[757] = 8'h0;
        my_rom[758] = 8'h0;
        my_rom[759] = 8'h0;
        my_rom[760] = 8'h98;
        my_rom[761] = 8'h74;
        my_rom[762] = 8'h0;
        my_rom[763] = 8'h0;
        my_rom[764] = 8'h0;
        my_rom[765] = 8'h0;
        my_rom[766] = 8'h0;
        my_rom[767] = 8'h0;
        my_rom[768] = 8'h42;
        my_rom[769] = 8'h3e;
        my_rom[770] = 8'h95;
        my_rom[771] = 8'h8b;
        my_rom[772] = 8'h75;
        my_rom[773] = 8'h0;
        my_rom[774] = 8'h0;
        my_rom[775] = 8'h0;
        my_rom[776] = 8'h3c;
        my_rom[777] = 8'h37;
        my_rom[778] = 8'h46;
        my_rom[779] = 8'h3f;
        my_rom[780] = 8'h95;
        my_rom[781] = 8'h8b;
        my_rom[782] = 8'h75;
        my_rom[783] = 8'h0;
        my_rom[784] = 8'h8;
        my_rom[785] = 8'h70;
        my_rom[786] = 8'h0;
        my_rom[787] = 8'h0;
        my_rom[788] = 8'h0;
        my_rom[789] = 8'h0;
        my_rom[790] = 8'h0;
        my_rom[791] = 8'h0;
        my_rom[792] = 8'h1f;
        my_rom[793] = 8'h70;
        my_rom[794] = 8'h0;
        my_rom[795] = 8'h0;
        my_rom[796] = 8'h0;
        my_rom[797] = 8'h0;
        my_rom[798] = 8'h0;
        my_rom[799] = 8'h0;
        my_rom[800] = 8'h53;
        my_rom[801] = 8'h70;
        my_rom[802] = 8'h0;
        my_rom[803] = 8'h0;
        my_rom[804] = 8'h0;
        my_rom[805] = 8'h0;
        my_rom[806] = 8'h0;
        my_rom[807] = 8'h0;
        my_rom[808] = 8'h5e;
        my_rom[809] = 8'h70;
        my_rom[810] = 8'h0;
        my_rom[811] = 8'h0;
        my_rom[812] = 8'h0;
        my_rom[813] = 8'h0;
        my_rom[814] = 8'h0;
        my_rom[815] = 8'h0;
        my_rom[816] = 8'h68;
        my_rom[817] = 8'h70;
        my_rom[818] = 8'h0;
        my_rom[819] = 8'h0;
        my_rom[820] = 8'h0;
        my_rom[821] = 8'h0;
        my_rom[822] = 8'h0;
        my_rom[823] = 8'h0;
        my_rom[824] = 8'h58;
        my_rom[825] = 8'h0;
        my_rom[826] = 8'h0;
        my_rom[827] = 8'h0;
        my_rom[828] = 8'h0;
        my_rom[829] = 8'h0;
        my_rom[830] = 8'h0;
        my_rom[831] = 8'h0;
        my_rom[832] = 8'h63;
        my_rom[833] = 8'h0;
        my_rom[834] = 8'h0;
        my_rom[835] = 8'h0;
        my_rom[836] = 8'h0;
        my_rom[837] = 8'h0;
        my_rom[838] = 8'h0;
        my_rom[839] = 8'h0;
        my_rom[840] = 8'h6c;
        my_rom[841] = 8'h0;
        my_rom[842] = 8'h0;
        my_rom[843] = 8'h0;
        my_rom[844] = 8'h0;
        my_rom[845] = 8'h0;
        my_rom[846] = 8'h0;
        my_rom[847] = 8'h0;
        my_rom[848] = 8'h58;
        my_rom[849] = 8'h0;
        my_rom[850] = 8'h0;
        my_rom[851] = 8'h0;
        my_rom[852] = 8'h0;
        my_rom[853] = 8'h0;
        my_rom[854] = 8'h0;
        my_rom[855] = 8'h0;
        my_rom[856] = 8'h63;
        my_rom[857] = 8'h0;
        my_rom[858] = 8'h0;
        my_rom[859] = 8'h0;
        my_rom[860] = 8'h0;
        my_rom[861] = 8'h0;
        my_rom[862] = 8'h0;
        my_rom[863] = 8'h0;
        my_rom[864] = 8'h6c;
        my_rom[865] = 8'h0;
        my_rom[866] = 8'h0;
        my_rom[867] = 8'h0;
        my_rom[868] = 8'h0;
        my_rom[869] = 8'h0;
        my_rom[870] = 8'h0;
        my_rom[871] = 8'h0;
        my_rom[872] = 8'h2b;
        my_rom[873] = 8'h0;
        my_rom[874] = 8'h0;
        my_rom[875] = 8'h0;
        my_rom[876] = 8'h0;
        my_rom[877] = 8'h0;
        my_rom[878] = 8'h0;
        my_rom[879] = 8'h0;
        my_rom[880] = 8'h56;
        my_rom[881] = 8'h0;
        my_rom[882] = 8'h0;
        my_rom[883] = 8'h0;
        my_rom[884] = 8'h0;
        my_rom[885] = 8'h0;
        my_rom[886] = 8'h0;
        my_rom[887] = 8'h0;
        my_rom[888] = 8'h61;
        my_rom[889] = 8'h0;
        my_rom[890] = 8'h0;
        my_rom[891] = 8'h0;
        my_rom[892] = 8'h0;
        my_rom[893] = 8'h0;
        my_rom[894] = 8'h0;
        my_rom[895] = 8'h0;
        my_rom[896] = 8'h6b;
        my_rom[897] = 8'h0;
        my_rom[898] = 8'h0;
        my_rom[899] = 8'h0;
        my_rom[900] = 8'h0;
        my_rom[901] = 8'h0;
        my_rom[902] = 8'h0;
        my_rom[903] = 8'h0;
        my_rom[904] = 8'h26;
        my_rom[905] = 8'h0;
        my_rom[906] = 8'h0;
        my_rom[907] = 8'h0;
        my_rom[908] = 8'h0;
        my_rom[909] = 8'h0;
        my_rom[910] = 8'h0;
        my_rom[911] = 8'h0;
        my_rom[912] = 8'h27;
        my_rom[913] = 8'h0;
        my_rom[914] = 8'h0;
        my_rom[915] = 8'h0;
        my_rom[916] = 8'h0;
        my_rom[917] = 8'h0;
        my_rom[918] = 8'h0;
        my_rom[919] = 8'h0;
        my_rom[920] = 8'h28;
        my_rom[921] = 8'h0;
        my_rom[922] = 8'h0;
        my_rom[923] = 8'h0;
        my_rom[924] = 8'h0;
        my_rom[925] = 8'h0;
        my_rom[926] = 8'h0;
        my_rom[927] = 8'h0;
        my_rom[928] = 8'h29;
        my_rom[929] = 8'h0;
        my_rom[930] = 8'h0;
        my_rom[931] = 8'h0;
        my_rom[932] = 8'h0;
        my_rom[933] = 8'h0;
        my_rom[934] = 8'h0;
        my_rom[935] = 8'h0;
        my_rom[936] = 8'h34;
        my_rom[937] = 8'h0;
        my_rom[938] = 8'h0;
        my_rom[939] = 8'h0;
        my_rom[940] = 8'h0;
        my_rom[941] = 8'h0;
        my_rom[942] = 8'h0;
        my_rom[943] = 8'h0;
        my_rom[944] = 8'h33;
        my_rom[945] = 8'h0;
        my_rom[946] = 8'h0;
        my_rom[947] = 8'h0;
        my_rom[948] = 8'h0;
        my_rom[949] = 8'h0;
        my_rom[950] = 8'h0;
        my_rom[951] = 8'h0;
        my_rom[952] = 8'h57;
        my_rom[953] = 8'h0;
        my_rom[954] = 8'h0;
        my_rom[955] = 8'h0;
        my_rom[956] = 8'h0;
        my_rom[957] = 8'h0;
        my_rom[958] = 8'h0;
        my_rom[959] = 8'h0;
        my_rom[960] = 8'h62;
        my_rom[961] = 8'h0;
        my_rom[962] = 8'h0;
        my_rom[963] = 8'h0;
        my_rom[964] = 8'h0;
        my_rom[965] = 8'h0;
        my_rom[966] = 8'h0;
        my_rom[967] = 8'h0;
        my_rom[968] = 8'h6f;
        my_rom[969] = 8'h0;
        my_rom[970] = 8'h0;
        my_rom[971] = 8'h0;
        my_rom[972] = 8'h0;
        my_rom[973] = 8'h0;
        my_rom[974] = 8'h0;
        my_rom[975] = 8'h0;
        my_rom[976] = 8'h10;
        my_rom[977] = 8'h0;
        my_rom[978] = 8'h0;
        my_rom[979] = 8'h0;
        my_rom[980] = 8'h0;
        my_rom[981] = 8'h0;
        my_rom[982] = 8'h0;
        my_rom[983] = 8'h0;
        my_rom[984] = 8'h11;
        my_rom[985] = 8'h0;
        my_rom[986] = 8'h0;
        my_rom[987] = 8'h0;
        my_rom[988] = 8'h0;
        my_rom[989] = 8'h0;
        my_rom[990] = 8'h0;
        my_rom[991] = 8'h0;
        my_rom[992] = 8'h65;
        my_rom[993] = 8'h59;
        my_rom[994] = 8'h0;
        my_rom[995] = 8'h0;
        my_rom[996] = 8'h0;
        my_rom[997] = 8'h0;
        my_rom[998] = 8'h0;
        my_rom[999] = 8'h0;
        my_rom[1000] = 8'h6d;
        my_rom[1001] = 8'h59;
        my_rom[1002] = 8'h0;
        my_rom[1003] = 8'h0;
        my_rom[1004] = 8'h0;
        my_rom[1005] = 8'h0;
        my_rom[1006] = 8'h0;
        my_rom[1007] = 8'h0;
        my_rom[1008] = 8'h6e;
        my_rom[1009] = 8'h64;
        my_rom[1010] = 8'h0;
        my_rom[1011] = 8'h0;
        my_rom[1012] = 8'h0;
        my_rom[1013] = 8'h0;
        my_rom[1014] = 8'h0;
        my_rom[1015] = 8'h0;
        my_rom[1016] = 8'h20;
        my_rom[1017] = 8'h0;
        my_rom[1018] = 8'h0;
        my_rom[1019] = 8'h0;
        my_rom[1020] = 8'h0;
        my_rom[1021] = 8'h0;
        my_rom[1022] = 8'h0;
        my_rom[1023] = 8'h0;
        my_rom[1024] = 8'h99;
        my_rom[1025] = 8'h0;
        my_rom[1026] = 8'h0;
        my_rom[1027] = 8'h0;
        my_rom[1028] = 8'h0;
        my_rom[1029] = 8'h0;
        my_rom[1030] = 8'h0;
        my_rom[1031] = 8'h0;
        my_rom[1032] = 8'h98;
        my_rom[1033] = 8'h8c;
        my_rom[1034] = 8'h8e;
        my_rom[1035] = 8'h8f;
        my_rom[1036] = 8'h90;
        my_rom[1037] = 8'h7a;
        my_rom[1038] = 8'h0;
        my_rom[1039] = 8'h0;
        my_rom[1040] = 8'h1b;
        my_rom[1041] = 8'h2a;
        my_rom[1042] = 8'h4f;
        my_rom[1043] = 8'h5a;
        my_rom[1044] = 8'h66;
        my_rom[1045] = 8'h73;
        my_rom[1046] = 8'h0;
        my_rom[1047] = 8'h0;
        my_rom[1048] = 8'h7c;
        my_rom[1049] = 8'h0;
        my_rom[1050] = 8'h0;
        my_rom[1051] = 8'h0;
        my_rom[1052] = 8'h0;
        my_rom[1053] = 8'h0;
        my_rom[1054] = 8'h0;
        my_rom[1055] = 8'h0;
        my_rom[1056] = 8'h4;
        my_rom[1057] = 8'h0;
        my_rom[1058] = 8'h0;
        my_rom[1059] = 8'h0;
        my_rom[1060] = 8'h0;
        my_rom[1061] = 8'h4;
        my_rom[1062] = 8'h0;
        my_rom[1063] = 8'h0;
        my_rom[1064] = 8'h41;
        my_rom[1065] = 8'h3a;
        my_rom[1066] = 8'h36;
        my_rom[1067] = 8'h23;
        my_rom[1068] = 8'h0;
        my_rom[1069] = 8'h0;
        my_rom[1070] = 8'h0;
        my_rom[1071] = 8'h0;
        my_rom[1072] = 8'h41;
        my_rom[1073] = 8'h3a;
        my_rom[1074] = 8'h36;
        my_rom[1075] = 8'h9b;
        my_rom[1076] = 8'h0;
        my_rom[1077] = 8'h0;
        my_rom[1078] = 8'h0;
        my_rom[1079] = 8'h0;
        my_rom[1080] = 8'haa;
        my_rom[1081] = 8'h0;
        my_rom[1082] = 8'h0;
        my_rom[1083] = 8'h0;
        my_rom[1084] = 8'h0;
        my_rom[1085] = 8'h0;
        my_rom[1086] = 8'h0;
        my_rom[1087] = 8'h0;
        my_rom[1088] = 8'hab;
    end
endmodule

module DIG_ROM_128X8_INST1 (
    input [6:0] A,
    input sel,
    output reg [7:0] D
);
    reg [7:0] my_rom [0:64];

    always @ (*) begin
        if (~sel)
            D = 8'hz;
        else if (A > 7'h40)
            D = 8'h0;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 8'h99;
        my_rom[1] = 8'h0;
        my_rom[2] = 8'h0;
        my_rom[3] = 8'h0;
        my_rom[4] = 8'h0;
        my_rom[5] = 8'h0;
        my_rom[6] = 8'h0;
        my_rom[7] = 8'h0;
        my_rom[8] = 8'h98;
        my_rom[9] = 8'h8c;
        my_rom[10] = 8'h8e;
        my_rom[11] = 8'h8f;
        my_rom[12] = 8'h90;
        my_rom[13] = 8'h7a;
        my_rom[14] = 8'h0;
        my_rom[15] = 8'h0;
        my_rom[16] = 8'h1b;
        my_rom[17] = 8'h2a;
        my_rom[18] = 8'h4f;
        my_rom[19] = 8'h5a;
        my_rom[20] = 8'h66;
        my_rom[21] = 8'h73;
        my_rom[22] = 8'h0;
        my_rom[23] = 8'h0;
        my_rom[24] = 8'h7c;
        my_rom[25] = 8'h0;
        my_rom[26] = 8'h0;
        my_rom[27] = 8'h0;
        my_rom[28] = 8'h0;
        my_rom[29] = 8'h0;
        my_rom[30] = 8'h0;
        my_rom[31] = 8'h0;
        my_rom[32] = 8'h4;
        my_rom[33] = 8'h0;
        my_rom[34] = 8'h0;
        my_rom[35] = 8'h0;
        my_rom[36] = 8'h0;
        my_rom[37] = 8'h4;
        my_rom[38] = 8'h0;
        my_rom[39] = 8'h0;
        my_rom[40] = 8'h41;
        my_rom[41] = 8'h3a;
        my_rom[42] = 8'h36;
        my_rom[43] = 8'h23;
        my_rom[44] = 8'h0;
        my_rom[45] = 8'h0;
        my_rom[46] = 8'h0;
        my_rom[47] = 8'h0;
        my_rom[48] = 8'h41;
        my_rom[49] = 8'h3a;
        my_rom[50] = 8'h36;
        my_rom[51] = 8'h9b;
        my_rom[52] = 8'h0;
        my_rom[53] = 8'h0;
        my_rom[54] = 8'h0;
        my_rom[55] = 8'h0;
        my_rom[56] = 8'haa;
        my_rom[57] = 8'h0;
        my_rom[58] = 8'h0;
        my_rom[59] = 8'h0;
        my_rom[60] = 8'h0;
        my_rom[61] = 8'h0;
        my_rom[62] = 8'h0;
        my_rom[63] = 8'h0;
        my_rom[64] = 8'hab;
    end
endmodule

module PriorityEncoder2 (
    input in0,
    input in1,
    input in2,
    input in3,
    output reg [1:0] num,
    output any
);
    always @ (*) begin
        if (in3 == 1'b1)
            num = 2'h3;
        else if (in2 == 1'b1)
            num = 2'h2;
        else if (in1 == 1'b1)
            num = 2'h1;
        else 
            num = 2'h0;
    end

    assign any = in0 | in1 | in2 | in3;
endmodule

module DIG_ROM_512X3_PCO (
    input [8:0] A,
    input sel,
    output reg [2:0] D
);
    reg [2:0] my_rom [0:511];

    always @ (*) begin
        if (~sel)
            D = 3'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 3'h2;
        my_rom[1] = 3'h2;
        my_rom[2] = 3'h1;
        my_rom[3] = 3'h1;
        my_rom[4] = 3'h2;
        my_rom[5] = 3'h2;
        my_rom[6] = 3'h2;
        my_rom[7] = 3'h2;
        my_rom[8] = 3'h1;
        my_rom[9] = 3'h2;
        my_rom[10] = 3'h1;
        my_rom[11] = 3'h1;
        my_rom[12] = 3'h3;
        my_rom[13] = 3'h3;
        my_rom[14] = 3'h3;
        my_rom[15] = 3'h3;
        my_rom[16] = 3'h2;
        my_rom[17] = 3'h2;
        my_rom[18] = 3'h2;
        my_rom[19] = 3'h3;
        my_rom[20] = 3'h2;
        my_rom[21] = 3'h2;
        my_rom[22] = 3'h2;
        my_rom[23] = 3'h2;
        my_rom[24] = 3'h1;
        my_rom[25] = 3'h3;
        my_rom[26] = 3'h1;
        my_rom[27] = 3'h1;
        my_rom[28] = 3'h3;
        my_rom[29] = 3'h3;
        my_rom[30] = 3'h3;
        my_rom[31] = 3'h3;
        my_rom[32] = 3'h3;
        my_rom[33] = 3'h2;
        my_rom[34] = 3'h3;
        my_rom[35] = 3'h3;
        my_rom[36] = 3'h2;
        my_rom[37] = 3'h2;
        my_rom[38] = 3'h2;
        my_rom[39] = 3'h2;
        my_rom[40] = 3'h1;
        my_rom[41] = 3'h2;
        my_rom[42] = 3'h1;
        my_rom[43] = 3'h1;
        my_rom[44] = 3'h3;
        my_rom[45] = 3'h3;
        my_rom[46] = 3'h3;
        my_rom[47] = 3'h3;
        my_rom[48] = 3'h2;
        my_rom[49] = 3'h2;
        my_rom[50] = 3'h2;
        my_rom[51] = 3'h3;
        my_rom[52] = 3'h2;
        my_rom[53] = 3'h2;
        my_rom[54] = 3'h2;
        my_rom[55] = 3'h2;
        my_rom[56] = 3'h1;
        my_rom[57] = 3'h3;
        my_rom[58] = 3'h1;
        my_rom[59] = 3'h1;
        my_rom[60] = 3'h3;
        my_rom[61] = 3'h3;
        my_rom[62] = 3'h3;
        my_rom[63] = 3'h3;
        my_rom[64] = 3'h1;
        my_rom[65] = 3'h2;
        my_rom[66] = 3'h1;
        my_rom[67] = 3'h1;
        my_rom[68] = 3'h2;
        my_rom[69] = 3'h2;
        my_rom[70] = 3'h2;
        my_rom[71] = 3'h2;
        my_rom[72] = 3'h1;
        my_rom[73] = 3'h2;
        my_rom[74] = 3'h1;
        my_rom[75] = 3'h1;
        my_rom[76] = 3'h3;
        my_rom[77] = 3'h3;
        my_rom[78] = 3'h3;
        my_rom[79] = 3'h3;
        my_rom[80] = 3'h2;
        my_rom[81] = 3'h2;
        my_rom[82] = 3'h2;
        my_rom[83] = 3'h3;
        my_rom[84] = 3'h2;
        my_rom[85] = 3'h2;
        my_rom[86] = 3'h2;
        my_rom[87] = 3'h2;
        my_rom[88] = 3'h1;
        my_rom[89] = 3'h3;
        my_rom[90] = 3'h1;
        my_rom[91] = 3'h1;
        my_rom[92] = 3'h1;
        my_rom[93] = 3'h3;
        my_rom[94] = 3'h3;
        my_rom[95] = 3'h3;
        my_rom[96] = 3'h1;
        my_rom[97] = 3'h2;
        my_rom[98] = 3'h2;
        my_rom[99] = 3'h3;
        my_rom[100] = 3'h2;
        my_rom[101] = 3'h2;
        my_rom[102] = 3'h2;
        my_rom[103] = 3'h2;
        my_rom[104] = 3'h1;
        my_rom[105] = 3'h2;
        my_rom[106] = 3'h1;
        my_rom[107] = 3'h1;
        my_rom[108] = 3'h3;
        my_rom[109] = 3'h3;
        my_rom[110] = 3'h3;
        my_rom[111] = 3'h3;
        my_rom[112] = 3'h2;
        my_rom[113] = 3'h2;
        my_rom[114] = 3'h2;
        my_rom[115] = 3'h3;
        my_rom[116] = 3'h2;
        my_rom[117] = 3'h2;
        my_rom[118] = 3'h2;
        my_rom[119] = 3'h2;
        my_rom[120] = 3'h1;
        my_rom[121] = 3'h3;
        my_rom[122] = 3'h1;
        my_rom[123] = 3'h1;
        my_rom[124] = 3'h3;
        my_rom[125] = 3'h3;
        my_rom[126] = 3'h3;
        my_rom[127] = 3'h3;
        my_rom[128] = 3'h2;
        my_rom[129] = 3'h2;
        my_rom[130] = 3'h2;
        my_rom[131] = 3'h3;
        my_rom[132] = 3'h2;
        my_rom[133] = 3'h2;
        my_rom[134] = 3'h2;
        my_rom[135] = 3'h2;
        my_rom[136] = 3'h1;
        my_rom[137] = 3'h2;
        my_rom[138] = 3'h1;
        my_rom[139] = 3'h3;
        my_rom[140] = 3'h3;
        my_rom[141] = 3'h3;
        my_rom[142] = 3'h3;
        my_rom[143] = 3'h3;
        my_rom[144] = 3'h2;
        my_rom[145] = 3'h2;
        my_rom[146] = 3'h2;
        my_rom[147] = 3'h3;
        my_rom[148] = 3'h2;
        my_rom[149] = 3'h2;
        my_rom[150] = 3'h2;
        my_rom[151] = 3'h2;
        my_rom[152] = 3'h1;
        my_rom[153] = 3'h3;
        my_rom[154] = 3'h1;
        my_rom[155] = 3'h3;
        my_rom[156] = 3'h3;
        my_rom[157] = 3'h3;
        my_rom[158] = 3'h3;
        my_rom[159] = 3'h3;
        my_rom[160] = 3'h2;
        my_rom[161] = 3'h2;
        my_rom[162] = 3'h2;
        my_rom[163] = 3'h2;
        my_rom[164] = 3'h2;
        my_rom[165] = 3'h2;
        my_rom[166] = 3'h2;
        my_rom[167] = 3'h2;
        my_rom[168] = 3'h1;
        my_rom[169] = 3'h2;
        my_rom[170] = 3'h1;
        my_rom[171] = 3'h3;
        my_rom[172] = 3'h3;
        my_rom[173] = 3'h3;
        my_rom[174] = 3'h3;
        my_rom[175] = 3'h3;
        my_rom[176] = 3'h2;
        my_rom[177] = 3'h2;
        my_rom[178] = 3'h2;
        my_rom[179] = 3'h3;
        my_rom[180] = 3'h2;
        my_rom[181] = 3'h2;
        my_rom[182] = 3'h2;
        my_rom[183] = 3'h2;
        my_rom[184] = 3'h1;
        my_rom[185] = 3'h3;
        my_rom[186] = 3'h1;
        my_rom[187] = 3'h3;
        my_rom[188] = 3'h3;
        my_rom[189] = 3'h3;
        my_rom[190] = 3'h3;
        my_rom[191] = 3'h3;
        my_rom[192] = 3'h2;
        my_rom[193] = 3'h2;
        my_rom[194] = 3'h2;
        my_rom[195] = 3'h2;
        my_rom[196] = 3'h2;
        my_rom[197] = 3'h2;
        my_rom[198] = 3'h2;
        my_rom[199] = 3'h2;
        my_rom[200] = 3'h1;
        my_rom[201] = 3'h2;
        my_rom[202] = 3'h1;
        my_rom[203] = 3'h3;
        my_rom[204] = 3'h3;
        my_rom[205] = 3'h3;
        my_rom[206] = 3'h3;
        my_rom[207] = 3'h3;
        my_rom[208] = 3'h2;
        my_rom[209] = 3'h2;
        my_rom[210] = 3'h2;
        my_rom[211] = 3'h3;
        my_rom[212] = 3'h2;
        my_rom[213] = 3'h2;
        my_rom[214] = 3'h2;
        my_rom[215] = 3'h2;
        my_rom[216] = 3'h1;
        my_rom[217] = 3'h3;
        my_rom[218] = 3'h1;
        my_rom[219] = 3'h1;
        my_rom[220] = 3'h3;
        my_rom[221] = 3'h3;
        my_rom[222] = 3'h3;
        my_rom[223] = 3'h3;
        my_rom[224] = 3'h2;
        my_rom[225] = 3'h2;
        my_rom[226] = 3'h2;
        my_rom[227] = 3'h2;
        my_rom[228] = 3'h2;
        my_rom[229] = 3'h2;
        my_rom[230] = 3'h2;
        my_rom[231] = 3'h2;
        my_rom[232] = 3'h1;
        my_rom[233] = 3'h2;
        my_rom[234] = 3'h1;
        my_rom[235] = 3'h3;
        my_rom[236] = 3'h3;
        my_rom[237] = 3'h3;
        my_rom[238] = 3'h3;
        my_rom[239] = 3'h3;
        my_rom[240] = 3'h2;
        my_rom[241] = 3'h2;
        my_rom[242] = 3'h2;
        my_rom[243] = 3'h3;
        my_rom[244] = 3'h3;
        my_rom[245] = 3'h2;
        my_rom[246] = 3'h2;
        my_rom[247] = 3'h2;
        my_rom[248] = 3'h1;
        my_rom[249] = 3'h3;
        my_rom[250] = 3'h1;
        my_rom[251] = 3'h1;
        my_rom[252] = 3'h3;
        my_rom[253] = 3'h3;
        my_rom[254] = 3'h3;
        my_rom[255] = 3'h3;
        my_rom[256] = 3'h0;
        my_rom[257] = 3'h0;
        my_rom[258] = 3'h0;
        my_rom[259] = 3'h0;
        my_rom[260] = 3'h0;
        my_rom[261] = 3'h2;
        my_rom[262] = 3'h0;
        my_rom[263] = 3'h0;
        my_rom[264] = 3'h0;
        my_rom[265] = 3'h2;
        my_rom[266] = 3'h0;
        my_rom[267] = 3'h0;
        my_rom[268] = 3'h0;
        my_rom[269] = 3'h3;
        my_rom[270] = 3'h0;
        my_rom[271] = 3'h0;
        my_rom[272] = 3'h0;
        my_rom[273] = 3'h0;
        my_rom[274] = 3'h0;
        my_rom[275] = 3'h0;
        my_rom[276] = 3'h0;
        my_rom[277] = 3'h2;
        my_rom[278] = 3'h0;
        my_rom[279] = 3'h0;
        my_rom[280] = 3'h0;
        my_rom[281] = 3'h3;
        my_rom[282] = 3'h0;
        my_rom[283] = 3'h0;
        my_rom[284] = 3'h0;
        my_rom[285] = 3'h3;
        my_rom[286] = 3'h0;
        my_rom[287] = 3'h0;
        my_rom[288] = 3'h0;
        my_rom[289] = 3'h0;
        my_rom[290] = 3'h0;
        my_rom[291] = 3'h0;
        my_rom[292] = 3'h0;
        my_rom[293] = 3'h2;
        my_rom[294] = 3'h0;
        my_rom[295] = 3'h0;
        my_rom[296] = 3'h0;
        my_rom[297] = 3'h2;
        my_rom[298] = 3'h0;
        my_rom[299] = 3'h0;
        my_rom[300] = 3'h0;
        my_rom[301] = 3'h3;
        my_rom[302] = 3'h0;
        my_rom[303] = 3'h0;
        my_rom[304] = 3'h0;
        my_rom[305] = 3'h0;
        my_rom[306] = 3'h0;
        my_rom[307] = 3'h0;
        my_rom[308] = 3'h0;
        my_rom[309] = 3'h2;
        my_rom[310] = 3'h0;
        my_rom[311] = 3'h0;
        my_rom[312] = 3'h0;
        my_rom[313] = 3'h3;
        my_rom[314] = 3'h0;
        my_rom[315] = 3'h1;
        my_rom[316] = 3'h0;
        my_rom[317] = 3'h3;
        my_rom[318] = 3'h0;
        my_rom[319] = 3'h0;
        my_rom[320] = 3'h0;
        my_rom[321] = 3'h0;
        my_rom[322] = 3'h0;
        my_rom[323] = 3'h0;
        my_rom[324] = 3'h0;
        my_rom[325] = 3'h2;
        my_rom[326] = 3'h0;
        my_rom[327] = 3'h0;
        my_rom[328] = 3'h1;
        my_rom[329] = 3'h2;
        my_rom[330] = 3'h0;
        my_rom[331] = 3'h1;
        my_rom[332] = 3'h0;
        my_rom[333] = 3'h3;
        my_rom[334] = 3'h0;
        my_rom[335] = 3'h0;
        my_rom[336] = 3'h0;
        my_rom[337] = 3'h0;
        my_rom[338] = 3'h0;
        my_rom[339] = 3'h0;
        my_rom[340] = 3'h0;
        my_rom[341] = 3'h2;
        my_rom[342] = 3'h0;
        my_rom[343] = 3'h0;
        my_rom[344] = 3'h0;
        my_rom[345] = 3'h3;
        my_rom[346] = 3'h0;
        my_rom[347] = 3'h1;
        my_rom[348] = 3'h0;
        my_rom[349] = 3'h3;
        my_rom[350] = 3'h0;
        my_rom[351] = 3'h0;
        my_rom[352] = 3'h0;
        my_rom[353] = 3'h0;
        my_rom[354] = 3'h0;
        my_rom[355] = 3'h0;
        my_rom[356] = 3'h0;
        my_rom[357] = 3'h2;
        my_rom[358] = 3'h0;
        my_rom[359] = 3'h0;
        my_rom[360] = 3'h1;
        my_rom[361] = 3'h2;
        my_rom[362] = 3'h0;
        my_rom[363] = 3'h1;
        my_rom[364] = 3'h0;
        my_rom[365] = 3'h3;
        my_rom[366] = 3'h0;
        my_rom[367] = 3'h0;
        my_rom[368] = 3'h0;
        my_rom[369] = 3'h0;
        my_rom[370] = 3'h0;
        my_rom[371] = 3'h0;
        my_rom[372] = 3'h0;
        my_rom[373] = 3'h2;
        my_rom[374] = 3'h0;
        my_rom[375] = 3'h0;
        my_rom[376] = 3'h0;
        my_rom[377] = 3'h3;
        my_rom[378] = 3'h0;
        my_rom[379] = 3'h1;
        my_rom[380] = 3'h0;
        my_rom[381] = 3'h3;
        my_rom[382] = 3'h0;
        my_rom[383] = 3'h0;
        my_rom[384] = 3'h0;
        my_rom[385] = 3'h2;
        my_rom[386] = 3'h1;
        my_rom[387] = 3'h0;
        my_rom[388] = 3'h0;
        my_rom[389] = 3'h0;
        my_rom[390] = 3'h0;
        my_rom[391] = 3'h0;
        my_rom[392] = 3'h0;
        my_rom[393] = 3'h0;
        my_rom[394] = 3'h0;
        my_rom[395] = 3'h0;
        my_rom[396] = 3'h0;
        my_rom[397] = 3'h0;
        my_rom[398] = 3'h0;
        my_rom[399] = 3'h0;
        my_rom[400] = 3'h0;
        my_rom[401] = 3'h1;
        my_rom[402] = 3'h0;
        my_rom[403] = 3'h0;
        my_rom[404] = 3'h0;
        my_rom[405] = 3'h0;
        my_rom[406] = 3'h0;
        my_rom[407] = 3'h0;
        my_rom[408] = 3'h0;
        my_rom[409] = 3'h0;
        my_rom[410] = 3'h0;
        my_rom[411] = 3'h0;
        my_rom[412] = 3'h0;
        my_rom[413] = 3'h0;
        my_rom[414] = 3'h0;
        my_rom[415] = 3'h0;
        my_rom[416] = 3'h0;
        my_rom[417] = 3'h0;
        my_rom[418] = 3'h0;
        my_rom[419] = 3'h0;
        my_rom[420] = 3'h0;
        my_rom[421] = 3'h0;
        my_rom[422] = 3'h0;
        my_rom[423] = 3'h0;
        my_rom[424] = 3'h0;
        my_rom[425] = 3'h0;
        my_rom[426] = 3'h0;
        my_rom[427] = 3'h0;
        my_rom[428] = 3'h0;
        my_rom[429] = 3'h0;
        my_rom[430] = 3'h0;
        my_rom[431] = 3'h0;
        my_rom[432] = 3'h0;
        my_rom[433] = 3'h0;
        my_rom[434] = 3'h0;
        my_rom[435] = 3'h0;
        my_rom[436] = 3'h0;
        my_rom[437] = 3'h0;
        my_rom[438] = 3'h0;
        my_rom[439] = 3'h0;
        my_rom[440] = 3'h0;
        my_rom[441] = 3'h0;
        my_rom[442] = 3'h0;
        my_rom[443] = 3'h0;
        my_rom[444] = 3'h0;
        my_rom[445] = 3'h0;
        my_rom[446] = 3'h0;
        my_rom[447] = 3'h0;
        my_rom[448] = 3'h0;
        my_rom[449] = 3'h0;
        my_rom[450] = 3'h0;
        my_rom[451] = 3'h0;
        my_rom[452] = 3'h0;
        my_rom[453] = 3'h0;
        my_rom[454] = 3'h2;
        my_rom[455] = 3'h0;
        my_rom[456] = 3'h1;
        my_rom[457] = 3'h0;
        my_rom[458] = 3'h3;
        my_rom[459] = 3'h3;
        my_rom[460] = 3'h0;
        my_rom[461] = 3'h0;
        my_rom[462] = 3'h3;
        my_rom[463] = 3'h0;
        my_rom[464] = 3'h0;
        my_rom[465] = 3'h0;
        my_rom[466] = 3'h0;
        my_rom[467] = 3'h0;
        my_rom[468] = 3'h0;
        my_rom[469] = 3'h0;
        my_rom[470] = 3'h2;
        my_rom[471] = 3'h0;
        my_rom[472] = 3'h0;
        my_rom[473] = 3'h0;
        my_rom[474] = 3'h0;
        my_rom[475] = 3'h0;
        my_rom[476] = 3'h0;
        my_rom[477] = 3'h0;
        my_rom[478] = 3'h3;
        my_rom[479] = 3'h0;
        my_rom[480] = 3'h0;
        my_rom[481] = 3'h2;
        my_rom[482] = 3'h1;
        my_rom[483] = 3'h0;
        my_rom[484] = 3'h0;
        my_rom[485] = 3'h0;
        my_rom[486] = 3'h2;
        my_rom[487] = 3'h0;
        my_rom[488] = 3'h1;
        my_rom[489] = 3'h0;
        my_rom[490] = 3'h0;
        my_rom[491] = 3'h3;
        my_rom[492] = 3'h0;
        my_rom[493] = 3'h0;
        my_rom[494] = 3'h3;
        my_rom[495] = 3'h1;
        my_rom[496] = 3'h0;
        my_rom[497] = 3'h1;
        my_rom[498] = 3'h0;
        my_rom[499] = 3'h0;
        my_rom[500] = 3'h0;
        my_rom[501] = 3'h0;
        my_rom[502] = 3'h2;
        my_rom[503] = 3'h0;
        my_rom[504] = 3'h0;
        my_rom[505] = 3'h0;
        my_rom[506] = 3'h0;
        my_rom[507] = 3'h0;
        my_rom[508] = 3'h0;
        my_rom[509] = 3'h0;
        my_rom[510] = 3'h3;
        my_rom[511] = 3'h1;
    end
endmodule

module DIG_ROM_256X32_ROM32 (
    input [7:0] A,
    input sel,
    output reg [31:0] D
);
    reg [31:0] my_rom [0:255];

    always @ (*) begin
        if (~sel)
            D = 32'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 32'h0;
        my_rom[1] = 32'he6000000;
        my_rom[2] = 32'he5000000;
        my_rom[3] = 32'h5000;
        my_rom[4] = 32'h1000;
        my_rom[5] = 32'h5018;
        my_rom[6] = 32'h6018;
        my_rom[7] = 32'he0000018;
        my_rom[8] = 32'hb018;
        my_rom[9] = 32'hb018;
        my_rom[10] = 32'h1018;
        my_rom[11] = 32'h2018;
        my_rom[12] = 32'h3018;
        my_rom[13] = 32'h4018;
        my_rom[14] = 32'h4000000;
        my_rom[15] = 32'h4800c1c;
        my_rom[16] = 32'h4800e1c;
        my_rom[17] = 32'h4800a1c;
        my_rom[18] = 32'h5019;
        my_rom[19] = 32'he0000019;
        my_rom[20] = 32'h1019;
        my_rom[21] = 32'h501a;
        my_rom[22] = 32'he000001a;
        my_rom[23] = 32'h101a;
        my_rom[24] = 32'h501b;
        my_rom[25] = 32'he000001b;
        my_rom[26] = 32'h101b;
        my_rom[27] = 32'h80b000;
        my_rom[28] = 32'h805218;
        my_rom[29] = 32'h806218;
        my_rom[30] = 32'he0800218;
        my_rom[31] = 32'h80b218;
        my_rom[32] = 32'h80c218;
        my_rom[33] = 32'h801218;
        my_rom[34] = 32'h802218;
        my_rom[35] = 32'h803218;
        my_rom[36] = 32'h804218;
        my_rom[37] = 32'h4800200;
        my_rom[38] = 32'h4800204;
        my_rom[39] = 32'h4800208;
        my_rom[40] = 32'h480020c;
        my_rom[41] = 32'h4800210;
        my_rom[42] = 32'h90b000;
        my_rom[43] = 32'h4900200;
        my_rom[44] = 32'he7000000;
        my_rom[45] = 32'h7f0b000;
        my_rom[46] = 32'h700b000;
        my_rom[47] = 32'h7f0e000;
        my_rom[48] = 32'h27001000;
        my_rom[49] = 32'h27002000;
        my_rom[50] = 32'h700f000;
        my_rom[51] = 32'h14f00000;
        my_rom[52] = 32'hcf00000;
        my_rom[53] = 32'h20d05000;
        my_rom[54] = 32'h20d06000;
        my_rom[55] = 32'he0d00000;
        my_rom[56] = 32'hd0d000;
        my_rom[57] = 32'he05000;
        my_rom[58] = 32'he06000;
        my_rom[59] = 32'he0e00000;
        my_rom[60] = 32'hc0e00000;
        my_rom[61] = 32'he0d000;
        my_rom[62] = 32'he0080000;
        my_rom[63] = 32'h20081000;
        my_rom[64] = 32'h48000;
        my_rom[65] = 32'he0040000;
        my_rom[66] = 32'hc0040000;
        my_rom[67] = 32'h4b000;
        my_rom[68] = 32'h4b000;
        my_rom[69] = 32'h4e000;
        my_rom[70] = 32'h41000;
        my_rom[71] = 32'h41000;
        my_rom[72] = 32'h42000;
        my_rom[73] = 32'h58018;
        my_rom[74] = 32'h59018;
        my_rom[75] = 32'h51018;
        my_rom[76] = 32'h52018;
        my_rom[77] = 32'h200d8018;
        my_rom[78] = 32'h200d1018;
        my_rom[79] = 32'ha0b000;
        my_rom[80] = 32'ha05218;
        my_rom[81] = 32'ha07218;
        my_rom[82] = 32'he0a00218;
        my_rom[83] = 32'ha0b218;
        my_rom[84] = 32'ha01218;
        my_rom[85] = 32'ha03218;
        my_rom[86] = 32'h4a00200;
        my_rom[87] = 32'h4a00214;
        my_rom[88] = 32'h4a00208;
        my_rom[89] = 32'h4a00400;
        my_rom[90] = 32'hb0b000;
        my_rom[91] = 32'hb05218;
        my_rom[92] = 32'hb06218;
        my_rom[93] = 32'he0b00218;
        my_rom[94] = 32'hb0b218;
        my_rom[95] = 32'hb01218;
        my_rom[96] = 32'hb02218;
        my_rom[97] = 32'h4b00200;
        my_rom[98] = 32'h4b00214;
        my_rom[99] = 32'h4b0020c;
        my_rom[100] = 32'h4b00400;
        my_rom[101] = 32'hb60600;
        my_rom[102] = 32'hc0b000;
        my_rom[103] = 32'he0c00218;
        my_rom[104] = 32'hc0b218;
        my_rom[105] = 32'hc01218;
        my_rom[106] = 32'hc02218;
        my_rom[107] = 32'h4c00200;
        my_rom[108] = 32'h4c00210;
        my_rom[109] = 32'hc70600;
        my_rom[110] = 32'hc70800;
        my_rom[111] = 32'h4000000;
        my_rom[112] = 32'h1c000000;
        my_rom[113] = 32'h1c000000;
        my_rom[114] = 32'h1c000000;
        my_rom[115] = 32'h1c000000;
        my_rom[116] = 32'h1c000000;
        my_rom[117] = 32'h1c000000;
        my_rom[118] = 32'hd8040000;
        my_rom[119] = 32'h18041000;
        my_rom[120] = 32'h18042000;
        my_rom[121] = 32'h1804f000;
        my_rom[122] = 32'h1c000000;
        my_rom[123] = 32'h1c000200;
        my_rom[124] = 32'h0;
        my_rom[125] = 32'h200080e0;
        my_rom[126] = 32'h80c0;
        my_rom[127] = 32'h80c0;
        my_rom[128] = 32'h90c0;
        my_rom[129] = 32'h5000;
        my_rom[130] = 32'h5040;
        my_rom[131] = 32'h5060;
        my_rom[132] = 32'h5080;
        my_rom[133] = 32'h6000;
        my_rom[134] = 32'h6060;
        my_rom[135] = 32'h6080;
        my_rom[136] = 32'h7040;
        my_rom[137] = 32'hb100;
        my_rom[138] = 32'he000b100;
        my_rom[139] = 32'hb0c0;
        my_rom[140] = 32'hb060;
        my_rom[141] = 32'hb0a0;
        my_rom[142] = 32'hb040;
        my_rom[143] = 32'hb020;
        my_rom[144] = 32'hb000;
        my_rom[145] = 32'hb000;
        my_rom[146] = 32'hb0a0;
        my_rom[147] = 32'hb120;
        my_rom[148] = 32'he000b120;
        my_rom[149] = 32'hb0e0;
        my_rom[150] = 32'hb040;
        my_rom[151] = 32'hb060;
        my_rom[152] = 32'hb080;
        my_rom[153] = 32'hc000;
        my_rom[154] = 32'h200010e0;
        my_rom[155] = 32'h1000;
        my_rom[156] = 32'h10c0;
        my_rom[157] = 32'h10c0;
        my_rom[158] = 32'h1040;
        my_rom[159] = 32'h1060;
        my_rom[160] = 32'h1080;
        my_rom[161] = 32'h2000;
        my_rom[162] = 32'h20c0;
        my_rom[163] = 32'h2060;
        my_rom[164] = 32'h2080;
        my_rom[165] = 32'h3000;
        my_rom[166] = 32'h3040;
        my_rom[167] = 32'h4000;
        my_rom[168] = 32'hb0a0;
        my_rom[169] = 32'h700f000;
        my_rom[170] = 32'h80a218;
        my_rom[171] = 32'ha000;
        my_rom[172] = 32'h0;
        my_rom[173] = 32'h0;
        my_rom[174] = 32'h0;
        my_rom[175] = 32'h0;
        my_rom[176] = 32'h0;
        my_rom[177] = 32'h0;
        my_rom[178] = 32'h0;
        my_rom[179] = 32'h0;
        my_rom[180] = 32'h0;
        my_rom[181] = 32'h0;
        my_rom[182] = 32'h0;
        my_rom[183] = 32'h0;
        my_rom[184] = 32'h0;
        my_rom[185] = 32'h0;
        my_rom[186] = 32'h0;
        my_rom[187] = 32'h0;
        my_rom[188] = 32'h0;
        my_rom[189] = 32'h0;
        my_rom[190] = 32'h0;
        my_rom[191] = 32'h0;
        my_rom[192] = 32'h0;
        my_rom[193] = 32'h0;
        my_rom[194] = 32'h0;
        my_rom[195] = 32'h0;
        my_rom[196] = 32'h0;
        my_rom[197] = 32'h0;
        my_rom[198] = 32'h0;
        my_rom[199] = 32'h0;
        my_rom[200] = 32'h0;
        my_rom[201] = 32'h0;
        my_rom[202] = 32'h0;
        my_rom[203] = 32'h0;
        my_rom[204] = 32'h0;
        my_rom[205] = 32'h0;
        my_rom[206] = 32'h0;
        my_rom[207] = 32'h0;
        my_rom[208] = 32'h0;
        my_rom[209] = 32'h0;
        my_rom[210] = 32'h0;
        my_rom[211] = 32'h0;
        my_rom[212] = 32'h0;
        my_rom[213] = 32'h0;
        my_rom[214] = 32'h0;
        my_rom[215] = 32'h0;
        my_rom[216] = 32'h0;
        my_rom[217] = 32'h0;
        my_rom[218] = 32'h0;
        my_rom[219] = 32'h0;
        my_rom[220] = 32'h0;
        my_rom[221] = 32'h0;
        my_rom[222] = 32'h0;
        my_rom[223] = 32'h0;
        my_rom[224] = 32'h0;
        my_rom[225] = 32'h0;
        my_rom[226] = 32'h0;
        my_rom[227] = 32'h0;
        my_rom[228] = 32'h0;
        my_rom[229] = 32'h0;
        my_rom[230] = 32'h0;
        my_rom[231] = 32'h0;
        my_rom[232] = 32'h0;
        my_rom[233] = 32'h0;
        my_rom[234] = 32'h0;
        my_rom[235] = 32'h0;
        my_rom[236] = 32'h0;
        my_rom[237] = 32'h0;
        my_rom[238] = 32'h0;
        my_rom[239] = 32'h0;
        my_rom[240] = 32'h0;
        my_rom[241] = 32'h0;
        my_rom[242] = 32'h0;
        my_rom[243] = 32'h0;
        my_rom[244] = 32'h0;
        my_rom[245] = 32'h0;
        my_rom[246] = 32'h0;
        my_rom[247] = 32'h0;
        my_rom[248] = 32'h0;
        my_rom[249] = 32'h0;
        my_rom[250] = 32'h0;
        my_rom[251] = 32'h0;
        my_rom[252] = 32'h0;
        my_rom[253] = 32'h0;
        my_rom[254] = 32'h0;
        my_rom[255] = 32'h4000000;
    end
endmodule

module DIG_ROM_256X12_ROM12 (
    input [7:0] A,
    input sel,
    output reg [11:0] D
);
    reg [11:0] my_rom [0:171];

    always @ (*) begin
        if (~sel)
            D = 12'hz;
        else if (A > 8'hab)
            D = 12'h0;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 12'h0;
        my_rom[1] = 12'h800;
        my_rom[2] = 12'h800;
        my_rom[3] = 12'h100;
        my_rom[4] = 12'h100;
        my_rom[5] = 12'h880;
        my_rom[6] = 12'h880;
        my_rom[7] = 12'h880;
        my_rom[8] = 12'h81;
        my_rom[9] = 12'h881;
        my_rom[10] = 12'h880;
        my_rom[11] = 12'h880;
        my_rom[12] = 12'h880;
        my_rom[13] = 12'h880;
        my_rom[14] = 12'hc80;
        my_rom[15] = 12'hc80;
        my_rom[16] = 12'hc80;
        my_rom[17] = 12'hc80;
        my_rom[18] = 12'h880;
        my_rom[19] = 12'h880;
        my_rom[20] = 12'h880;
        my_rom[21] = 12'h880;
        my_rom[22] = 12'h880;
        my_rom[23] = 12'h880;
        my_rom[24] = 12'h880;
        my_rom[25] = 12'h880;
        my_rom[26] = 12'h880;
        my_rom[27] = 12'h1;
        my_rom[28] = 12'h880;
        my_rom[29] = 12'h880;
        my_rom[30] = 12'h880;
        my_rom[31] = 12'h81;
        my_rom[32] = 12'h880;
        my_rom[33] = 12'h880;
        my_rom[34] = 12'h880;
        my_rom[35] = 12'h880;
        my_rom[36] = 12'h880;
        my_rom[37] = 12'hc80;
        my_rom[38] = 12'hc80;
        my_rom[39] = 12'hc80;
        my_rom[40] = 12'hc80;
        my_rom[41] = 12'hc80;
        my_rom[42] = 12'h2;
        my_rom[43] = 12'hc00;
        my_rom[44] = 12'h800;
        my_rom[45] = 12'h2;
        my_rom[46] = 12'h3;
        my_rom[47] = 12'h2;
        my_rom[48] = 12'h800;
        my_rom[49] = 12'h800;
        my_rom[50] = 12'h800;
        my_rom[51] = 12'hc00;
        my_rom[52] = 12'hc00;
        my_rom[53] = 12'h0;
        my_rom[54] = 12'h0;
        my_rom[55] = 12'h0;
        my_rom[56] = 12'h2;
        my_rom[57] = 12'h0;
        my_rom[58] = 12'h0;
        my_rom[59] = 12'h0;
        my_rom[60] = 12'h0;
        my_rom[61] = 12'h1;
        my_rom[62] = 12'h0;
        my_rom[63] = 12'h0;
        my_rom[64] = 12'h20;
        my_rom[65] = 12'h0;
        my_rom[66] = 12'h0;
        my_rom[67] = 12'h1;
        my_rom[68] = 12'h2;
        my_rom[69] = 12'h1;
        my_rom[70] = 12'h0;
        my_rom[71] = 12'h20;
        my_rom[72] = 12'h0;
        my_rom[73] = 12'ha0;
        my_rom[74] = 12'ha0;
        my_rom[75] = 12'ha0;
        my_rom[76] = 12'ha0;
        my_rom[77] = 12'ha0;
        my_rom[78] = 12'ha0;
        my_rom[79] = 12'h3;
        my_rom[80] = 12'h880;
        my_rom[81] = 12'h880;
        my_rom[82] = 12'h880;
        my_rom[83] = 12'h81;
        my_rom[84] = 12'h880;
        my_rom[85] = 12'h880;
        my_rom[86] = 12'hc80;
        my_rom[87] = 12'hc80;
        my_rom[88] = 12'hc80;
        my_rom[89] = 12'hc00;
        my_rom[90] = 12'h4;
        my_rom[91] = 12'h880;
        my_rom[92] = 12'h880;
        my_rom[93] = 12'h880;
        my_rom[94] = 12'h881;
        my_rom[95] = 12'h880;
        my_rom[96] = 12'h880;
        my_rom[97] = 12'hc80;
        my_rom[98] = 12'hc80;
        my_rom[99] = 12'hc80;
        my_rom[100] = 12'hc00;
        my_rom[101] = 12'h0;
        my_rom[102] = 12'h5;
        my_rom[103] = 12'h880;
        my_rom[104] = 12'h81;
        my_rom[105] = 12'h880;
        my_rom[106] = 12'h880;
        my_rom[107] = 12'hc80;
        my_rom[108] = 12'hc80;
        my_rom[109] = 12'h0;
        my_rom[110] = 12'h0;
        my_rom[111] = 12'hc00;
        my_rom[112] = 12'hc01;
        my_rom[113] = 12'hc02;
        my_rom[114] = 12'hc03;
        my_rom[115] = 12'hc05;
        my_rom[116] = 12'hc0f;
        my_rom[117] = 12'hc0e;
        my_rom[118] = 12'he;
        my_rom[119] = 12'he;
        my_rom[120] = 12'he;
        my_rom[121] = 12'hd;
        my_rom[122] = 12'hc0b;
        my_rom[123] = 12'hc02;
        my_rom[124] = 12'h100;
        my_rom[125] = 12'h830;
        my_rom[126] = 12'h30;
        my_rom[127] = 12'h830;
        my_rom[128] = 12'h830;
        my_rom[129] = 12'h810;
        my_rom[130] = 12'h810;
        my_rom[131] = 12'h810;
        my_rom[132] = 12'h810;
        my_rom[133] = 12'h810;
        my_rom[134] = 12'h810;
        my_rom[135] = 12'h810;
        my_rom[136] = 12'h810;
        my_rom[137] = 12'h1f;
        my_rom[138] = 12'h1f;
        my_rom[139] = 12'h1f;
        my_rom[140] = 12'h1f;
        my_rom[141] = 12'h1e;
        my_rom[142] = 12'h1e;
        my_rom[143] = 12'h1d;
        my_rom[144] = 12'h1c;
        my_rom[145] = 12'h10;
        my_rom[146] = 12'h10;
        my_rom[147] = 12'h10;
        my_rom[148] = 12'h10;
        my_rom[149] = 12'h10;
        my_rom[150] = 12'h10;
        my_rom[151] = 12'h10;
        my_rom[152] = 12'h10;
        my_rom[153] = 12'h810;
        my_rom[154] = 12'h830;
        my_rom[155] = 12'h810;
        my_rom[156] = 12'h30;
        my_rom[157] = 12'h830;
        my_rom[158] = 12'h810;
        my_rom[159] = 12'h810;
        my_rom[160] = 12'h810;
        my_rom[161] = 12'h810;
        my_rom[162] = 12'h830;
        my_rom[163] = 12'h810;
        my_rom[164] = 12'h810;
        my_rom[165] = 12'h810;
        my_rom[166] = 12'h810;
        my_rom[167] = 12'h810;
        my_rom[168] = 12'h5e;
        my_rom[169] = 12'ha00;
        my_rom[170] = 12'h880;
        my_rom[171] = 12'h810;
    end
endmodule

module DIG_ROM_8X2_PRI (
    input [2:0] A,
    input sel,
    output reg [1:0] D
);
    reg [1:0] my_rom [0:7];

    always @ (*) begin
        if (~sel)
            D = 2'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 2'h0;
        my_rom[1] = 2'h3;
        my_rom[2] = 2'h0;
        my_rom[3] = 2'h1;
        my_rom[4] = 2'h0;
        my_rom[5] = 2'h0;
        my_rom[6] = 2'h0;
        my_rom[7] = 2'h2;
    end
endmodule


module CE_M_CU (
  input R_U, // Reset
  input C_U,
  input nC_U,
  input [7:0] DI_U, // Data Input
  input [6:0] FLI_U, // Flags Input
  input IRQ_U, // Interrupt Request
  input NMI_U, // Non-Maskable Interrupt
  input ABT_U, // Abort
  output [1:0] ANRI_U,
  output INT_U, // Interrupt
  output LDIR, // Load IR
  output [9:0] \A-CTRL_U , // ALU Control
  output [31:0] \R-CTRL_U , // Register Control
  output [3:0] SPO_U, // SP Offset
  output [2:0] \M-CTRL_U , // Memory Control
  output [2:0] PCO_U // PC Offset

);
  wire INT_U_temp;
  wire LDIR_temp;
  wire [5:0] FL;
  wire [7:0] OPC;
  wire s0;
  wire CLR;
  wire s1;
  wire s2;
  wire NMI;
  wire ABT;
  wire RES;
  wire s3;
  wire s4;
  wire \END ;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire O2C;
  wire s11;
  wire OP2;
  wire s12;
  wire s13;
  wire CABT;
  wire IRQ;
  wire INTQ;
  wire [3:0] CONS;
  wire s14;
  wire s15;
  wire s16;
  wire s17;
  wire s18;
  wire s19;
  wire s20;
  wire s21;
  wire s22;
  wire s23;
  wire s24;
  wire s25;
  wire s26;
  wire \WAIT ;
  wire COND;
  wire s27;
  wire [3:0] s28;
  wire s29;
  wire [3:0] s30;
  wire s31;
  wire [3:0] s32;
  wire [2:0] CY;
  wire CY0;
  wire ACY0;
  wire SKIP;
  wire [8:0] s33;
  wire [7:0] s34;
  wire [7:0] s35;
  wire s36;
  wire [7:0] s37;
  wire [10:0] s38;
  wire s39;
  wire [7:0] s40;
  wire [7:0] s41;
  wire [7:0] s42;
  wire [7:0] s43;
  wire [31:0] s44;
  wire [11:0] s45;
  wire [11:0] s46;
  wire [8:0] s47;
  wire [2:0] s48;
  wire [7:0] s49;
  wire s50;
  wire [2:0] s51;
  wire s52;
  wire [1:0] s53;
  wire s54;
  wire s55;
  wire [31:0] s56;
  wire [2:0] s57;
  wire [2:0] s58;
  wire [2:0] s59;
  wire [2:0] s60;
  wire [9:0] s61;
  wire [7:0] s62;
  wire [6:0] s63;
  wire [7:0] s64;
  wire s65;
  assign FL[1:0] = FLI_U[1:0];
  assign FL[5:2] = FLI_U[6:3];
  assign s18 = DI_U[0];
  assign s19 = DI_U[1];
  assign s20 = DI_U[2];
  assign s21 = DI_U[3];
  assign s22 = DI_U[4];
  assign s23 = DI_U[5];
  assign s24 = DI_U[6];
  assign s25 = DI_U[7];
  assign s14 = FL[0];
  assign s15 = FL[1];
  assign s16 = FL[2];
  assign s17 = FL[3];
  assign CLR = (s46[9] | R_U);
  assign s1 = (~ (FLI_U[2] | NMI | ABT | RES) & IRQ_U);
  assign s2 = (~ (NMI | ABT | RES) & NMI_U);
  assign s3 = (~ (ABT | RES) & ABT_U);
  // IR
  DIG_Register_BUS #(
    .Bits(8)
  )
  DIG_Register_BUS_i0 (
    .D( DI_U ),
    .C( nC_U ),
    .en( LDIR_temp ),
    .Q( OPC )
  );
  Mux_16x1 Mux_16x1_i1 (
    .sel( CONS ),
    .in_0( 1'b1 ),
    .in_1( 1'b0 ),
    .in_2( 1'b0 ),
    .in_3( 1'b0 ),
    .in_4( s14 ),
    .in_5( s15 ),
    .in_6( s16 ),
    .in_7( s17 ),
    .in_8( s18 ),
    .in_9( s19 ),
    .in_10( s20 ),
    .in_11( s21 ),
    .in_12( s22 ),
    .in_13( s23 ),
    .in_14( s24 ),
    .in_15( s25 ),
    .out( s26 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i2 (
    .sel( LDIR_temp ),
    .in_0( OPC ),
    .in_1( DI_U ),
    .out( s49 )
  );
  // CYCLE
  CE_STATE CE_STATE_i3 (
    .R( R_U ),
    .C( nC_U ),
    .L( s31 ),
    .IN( s30 ),
    .RES( RES ),
    .OUT( s32 )
  );
  // COPC2
  CE_DFF CE_DFF_i4 (
    .C( C_U ),
    .D( s0 ),
    .E( 1'b1 ),
    .R( R_U ),
    .Q( O2C )
  );
  // OPC2
  CE_JKFF CE_JKFF_i5 (
    .C( nC_U ),
    .J( s11 ),
    .K( s12 ),
    .R( R_U ),
    .Q( OP2 )
  );
  CompUnsigned #(
    .Bits(8)
  )
  CompUnsigned_i6 (
    .a( OPC ),
    .b( 8'b1011100 ),
    .\= ( s0 )
  );
  assign s4 = (CLR | O2C);
  assign s33[7:0] = OPC;
  assign s33[8] = OP2;
  // CIRQ
  CE_DFF CE_DFF_i7 (
    .C( C_U ),
    .D( s1 ),
    .E( 1'b1 ),
    .R( CLR ),
    .Q( s5 )
  );
  // CNMI
  CE_EDFF CE_EDFF_i8 (
    .R( CLR ),
    .C( nC_U ),
    .IN( s2 ),
    .Q( s7 )
  );
  // CABT
  CE_EDFF CE_EDFF_i9 (
    .R( CLR ),
    .C( nC_U ),
    .IN( s3 ),
    .Q( s9 )
  );
  assign CY = s32[2:0];
  assign CY0 = s32[3];
  assign s10 = (~ s4 & s9);
  // OPC
  DIG_ROM_512X8_OPC DIG_ROM_512X8_OPC_i10 (
    .A( s33 ),
    .sel( 1'b1 ),
    .D( s34 )
  );
  // CON
  DIG_ROM_512X4_CON DIG_ROM_512X4_CON_i11 (
    .A( s33 ),
    .sel( 1'b1 ),
    .D( CONS )
  );
  // INA
  DIG_ROM_8X8_INA DIG_ROM_8X8_INA_i12 (
    .A( CY ),
    .sel( 1'b1 ),
    .D( s35 )
  );
  assign s36 = CY[0];
  assign \WAIT  = (CONS[0] & CONS[1] & ~ CONS[2] & ~ CONS[3]);
  // RES
  DIG_ROM_2X8_RES DIG_ROM_2X8_RES_i13 (
    .A( s36 ),
    .sel( 1'b1 ),
    .D( s37 )
  );
  assign s38[2:0] = CY;
  assign s38[10:3] = s34;
  // ABT
  CE_JKFF CE_JKFF_i14 (
    .C( nC_U ),
    .J( s10 ),
    .K( CLR ),
    .R( CLR ),
    .Q( ABT ),
    .\~Q ( s13 )
  );
  assign CABT = (s13 & s9);
  assign s65 = s38[10];
  assign s63 = s38[6:0];
  assign s61 = s38[9:0];
  // INST0
  DIG_ROM_1024X8_INST0 DIG_ROM_1024X8_INST0_i15 (
    .A( s61 ),
    .sel( 1'b1 ),
    .D( s62 )
  );
  // INST1
  DIG_ROM_128X8_INST1 DIG_ROM_128X8_INST1_i16 (
    .A( s63 ),
    .sel( 1'b1 ),
    .D( s64 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i17 (
    .sel( s65 ),
    .in_0( s62 ),
    .in_1( s64 ),
    .out( s40 )
  );
  assign s6 = (~ s4 & \END  & s5);
  assign s8 = (~ s4 & \END  & s7);
  assign s11 = (O2C & (ABT | \END ));
  assign s12 = (\END  & OP2);
  assign INTQ = ((s5 | s7) & ~ O2C & ~ IRQ & ~ NMI);
  assign COND = (~ \WAIT  & s46[8] & s26);
  assign s27 = (~ (CABT | INTQ) & COND);
  assign s31 = (CABT | COND | \END );
  assign s29 = ((SKIP & ~ (CABT | INTQ)) & ~ \WAIT );
  assign ACY0 = (CY0 & ~ (IRQ | NMI | ABT | RES));
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i18 (
    .sel( s39 ),
    .in_0( s40 ),
    .in_1( s35 ),
    .out( s41 )
  );
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i19 (
    .sel( RES ),
    .in_0( s41 ),
    .in_1( s37 ),
    .out( s42 )
  );
  assign s39 = (IRQ | NMI | ABT);
  Mux_2x1 Mux_2x1_i20 (
    .sel( LDIR_temp ),
    .in_0( OP2 ),
    .in_1( O2C ),
    .out( s50 )
  );
  assign s47[7:0] = s49;
  assign s47[8] = s50;
  PriorityEncoder2 PriorityEncoder2_i21 (
    .in0( s52 ),
    .in1( NMI ),
    .in2( ABT ),
    .in3( RES ),
    .num( s53 ),
    .any( INT_U_temp )
  );
  assign s52 = (~ (OPC[0] | OPC[1] | OPC[2] | OPC[3] | OPC[4] | OPC[5] | OPC[6] | OPC[7]) | IRQ);
  DIG_Add #(
    .Bits(3)
  )
  DIG_Add_i22 (
    .a( 3'b0 ),
    .b( s48 ),
    .c_i( O2C ),
    .s( s57 )
  );
  Mux_2x1_NBits #(
    .Bits(3)
  )
  Mux_2x1_NBits_i23 (
    .sel( ABT ),
    .in_0( s59 ),
    .in_1( s58 ),
    .out( s60 )
  );
  assign s55 = (CABT & ~ (CY0 | s45[10]));
  assign \A-CTRL_U [0] = s46[7];
  assign \A-CTRL_U [8:1] = OPC;
  assign \A-CTRL_U [9] = OP2;
  // IRQ
  CE_JKFF CE_JKFF_i24 (
    .C( nC_U ),
    .J( s6 ),
    .K( CLR ),
    .R( CLR ),
    .Q( IRQ )
  );
  // NMI
  CE_JKFF CE_JKFF_i25 (
    .C( nC_U ),
    .J( s8 ),
    .K( CLR ),
    .R( CLR ),
    .Q( NMI )
  );
  Mux_2x1_NBits #(
    .Bits(4)
  )
  Mux_2x1_NBits_i26 (
    .sel( s27 ),
    .in_0( 4'b1111 ),
    .in_1( 4'b101 ),
    .out( s28 )
  );
  assign LDIR_temp = (s29 | ACY0);
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i27 (
    .sel( ACY0 ),
    .in_0( s42 ),
    .in_1( 8'b11111111 ),
    .out( s43 )
  );
  // PCO
  DIG_ROM_512X3_PCO DIG_ROM_512X3_PCO_i28 (
    .A( s47 ),
    .sel( 1'b1 ),
    .D( s48 )
  );
  assign s51[1:0] = s53;
  assign s51[2] = INT_U_temp;
  DIG_Neg #(
    .Bits(3)
  )
  DIG_Neg_i29 (
    .in( s57 ),
    .out( s58 )
  );
  Mux_2x1_NBits #(
    .Bits(4)
  )
  Mux_2x1_NBits_i30 (
    .sel( s29 ),
    .in_0( s28 ),
    .in_1( 4'b0 ),
    .out( s30 )
  );
  // ROM32
  DIG_ROM_256X32_ROM32 DIG_ROM_256X32_ROM32_i31 (
    .A( s43 ),
    .sel( 1'b1 ),
    .D( s44 )
  );
  // ROM12
  DIG_ROM_256X12_ROM12 DIG_ROM_256X12_ROM12_i32 (
    .A( s43 ),
    .sel( 1'b1 ),
    .D( s45 )
  );
  // PRI
  DIG_ROM_8X2_PRI DIG_ROM_8X2_PRI_i33 (
    .A( s51 ),
    .sel( 1'b1 ),
    .D( ANRI_U )
  );
  Mux_2x1_NBits #(
    .Bits(12)
  )
  Mux_2x1_NBits_i34 (
    .sel( s55 ),
    .in_0( s45 ),
    .in_1( 12'b0 ),
    .out( s46 )
  );
  Mux_2x1_NBits #(
    .Bits(32)
  )
  Mux_2x1_NBits_i35 (
    .sel( s55 ),
    .in_0( s44 ),
    .in_1( 32'b0 ),
    .out( s56 )
  );
  assign \R-CTRL_U [28:0] = s56[28:0];
  assign \R-CTRL_U [31:29] = s60;
  assign SPO_U = s46[3:0];
  assign \M-CTRL_U  = s46[6:4];
  assign SKIP = s46[10];
  assign \END  = s46[11];
  assign s59 = s56[31:29];
  assign s54 = (INTQ & SKIP);
  Mux_2x1_NBits #(
    .Bits(3)
  )
  Mux_2x1_NBits_i36 (
    .sel( s54 ),
    .in_0( s48 ),
    .in_1( 3'b0 ),
    .out( PCO_U )
  );
  assign INT_U = INT_U_temp;
  assign LDIR = LDIR_temp;
endmodule

module CE_M_CPU (
  input R_CPU, // Reset
  input C_CPU,
  input [7:0] DI_CPU, // Data Input
  input nIRQ_CPU, // Interrupt Request
  input nNMI_CPU, // Non-Maskable Interrupt
  input nABT_CPU, // Abort
  input nSOB_CPU, // Set Overflow Bit
  input nRDY_CPU, // Ready
  input BE_CPU, // Bus Enable
  output [7:0] DO_CPU, // Data Output
  output [15:0] AO_CPU, // Address Output
  output RnW_CPU, // Read/Write
  output nMLB_CPU, // Memory Lock Bit
  output VDA_CPU, // Valid Data Address
  output VPA_CPU, // Valid Program Address
  output VBA_CPU, // Valid Base Page Address
  output VSA_CPU, // Valid Stack Address
  output VVA_CPU // Valid Vector Address

);
  wire C;
  wire nC;
  wire RDY;
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire VSA_CPU_temp;
  wire [7:0] s5;
  wire [6:0] s6;
  wire [2:0] s7;
  wire [2:0] s8;
  wire s9;
  wire s10;
  wire s11;
  wire [7:0] s12;
  wire [15:0] s13;
  wire [9:0] s14;
  wire [15:0] s15;
  wire [7:0] s16;
  wire [1:0] s17;
  wire [31:0] s18;
  wire [2:0] s19;
  wire [3:0] s20;
  assign s0 = (BE_CPU & ~ nSOB_CPU);
  assign s1 = (BE_CPU & ~ nABT_CPU);
  assign s2 = (BE_CPU & ~ nNMI_CPU);
  assign s3 = (BE_CPU & ~ nIRQ_CPU);
  assign s4 = ~ nRDY_CPU;
  CE_LFSR CE_LFSR_i0 (
    .CLK( C_CPU ),
    .OUT( s16 )
  );
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i1 (
    .D( s4 ),
    .C( C_CPU ),
    .Q( RDY )
  );
  Mux_2x1 Mux_2x1_i2 (
    .sel( RDY ),
    .in_0( C_CPU ),
    .in_1( 1'b1 ),
    .out( C )
  );
  assign nC = ~ C;
  assign RnW_CPU = (BE_CPU & s7[0]);
  CE_M_ALU CE_M_ALU_i3 (
    .R_A( R_CPU ),
    .nC_A( nC ),
    .ALA_A( s12 ),
    .ALB_A( s13 ),
    .A_CTRL_A( s14 ),
    .SOB_A( s0 ),
    .CIB_A( s9 ),
    .ALO_A( s15 ),
    .FLO_A( s6 )
  );
  CE_M_REGS CE_M_REGS_i4 (
    .R_R( R_CPU ),
    .nC_R( nC ),
    .DI_R( DI_CPU ),
    .ALUI_R( s15 ),
    .RNDI_R( s16 ),
    .FLI_R( s5 ),
    .ANRI_R( s17 ),
    .R_CTRL_R( s18 ),
    .PCO_R( s19 ),
    .SPO_R( s20 ),
    .ALA_R( s12 ),
    .ALB_R( s13 ),
    .DO_R( DO_CPU ),
    .VPA_R( VPA_CPU ),
    .VBA_R( VBA_CPU ),
    .VSA_R( VSA_CPU_temp ),
    .VVA_R( s10 ),
    .AO_R( AO_CPU )
  );
  CE_M_CU CE_M_CU_i5 (
    .R_U( R_CPU ),
    .C_U( C ),
    .nC_U( nC ),
    .DI_U( DI_CPU ),
    .FLI_U( s6 ),
    .IRQ_U( s3 ),
    .NMI_U( s2 ),
    .ABT_U( s1 ),
    .ANRI_U( s17 ),
    .INT_U( s9 ),
    .LDIR( s11 ),
    .\A-CTRL_U ( s14 ),
    .\R-CTRL_U ( s18 ),
    .SPO_U( s20 ),
    .\M-CTRL_U ( s8 ),
    .PCO_U( s19 )
  );
  assign s7 = ~ s8;
  assign VVA_CPU = (s10 | (VSA_CPU_temp & s9));
  assign VDA_CPU = ~ s11;
  assign s5[2:0] = s6[2:0];
  assign s5[3] = s7[2];
  assign s5[7:4] = s6[6:3];
  assign nMLB_CPU = s7[1];
  assign VSA_CPU = VSA_CPU_temp;
endmodule
module DIG_ROM_1024X8_PRG (
    input [9:0] A,
    input sel,
    output reg [7:0] D
);
    reg [7:0] my_rom [0:1023];

    always @ (*) begin
        if (~sel)
            D = 8'hz;
        else
            D = my_rom[A];
    end

    initial begin
        my_rom[0] = 8'hea;
        my_rom[1] = 8'h40;
        my_rom[2] = 8'hea;
        my_rom[3] = 8'h40;
        my_rom[4] = 8'hea;
        my_rom[5] = 8'h40;
        my_rom[6] = 8'ha2;
        my_rom[7] = 8'hff;
        my_rom[8] = 8'h9a;
        my_rom[9] = 8'h20;
        my_rom[10] = 8'h11;
        my_rom[11] = 8'hfc;
        my_rom[12] = 8'hee;
        my_rom[13] = 8'h0;
        my_rom[14] = 8'hdf;
        my_rom[15] = 8'h80;
        my_rom[16] = 8'hf8;
        my_rom[17] = 8'h38;
        my_rom[18] = 8'h5c;
        my_rom[19] = 8'hee;
        my_rom[20] = 8'h0;
        my_rom[21] = 8'h0;
        my_rom[22] = 8'h5c;
        my_rom[23] = 8'hee;
        my_rom[24] = 8'h1;
        my_rom[25] = 8'h0;
        my_rom[26] = 8'hb0;
        my_rom[27] = 8'h2;
        my_rom[28] = 8'h80;
        my_rom[29] = 8'hf3;
        my_rom[30] = 8'h60;
        my_rom[31] = 8'h0;
        my_rom[32] = 8'h0;
        my_rom[33] = 8'h0;
        my_rom[34] = 8'h0;
        my_rom[35] = 8'h0;
        my_rom[36] = 8'h0;
        my_rom[37] = 8'h0;
        my_rom[38] = 8'h0;
        my_rom[39] = 8'h0;
        my_rom[40] = 8'h0;
        my_rom[41] = 8'h0;
        my_rom[42] = 8'h0;
        my_rom[43] = 8'h0;
        my_rom[44] = 8'h0;
        my_rom[45] = 8'h0;
        my_rom[46] = 8'h0;
        my_rom[47] = 8'h0;
        my_rom[48] = 8'h0;
        my_rom[49] = 8'h0;
        my_rom[50] = 8'h0;
        my_rom[51] = 8'h0;
        my_rom[52] = 8'h0;
        my_rom[53] = 8'h0;
        my_rom[54] = 8'h0;
        my_rom[55] = 8'h0;
        my_rom[56] = 8'h0;
        my_rom[57] = 8'h0;
        my_rom[58] = 8'h0;
        my_rom[59] = 8'h0;
        my_rom[60] = 8'h0;
        my_rom[61] = 8'h0;
        my_rom[62] = 8'h0;
        my_rom[63] = 8'h0;
        my_rom[64] = 8'h0;
        my_rom[65] = 8'h0;
        my_rom[66] = 8'h0;
        my_rom[67] = 8'h0;
        my_rom[68] = 8'h0;
        my_rom[69] = 8'h0;
        my_rom[70] = 8'h0;
        my_rom[71] = 8'h0;
        my_rom[72] = 8'h0;
        my_rom[73] = 8'h0;
        my_rom[74] = 8'h0;
        my_rom[75] = 8'h0;
        my_rom[76] = 8'h0;
        my_rom[77] = 8'h0;
        my_rom[78] = 8'h0;
        my_rom[79] = 8'h0;
        my_rom[80] = 8'h0;
        my_rom[81] = 8'h0;
        my_rom[82] = 8'h0;
        my_rom[83] = 8'h0;
        my_rom[84] = 8'h0;
        my_rom[85] = 8'h0;
        my_rom[86] = 8'h0;
        my_rom[87] = 8'h0;
        my_rom[88] = 8'h0;
        my_rom[89] = 8'h0;
        my_rom[90] = 8'h0;
        my_rom[91] = 8'h0;
        my_rom[92] = 8'h0;
        my_rom[93] = 8'h0;
        my_rom[94] = 8'h0;
        my_rom[95] = 8'h0;
        my_rom[96] = 8'h0;
        my_rom[97] = 8'h0;
        my_rom[98] = 8'h0;
        my_rom[99] = 8'h0;
        my_rom[100] = 8'h0;
        my_rom[101] = 8'h0;
        my_rom[102] = 8'h0;
        my_rom[103] = 8'h0;
        my_rom[104] = 8'h0;
        my_rom[105] = 8'h0;
        my_rom[106] = 8'h0;
        my_rom[107] = 8'h0;
        my_rom[108] = 8'h0;
        my_rom[109] = 8'h0;
        my_rom[110] = 8'h0;
        my_rom[111] = 8'h0;
        my_rom[112] = 8'h0;
        my_rom[113] = 8'h0;
        my_rom[114] = 8'h0;
        my_rom[115] = 8'h0;
        my_rom[116] = 8'h0;
        my_rom[117] = 8'h0;
        my_rom[118] = 8'h0;
        my_rom[119] = 8'h0;
        my_rom[120] = 8'h0;
        my_rom[121] = 8'h0;
        my_rom[122] = 8'h0;
        my_rom[123] = 8'h0;
        my_rom[124] = 8'h0;
        my_rom[125] = 8'h0;
        my_rom[126] = 8'h0;
        my_rom[127] = 8'h0;
        my_rom[128] = 8'h0;
        my_rom[129] = 8'h0;
        my_rom[130] = 8'h0;
        my_rom[131] = 8'h0;
        my_rom[132] = 8'h0;
        my_rom[133] = 8'h0;
        my_rom[134] = 8'h0;
        my_rom[135] = 8'h0;
        my_rom[136] = 8'h0;
        my_rom[137] = 8'h0;
        my_rom[138] = 8'h0;
        my_rom[139] = 8'h0;
        my_rom[140] = 8'h0;
        my_rom[141] = 8'h0;
        my_rom[142] = 8'h0;
        my_rom[143] = 8'h0;
        my_rom[144] = 8'h0;
        my_rom[145] = 8'h0;
        my_rom[146] = 8'h0;
        my_rom[147] = 8'h0;
        my_rom[148] = 8'h0;
        my_rom[149] = 8'h0;
        my_rom[150] = 8'h0;
        my_rom[151] = 8'h0;
        my_rom[152] = 8'h0;
        my_rom[153] = 8'h0;
        my_rom[154] = 8'h0;
        my_rom[155] = 8'h0;
        my_rom[156] = 8'h0;
        my_rom[157] = 8'h0;
        my_rom[158] = 8'h0;
        my_rom[159] = 8'h0;
        my_rom[160] = 8'h0;
        my_rom[161] = 8'h0;
        my_rom[162] = 8'h0;
        my_rom[163] = 8'h0;
        my_rom[164] = 8'h0;
        my_rom[165] = 8'h0;
        my_rom[166] = 8'h0;
        my_rom[167] = 8'h0;
        my_rom[168] = 8'h0;
        my_rom[169] = 8'h0;
        my_rom[170] = 8'h0;
        my_rom[171] = 8'h0;
        my_rom[172] = 8'h0;
        my_rom[173] = 8'h0;
        my_rom[174] = 8'h0;
        my_rom[175] = 8'h0;
        my_rom[176] = 8'h0;
        my_rom[177] = 8'h0;
        my_rom[178] = 8'h0;
        my_rom[179] = 8'h0;
        my_rom[180] = 8'h0;
        my_rom[181] = 8'h0;
        my_rom[182] = 8'h0;
        my_rom[183] = 8'h0;
        my_rom[184] = 8'h0;
        my_rom[185] = 8'h0;
        my_rom[186] = 8'h0;
        my_rom[187] = 8'h0;
        my_rom[188] = 8'h0;
        my_rom[189] = 8'h0;
        my_rom[190] = 8'h0;
        my_rom[191] = 8'h0;
        my_rom[192] = 8'h0;
        my_rom[193] = 8'h0;
        my_rom[194] = 8'h0;
        my_rom[195] = 8'h0;
        my_rom[196] = 8'h0;
        my_rom[197] = 8'h0;
        my_rom[198] = 8'h0;
        my_rom[199] = 8'h0;
        my_rom[200] = 8'h0;
        my_rom[201] = 8'h0;
        my_rom[202] = 8'h0;
        my_rom[203] = 8'h0;
        my_rom[204] = 8'h0;
        my_rom[205] = 8'h0;
        my_rom[206] = 8'h0;
        my_rom[207] = 8'h0;
        my_rom[208] = 8'h0;
        my_rom[209] = 8'h0;
        my_rom[210] = 8'h0;
        my_rom[211] = 8'h0;
        my_rom[212] = 8'h0;
        my_rom[213] = 8'h0;
        my_rom[214] = 8'h0;
        my_rom[215] = 8'h0;
        my_rom[216] = 8'h0;
        my_rom[217] = 8'h0;
        my_rom[218] = 8'h0;
        my_rom[219] = 8'h0;
        my_rom[220] = 8'h0;
        my_rom[221] = 8'h0;
        my_rom[222] = 8'h0;
        my_rom[223] = 8'h0;
        my_rom[224] = 8'h0;
        my_rom[225] = 8'h0;
        my_rom[226] = 8'h0;
        my_rom[227] = 8'h0;
        my_rom[228] = 8'h0;
        my_rom[229] = 8'h0;
        my_rom[230] = 8'h0;
        my_rom[231] = 8'h0;
        my_rom[232] = 8'h0;
        my_rom[233] = 8'h0;
        my_rom[234] = 8'h0;
        my_rom[235] = 8'h0;
        my_rom[236] = 8'h0;
        my_rom[237] = 8'h0;
        my_rom[238] = 8'h0;
        my_rom[239] = 8'h0;
        my_rom[240] = 8'h0;
        my_rom[241] = 8'h0;
        my_rom[242] = 8'h0;
        my_rom[243] = 8'h0;
        my_rom[244] = 8'h0;
        my_rom[245] = 8'h0;
        my_rom[246] = 8'h0;
        my_rom[247] = 8'h0;
        my_rom[248] = 8'h0;
        my_rom[249] = 8'h0;
        my_rom[250] = 8'h0;
        my_rom[251] = 8'h0;
        my_rom[252] = 8'h0;
        my_rom[253] = 8'h0;
        my_rom[254] = 8'h0;
        my_rom[255] = 8'h0;
        my_rom[256] = 8'h0;
        my_rom[257] = 8'h0;
        my_rom[258] = 8'h0;
        my_rom[259] = 8'h0;
        my_rom[260] = 8'h0;
        my_rom[261] = 8'h0;
        my_rom[262] = 8'h0;
        my_rom[263] = 8'h0;
        my_rom[264] = 8'h0;
        my_rom[265] = 8'h0;
        my_rom[266] = 8'h0;
        my_rom[267] = 8'h0;
        my_rom[268] = 8'h0;
        my_rom[269] = 8'h0;
        my_rom[270] = 8'h0;
        my_rom[271] = 8'h0;
        my_rom[272] = 8'h0;
        my_rom[273] = 8'h0;
        my_rom[274] = 8'h0;
        my_rom[275] = 8'h0;
        my_rom[276] = 8'h0;
        my_rom[277] = 8'h0;
        my_rom[278] = 8'h0;
        my_rom[279] = 8'h0;
        my_rom[280] = 8'h0;
        my_rom[281] = 8'h0;
        my_rom[282] = 8'h0;
        my_rom[283] = 8'h0;
        my_rom[284] = 8'h0;
        my_rom[285] = 8'h0;
        my_rom[286] = 8'h0;
        my_rom[287] = 8'h0;
        my_rom[288] = 8'h0;
        my_rom[289] = 8'h0;
        my_rom[290] = 8'h0;
        my_rom[291] = 8'h0;
        my_rom[292] = 8'h0;
        my_rom[293] = 8'h0;
        my_rom[294] = 8'h0;
        my_rom[295] = 8'h0;
        my_rom[296] = 8'h0;
        my_rom[297] = 8'h0;
        my_rom[298] = 8'h0;
        my_rom[299] = 8'h0;
        my_rom[300] = 8'h0;
        my_rom[301] = 8'h0;
        my_rom[302] = 8'h0;
        my_rom[303] = 8'h0;
        my_rom[304] = 8'h0;
        my_rom[305] = 8'h0;
        my_rom[306] = 8'h0;
        my_rom[307] = 8'h0;
        my_rom[308] = 8'h0;
        my_rom[309] = 8'h0;
        my_rom[310] = 8'h0;
        my_rom[311] = 8'h0;
        my_rom[312] = 8'h0;
        my_rom[313] = 8'h0;
        my_rom[314] = 8'h0;
        my_rom[315] = 8'h0;
        my_rom[316] = 8'h0;
        my_rom[317] = 8'h0;
        my_rom[318] = 8'h0;
        my_rom[319] = 8'h0;
        my_rom[320] = 8'h0;
        my_rom[321] = 8'h0;
        my_rom[322] = 8'h0;
        my_rom[323] = 8'h0;
        my_rom[324] = 8'h0;
        my_rom[325] = 8'h0;
        my_rom[326] = 8'h0;
        my_rom[327] = 8'h0;
        my_rom[328] = 8'h0;
        my_rom[329] = 8'h0;
        my_rom[330] = 8'h0;
        my_rom[331] = 8'h0;
        my_rom[332] = 8'h0;
        my_rom[333] = 8'h0;
        my_rom[334] = 8'h0;
        my_rom[335] = 8'h0;
        my_rom[336] = 8'h0;
        my_rom[337] = 8'h0;
        my_rom[338] = 8'h0;
        my_rom[339] = 8'h0;
        my_rom[340] = 8'h0;
        my_rom[341] = 8'h0;
        my_rom[342] = 8'h0;
        my_rom[343] = 8'h0;
        my_rom[344] = 8'h0;
        my_rom[345] = 8'h0;
        my_rom[346] = 8'h0;
        my_rom[347] = 8'h0;
        my_rom[348] = 8'h0;
        my_rom[349] = 8'h0;
        my_rom[350] = 8'h0;
        my_rom[351] = 8'h0;
        my_rom[352] = 8'h0;
        my_rom[353] = 8'h0;
        my_rom[354] = 8'h0;
        my_rom[355] = 8'h0;
        my_rom[356] = 8'h0;
        my_rom[357] = 8'h0;
        my_rom[358] = 8'h0;
        my_rom[359] = 8'h0;
        my_rom[360] = 8'h0;
        my_rom[361] = 8'h0;
        my_rom[362] = 8'h0;
        my_rom[363] = 8'h0;
        my_rom[364] = 8'h0;
        my_rom[365] = 8'h0;
        my_rom[366] = 8'h0;
        my_rom[367] = 8'h0;
        my_rom[368] = 8'h0;
        my_rom[369] = 8'h0;
        my_rom[370] = 8'h0;
        my_rom[371] = 8'h0;
        my_rom[372] = 8'h0;
        my_rom[373] = 8'h0;
        my_rom[374] = 8'h0;
        my_rom[375] = 8'h0;
        my_rom[376] = 8'h0;
        my_rom[377] = 8'h0;
        my_rom[378] = 8'h0;
        my_rom[379] = 8'h0;
        my_rom[380] = 8'h0;
        my_rom[381] = 8'h0;
        my_rom[382] = 8'h0;
        my_rom[383] = 8'h0;
        my_rom[384] = 8'h0;
        my_rom[385] = 8'h0;
        my_rom[386] = 8'h0;
        my_rom[387] = 8'h0;
        my_rom[388] = 8'h0;
        my_rom[389] = 8'h0;
        my_rom[390] = 8'h0;
        my_rom[391] = 8'h0;
        my_rom[392] = 8'h0;
        my_rom[393] = 8'h0;
        my_rom[394] = 8'h0;
        my_rom[395] = 8'h0;
        my_rom[396] = 8'h0;
        my_rom[397] = 8'h0;
        my_rom[398] = 8'h0;
        my_rom[399] = 8'h0;
        my_rom[400] = 8'h0;
        my_rom[401] = 8'h0;
        my_rom[402] = 8'h0;
        my_rom[403] = 8'h0;
        my_rom[404] = 8'h0;
        my_rom[405] = 8'h0;
        my_rom[406] = 8'h0;
        my_rom[407] = 8'h0;
        my_rom[408] = 8'h0;
        my_rom[409] = 8'h0;
        my_rom[410] = 8'h0;
        my_rom[411] = 8'h0;
        my_rom[412] = 8'h0;
        my_rom[413] = 8'h0;
        my_rom[414] = 8'h0;
        my_rom[415] = 8'h0;
        my_rom[416] = 8'h0;
        my_rom[417] = 8'h0;
        my_rom[418] = 8'h0;
        my_rom[419] = 8'h0;
        my_rom[420] = 8'h0;
        my_rom[421] = 8'h0;
        my_rom[422] = 8'h0;
        my_rom[423] = 8'h0;
        my_rom[424] = 8'h0;
        my_rom[425] = 8'h0;
        my_rom[426] = 8'h0;
        my_rom[427] = 8'h0;
        my_rom[428] = 8'h0;
        my_rom[429] = 8'h0;
        my_rom[430] = 8'h0;
        my_rom[431] = 8'h0;
        my_rom[432] = 8'h0;
        my_rom[433] = 8'h0;
        my_rom[434] = 8'h0;
        my_rom[435] = 8'h0;
        my_rom[436] = 8'h0;
        my_rom[437] = 8'h0;
        my_rom[438] = 8'h0;
        my_rom[439] = 8'h0;
        my_rom[440] = 8'h0;
        my_rom[441] = 8'h0;
        my_rom[442] = 8'h0;
        my_rom[443] = 8'h0;
        my_rom[444] = 8'h0;
        my_rom[445] = 8'h0;
        my_rom[446] = 8'h0;
        my_rom[447] = 8'h0;
        my_rom[448] = 8'h0;
        my_rom[449] = 8'h0;
        my_rom[450] = 8'h0;
        my_rom[451] = 8'h0;
        my_rom[452] = 8'h0;
        my_rom[453] = 8'h0;
        my_rom[454] = 8'h0;
        my_rom[455] = 8'h0;
        my_rom[456] = 8'h0;
        my_rom[457] = 8'h0;
        my_rom[458] = 8'h0;
        my_rom[459] = 8'h0;
        my_rom[460] = 8'h0;
        my_rom[461] = 8'h0;
        my_rom[462] = 8'h0;
        my_rom[463] = 8'h0;
        my_rom[464] = 8'h0;
        my_rom[465] = 8'h0;
        my_rom[466] = 8'h0;
        my_rom[467] = 8'h0;
        my_rom[468] = 8'h0;
        my_rom[469] = 8'h0;
        my_rom[470] = 8'h0;
        my_rom[471] = 8'h0;
        my_rom[472] = 8'h0;
        my_rom[473] = 8'h0;
        my_rom[474] = 8'h0;
        my_rom[475] = 8'h0;
        my_rom[476] = 8'h0;
        my_rom[477] = 8'h0;
        my_rom[478] = 8'h0;
        my_rom[479] = 8'h0;
        my_rom[480] = 8'h0;
        my_rom[481] = 8'h0;
        my_rom[482] = 8'h0;
        my_rom[483] = 8'h0;
        my_rom[484] = 8'h0;
        my_rom[485] = 8'h0;
        my_rom[486] = 8'h0;
        my_rom[487] = 8'h0;
        my_rom[488] = 8'h0;
        my_rom[489] = 8'h0;
        my_rom[490] = 8'h0;
        my_rom[491] = 8'h0;
        my_rom[492] = 8'h0;
        my_rom[493] = 8'h0;
        my_rom[494] = 8'h0;
        my_rom[495] = 8'h0;
        my_rom[496] = 8'h0;
        my_rom[497] = 8'h0;
        my_rom[498] = 8'h0;
        my_rom[499] = 8'h0;
        my_rom[500] = 8'h0;
        my_rom[501] = 8'h0;
        my_rom[502] = 8'h0;
        my_rom[503] = 8'h0;
        my_rom[504] = 8'h0;
        my_rom[505] = 8'h0;
        my_rom[506] = 8'h0;
        my_rom[507] = 8'h0;
        my_rom[508] = 8'h0;
        my_rom[509] = 8'h0;
        my_rom[510] = 8'h0;
        my_rom[511] = 8'h0;
        my_rom[512] = 8'h0;
        my_rom[513] = 8'h0;
        my_rom[514] = 8'h0;
        my_rom[515] = 8'h0;
        my_rom[516] = 8'h0;
        my_rom[517] = 8'h0;
        my_rom[518] = 8'h0;
        my_rom[519] = 8'h0;
        my_rom[520] = 8'h0;
        my_rom[521] = 8'h0;
        my_rom[522] = 8'h0;
        my_rom[523] = 8'h0;
        my_rom[524] = 8'h0;
        my_rom[525] = 8'h0;
        my_rom[526] = 8'h0;
        my_rom[527] = 8'h0;
        my_rom[528] = 8'h0;
        my_rom[529] = 8'h0;
        my_rom[530] = 8'h0;
        my_rom[531] = 8'h0;
        my_rom[532] = 8'h0;
        my_rom[533] = 8'h0;
        my_rom[534] = 8'h0;
        my_rom[535] = 8'h0;
        my_rom[536] = 8'h0;
        my_rom[537] = 8'h0;
        my_rom[538] = 8'h0;
        my_rom[539] = 8'h0;
        my_rom[540] = 8'h0;
        my_rom[541] = 8'h0;
        my_rom[542] = 8'h0;
        my_rom[543] = 8'h0;
        my_rom[544] = 8'h0;
        my_rom[545] = 8'h0;
        my_rom[546] = 8'h0;
        my_rom[547] = 8'h0;
        my_rom[548] = 8'h0;
        my_rom[549] = 8'h0;
        my_rom[550] = 8'h0;
        my_rom[551] = 8'h0;
        my_rom[552] = 8'h0;
        my_rom[553] = 8'h0;
        my_rom[554] = 8'h0;
        my_rom[555] = 8'h0;
        my_rom[556] = 8'h0;
        my_rom[557] = 8'h0;
        my_rom[558] = 8'h0;
        my_rom[559] = 8'h0;
        my_rom[560] = 8'h0;
        my_rom[561] = 8'h0;
        my_rom[562] = 8'h0;
        my_rom[563] = 8'h0;
        my_rom[564] = 8'h0;
        my_rom[565] = 8'h0;
        my_rom[566] = 8'h0;
        my_rom[567] = 8'h0;
        my_rom[568] = 8'h0;
        my_rom[569] = 8'h0;
        my_rom[570] = 8'h0;
        my_rom[571] = 8'h0;
        my_rom[572] = 8'h0;
        my_rom[573] = 8'h0;
        my_rom[574] = 8'h0;
        my_rom[575] = 8'h0;
        my_rom[576] = 8'h0;
        my_rom[577] = 8'h0;
        my_rom[578] = 8'h0;
        my_rom[579] = 8'h0;
        my_rom[580] = 8'h0;
        my_rom[581] = 8'h0;
        my_rom[582] = 8'h0;
        my_rom[583] = 8'h0;
        my_rom[584] = 8'h0;
        my_rom[585] = 8'h0;
        my_rom[586] = 8'h0;
        my_rom[587] = 8'h0;
        my_rom[588] = 8'h0;
        my_rom[589] = 8'h0;
        my_rom[590] = 8'h0;
        my_rom[591] = 8'h0;
        my_rom[592] = 8'h0;
        my_rom[593] = 8'h0;
        my_rom[594] = 8'h0;
        my_rom[595] = 8'h0;
        my_rom[596] = 8'h0;
        my_rom[597] = 8'h0;
        my_rom[598] = 8'h0;
        my_rom[599] = 8'h0;
        my_rom[600] = 8'h0;
        my_rom[601] = 8'h0;
        my_rom[602] = 8'h0;
        my_rom[603] = 8'h0;
        my_rom[604] = 8'h0;
        my_rom[605] = 8'h0;
        my_rom[606] = 8'h0;
        my_rom[607] = 8'h0;
        my_rom[608] = 8'h0;
        my_rom[609] = 8'h0;
        my_rom[610] = 8'h0;
        my_rom[611] = 8'h0;
        my_rom[612] = 8'h0;
        my_rom[613] = 8'h0;
        my_rom[614] = 8'h0;
        my_rom[615] = 8'h0;
        my_rom[616] = 8'h0;
        my_rom[617] = 8'h0;
        my_rom[618] = 8'h0;
        my_rom[619] = 8'h0;
        my_rom[620] = 8'h0;
        my_rom[621] = 8'h0;
        my_rom[622] = 8'h0;
        my_rom[623] = 8'h0;
        my_rom[624] = 8'h0;
        my_rom[625] = 8'h0;
        my_rom[626] = 8'h0;
        my_rom[627] = 8'h0;
        my_rom[628] = 8'h0;
        my_rom[629] = 8'h0;
        my_rom[630] = 8'h0;
        my_rom[631] = 8'h0;
        my_rom[632] = 8'h0;
        my_rom[633] = 8'h0;
        my_rom[634] = 8'h0;
        my_rom[635] = 8'h0;
        my_rom[636] = 8'h0;
        my_rom[637] = 8'h0;
        my_rom[638] = 8'h0;
        my_rom[639] = 8'h0;
        my_rom[640] = 8'h0;
        my_rom[641] = 8'h0;
        my_rom[642] = 8'h0;
        my_rom[643] = 8'h0;
        my_rom[644] = 8'h0;
        my_rom[645] = 8'h0;
        my_rom[646] = 8'h0;
        my_rom[647] = 8'h0;
        my_rom[648] = 8'h0;
        my_rom[649] = 8'h0;
        my_rom[650] = 8'h0;
        my_rom[651] = 8'h0;
        my_rom[652] = 8'h0;
        my_rom[653] = 8'h0;
        my_rom[654] = 8'h0;
        my_rom[655] = 8'h0;
        my_rom[656] = 8'h0;
        my_rom[657] = 8'h0;
        my_rom[658] = 8'h0;
        my_rom[659] = 8'h0;
        my_rom[660] = 8'h0;
        my_rom[661] = 8'h0;
        my_rom[662] = 8'h0;
        my_rom[663] = 8'h0;
        my_rom[664] = 8'h0;
        my_rom[665] = 8'h0;
        my_rom[666] = 8'h0;
        my_rom[667] = 8'h0;
        my_rom[668] = 8'h0;
        my_rom[669] = 8'h0;
        my_rom[670] = 8'h0;
        my_rom[671] = 8'h0;
        my_rom[672] = 8'h0;
        my_rom[673] = 8'h0;
        my_rom[674] = 8'h0;
        my_rom[675] = 8'h0;
        my_rom[676] = 8'h0;
        my_rom[677] = 8'h0;
        my_rom[678] = 8'h0;
        my_rom[679] = 8'h0;
        my_rom[680] = 8'h0;
        my_rom[681] = 8'h0;
        my_rom[682] = 8'h0;
        my_rom[683] = 8'h0;
        my_rom[684] = 8'h0;
        my_rom[685] = 8'h0;
        my_rom[686] = 8'h0;
        my_rom[687] = 8'h0;
        my_rom[688] = 8'h0;
        my_rom[689] = 8'h0;
        my_rom[690] = 8'h0;
        my_rom[691] = 8'h0;
        my_rom[692] = 8'h0;
        my_rom[693] = 8'h0;
        my_rom[694] = 8'h0;
        my_rom[695] = 8'h0;
        my_rom[696] = 8'h0;
        my_rom[697] = 8'h0;
        my_rom[698] = 8'h0;
        my_rom[699] = 8'h0;
        my_rom[700] = 8'h0;
        my_rom[701] = 8'h0;
        my_rom[702] = 8'h0;
        my_rom[703] = 8'h0;
        my_rom[704] = 8'h0;
        my_rom[705] = 8'h0;
        my_rom[706] = 8'h0;
        my_rom[707] = 8'h0;
        my_rom[708] = 8'h0;
        my_rom[709] = 8'h0;
        my_rom[710] = 8'h0;
        my_rom[711] = 8'h0;
        my_rom[712] = 8'h0;
        my_rom[713] = 8'h0;
        my_rom[714] = 8'h0;
        my_rom[715] = 8'h0;
        my_rom[716] = 8'h0;
        my_rom[717] = 8'h0;
        my_rom[718] = 8'h0;
        my_rom[719] = 8'h0;
        my_rom[720] = 8'h0;
        my_rom[721] = 8'h0;
        my_rom[722] = 8'h0;
        my_rom[723] = 8'h0;
        my_rom[724] = 8'h0;
        my_rom[725] = 8'h0;
        my_rom[726] = 8'h0;
        my_rom[727] = 8'h0;
        my_rom[728] = 8'h0;
        my_rom[729] = 8'h0;
        my_rom[730] = 8'h0;
        my_rom[731] = 8'h0;
        my_rom[732] = 8'h0;
        my_rom[733] = 8'h0;
        my_rom[734] = 8'h0;
        my_rom[735] = 8'h0;
        my_rom[736] = 8'h0;
        my_rom[737] = 8'h0;
        my_rom[738] = 8'h0;
        my_rom[739] = 8'h0;
        my_rom[740] = 8'h0;
        my_rom[741] = 8'h0;
        my_rom[742] = 8'h0;
        my_rom[743] = 8'h0;
        my_rom[744] = 8'h0;
        my_rom[745] = 8'h0;
        my_rom[746] = 8'h0;
        my_rom[747] = 8'h0;
        my_rom[748] = 8'h0;
        my_rom[749] = 8'h0;
        my_rom[750] = 8'h0;
        my_rom[751] = 8'h0;
        my_rom[752] = 8'h0;
        my_rom[753] = 8'h0;
        my_rom[754] = 8'h0;
        my_rom[755] = 8'h0;
        my_rom[756] = 8'h0;
        my_rom[757] = 8'h0;
        my_rom[758] = 8'h0;
        my_rom[759] = 8'h0;
        my_rom[760] = 8'h0;
        my_rom[761] = 8'h0;
        my_rom[762] = 8'h0;
        my_rom[763] = 8'h0;
        my_rom[764] = 8'h0;
        my_rom[765] = 8'h0;
        my_rom[766] = 8'h0;
        my_rom[767] = 8'h0;
        my_rom[768] = 8'h0;
        my_rom[769] = 8'h0;
        my_rom[770] = 8'h0;
        my_rom[771] = 8'h0;
        my_rom[772] = 8'h0;
        my_rom[773] = 8'h0;
        my_rom[774] = 8'h0;
        my_rom[775] = 8'h0;
        my_rom[776] = 8'h0;
        my_rom[777] = 8'h0;
        my_rom[778] = 8'h0;
        my_rom[779] = 8'h0;
        my_rom[780] = 8'h0;
        my_rom[781] = 8'h0;
        my_rom[782] = 8'h0;
        my_rom[783] = 8'h0;
        my_rom[784] = 8'h0;
        my_rom[785] = 8'h0;
        my_rom[786] = 8'h0;
        my_rom[787] = 8'h0;
        my_rom[788] = 8'h0;
        my_rom[789] = 8'h0;
        my_rom[790] = 8'h0;
        my_rom[791] = 8'h0;
        my_rom[792] = 8'h0;
        my_rom[793] = 8'h0;
        my_rom[794] = 8'h0;
        my_rom[795] = 8'h0;
        my_rom[796] = 8'h0;
        my_rom[797] = 8'h0;
        my_rom[798] = 8'h0;
        my_rom[799] = 8'h0;
        my_rom[800] = 8'h0;
        my_rom[801] = 8'h0;
        my_rom[802] = 8'h0;
        my_rom[803] = 8'h0;
        my_rom[804] = 8'h0;
        my_rom[805] = 8'h0;
        my_rom[806] = 8'h0;
        my_rom[807] = 8'h0;
        my_rom[808] = 8'h0;
        my_rom[809] = 8'h0;
        my_rom[810] = 8'h0;
        my_rom[811] = 8'h0;
        my_rom[812] = 8'h0;
        my_rom[813] = 8'h0;
        my_rom[814] = 8'h0;
        my_rom[815] = 8'h0;
        my_rom[816] = 8'h0;
        my_rom[817] = 8'h0;
        my_rom[818] = 8'h0;
        my_rom[819] = 8'h0;
        my_rom[820] = 8'h0;
        my_rom[821] = 8'h0;
        my_rom[822] = 8'h0;
        my_rom[823] = 8'h0;
        my_rom[824] = 8'h0;
        my_rom[825] = 8'h0;
        my_rom[826] = 8'h0;
        my_rom[827] = 8'h0;
        my_rom[828] = 8'h0;
        my_rom[829] = 8'h0;
        my_rom[830] = 8'h0;
        my_rom[831] = 8'h0;
        my_rom[832] = 8'h0;
        my_rom[833] = 8'h0;
        my_rom[834] = 8'h0;
        my_rom[835] = 8'h0;
        my_rom[836] = 8'h0;
        my_rom[837] = 8'h0;
        my_rom[838] = 8'h0;
        my_rom[839] = 8'h0;
        my_rom[840] = 8'h0;
        my_rom[841] = 8'h0;
        my_rom[842] = 8'h0;
        my_rom[843] = 8'h0;
        my_rom[844] = 8'h0;
        my_rom[845] = 8'h0;
        my_rom[846] = 8'h0;
        my_rom[847] = 8'h0;
        my_rom[848] = 8'h0;
        my_rom[849] = 8'h0;
        my_rom[850] = 8'h0;
        my_rom[851] = 8'h0;
        my_rom[852] = 8'h0;
        my_rom[853] = 8'h0;
        my_rom[854] = 8'h0;
        my_rom[855] = 8'h0;
        my_rom[856] = 8'h0;
        my_rom[857] = 8'h0;
        my_rom[858] = 8'h0;
        my_rom[859] = 8'h0;
        my_rom[860] = 8'h0;
        my_rom[861] = 8'h0;
        my_rom[862] = 8'h0;
        my_rom[863] = 8'h0;
        my_rom[864] = 8'h0;
        my_rom[865] = 8'h0;
        my_rom[866] = 8'h0;
        my_rom[867] = 8'h0;
        my_rom[868] = 8'h0;
        my_rom[869] = 8'h0;
        my_rom[870] = 8'h0;
        my_rom[871] = 8'h0;
        my_rom[872] = 8'h0;
        my_rom[873] = 8'h0;
        my_rom[874] = 8'h0;
        my_rom[875] = 8'h0;
        my_rom[876] = 8'h0;
        my_rom[877] = 8'h0;
        my_rom[878] = 8'h0;
        my_rom[879] = 8'h0;
        my_rom[880] = 8'h0;
        my_rom[881] = 8'h0;
        my_rom[882] = 8'h0;
        my_rom[883] = 8'h0;
        my_rom[884] = 8'h0;
        my_rom[885] = 8'h0;
        my_rom[886] = 8'h0;
        my_rom[887] = 8'h0;
        my_rom[888] = 8'h0;
        my_rom[889] = 8'h0;
        my_rom[890] = 8'h0;
        my_rom[891] = 8'h0;
        my_rom[892] = 8'h0;
        my_rom[893] = 8'h0;
        my_rom[894] = 8'h0;
        my_rom[895] = 8'h0;
        my_rom[896] = 8'h0;
        my_rom[897] = 8'h0;
        my_rom[898] = 8'h0;
        my_rom[899] = 8'h0;
        my_rom[900] = 8'h0;
        my_rom[901] = 8'h0;
        my_rom[902] = 8'h0;
        my_rom[903] = 8'h0;
        my_rom[904] = 8'h0;
        my_rom[905] = 8'h0;
        my_rom[906] = 8'h0;
        my_rom[907] = 8'h0;
        my_rom[908] = 8'h0;
        my_rom[909] = 8'h0;
        my_rom[910] = 8'h0;
        my_rom[911] = 8'h0;
        my_rom[912] = 8'h0;
        my_rom[913] = 8'h0;
        my_rom[914] = 8'h0;
        my_rom[915] = 8'h0;
        my_rom[916] = 8'h0;
        my_rom[917] = 8'h0;
        my_rom[918] = 8'h0;
        my_rom[919] = 8'h0;
        my_rom[920] = 8'h0;
        my_rom[921] = 8'h0;
        my_rom[922] = 8'h0;
        my_rom[923] = 8'h0;
        my_rom[924] = 8'h0;
        my_rom[925] = 8'h0;
        my_rom[926] = 8'h0;
        my_rom[927] = 8'h0;
        my_rom[928] = 8'h0;
        my_rom[929] = 8'h0;
        my_rom[930] = 8'h0;
        my_rom[931] = 8'h0;
        my_rom[932] = 8'h0;
        my_rom[933] = 8'h0;
        my_rom[934] = 8'h0;
        my_rom[935] = 8'h0;
        my_rom[936] = 8'h0;
        my_rom[937] = 8'h0;
        my_rom[938] = 8'h0;
        my_rom[939] = 8'h0;
        my_rom[940] = 8'h0;
        my_rom[941] = 8'h0;
        my_rom[942] = 8'h0;
        my_rom[943] = 8'h0;
        my_rom[944] = 8'h0;
        my_rom[945] = 8'h0;
        my_rom[946] = 8'h0;
        my_rom[947] = 8'h0;
        my_rom[948] = 8'h0;
        my_rom[949] = 8'h0;
        my_rom[950] = 8'h0;
        my_rom[951] = 8'h0;
        my_rom[952] = 8'h0;
        my_rom[953] = 8'h0;
        my_rom[954] = 8'h0;
        my_rom[955] = 8'h0;
        my_rom[956] = 8'h0;
        my_rom[957] = 8'h0;
        my_rom[958] = 8'h0;
        my_rom[959] = 8'h0;
        my_rom[960] = 8'h0;
        my_rom[961] = 8'h0;
        my_rom[962] = 8'h0;
        my_rom[963] = 8'h0;
        my_rom[964] = 8'h0;
        my_rom[965] = 8'h0;
        my_rom[966] = 8'h0;
        my_rom[967] = 8'h0;
        my_rom[968] = 8'h0;
        my_rom[969] = 8'h0;
        my_rom[970] = 8'h0;
        my_rom[971] = 8'h0;
        my_rom[972] = 8'h0;
        my_rom[973] = 8'h0;
        my_rom[974] = 8'h0;
        my_rom[975] = 8'h0;
        my_rom[976] = 8'h0;
        my_rom[977] = 8'h0;
        my_rom[978] = 8'h0;
        my_rom[979] = 8'h0;
        my_rom[980] = 8'h0;
        my_rom[981] = 8'h0;
        my_rom[982] = 8'h0;
        my_rom[983] = 8'h0;
        my_rom[984] = 8'h0;
        my_rom[985] = 8'h0;
        my_rom[986] = 8'h0;
        my_rom[987] = 8'h0;
        my_rom[988] = 8'h0;
        my_rom[989] = 8'h0;
        my_rom[990] = 8'h0;
        my_rom[991] = 8'h0;
        my_rom[992] = 8'h0;
        my_rom[993] = 8'h0;
        my_rom[994] = 8'h0;
        my_rom[995] = 8'h0;
        my_rom[996] = 8'h0;
        my_rom[997] = 8'h0;
        my_rom[998] = 8'h0;
        my_rom[999] = 8'h0;
        my_rom[1000] = 8'h0;
        my_rom[1001] = 8'h0;
        my_rom[1002] = 8'h0;
        my_rom[1003] = 8'h0;
        my_rom[1004] = 8'h0;
        my_rom[1005] = 8'h0;
        my_rom[1006] = 8'h0;
        my_rom[1007] = 8'h0;
        my_rom[1008] = 8'h0;
        my_rom[1009] = 8'h0;
        my_rom[1010] = 8'h0;
        my_rom[1011] = 8'h0;
        my_rom[1012] = 8'h0;
        my_rom[1013] = 8'h0;
        my_rom[1014] = 8'h0;
        my_rom[1015] = 8'h0;
        my_rom[1016] = 8'h4;
        my_rom[1017] = 8'hfc;
        my_rom[1018] = 8'h2;
        my_rom[1019] = 8'hfc;
        my_rom[1020] = 8'h9;
        my_rom[1021] = 8'hfc;
        my_rom[1022] = 8'h0;
        my_rom[1023] = 8'hfc;
    end
endmodule


module CE_BUFFER (
  input [7:0] I, // Input
  input E, // Enable
  output [7:0] Q // Output

);
  Mux_2x1_NBits #(
    .Bits(8)
  )
  Mux_2x1_NBits_i0 (
    .sel( E ),
    .in_0( 8'b0 ),
    .in_1( I ),
    .out( Q )
  );
endmodule

module CE_M_MAIN (
  input C,
  output [7:0] OUT,
  output C_OUT,
  output WR_OUT
);
  wire s0;
  wire s1;
  wire [9:0] s2;
  wire [7:0] s3;
  wire [8:0] s4;
  wire [7:0] DO;
  wire s5;
  wire C_OUT_temp;
  wire [7:0] s6;
  wire RD;
  wire WR;
  wire s7;
  wire s8;
  wire [7:0] OUT_temp;
  wire [7:0] DI;
  wire [15:0] ADDR;
  wire s9;
  wire s10;
  wire s11;
  wire s12;
  wire [15:0] s13;
  wire s14;
  wire s15;
  wire [7:0] s16;
  wire [7:0] s17;
  wire [7:0] s18;
  wire s19;
  wire s20;
  wire s21;
  wire s22;
  wire nCLK;
  DIG_Counter_Nbit #(
    .Bits(16)
  )
  DIG_Counter_Nbit_i0 (
    .en( 1'b1 ),
    .C( C ),
    .clr( 1'b0 ),
    .out( s13 )
  );
  assign C_OUT_temp = s13[0];
  assign nCLK = ~ C_OUT_temp;
  // RAM
  DIG_BlockRAMDualPort #(
    .Bits(8),
    .AddrBits(9)
  )
  DIG_BlockRAMDualPort_i1 (
    .A( s4 ),
    .Din( DO ),
    .str( s5 ),
    .C( C_OUT_temp ),
    .D( s6 )
  );
  assign s0 = (s7 & C_OUT_temp);
  // OUTP
  DIG_Register_BUS #(
    .Bits(8)
  )
  DIG_Register_BUS_i2 (
    .D( DO ),
    .C( C_OUT_temp ),
    .en( s8 ),
    .Q( OUT_temp )
  );
  CE_M_CPU CE_M_CPU_i3 (
    .R_CPU( s7 ),
    .C_CPU( C_OUT_temp ),
    .DI_CPU( DI ),
    .nIRQ_CPU( 1'b1 ),
    .nNMI_CPU( 1'b1 ),
    .nABT_CPU( 1'b1 ),
    .nSOB_CPU( 1'b1 ),
    .nRDY_CPU( 1'b1 ),
    .BE_CPU( 1'b1 ),
    .DO_CPU( DO ),
    .AO_CPU( ADDR ),
    .RnW_CPU( RD ),
    .VDA_CPU( s9 ),
    .VPA_CPU( WR_OUT ),
    .VBA_CPU( s10 ),
    .VSA_CPU( s11 ),
    .VVA_CPU( s12 )
  );
  DIG_Counter_Nbit #(
    .Bits(2)
  )
  DIG_Counter_Nbit_i4 (
    .en( 1'b1 ),
    .C( s0 ),
    .clr( 1'b0 ),
    .ovf( s1 )
  );
  assign WR = ~ RD;
  assign s14 = (ADDR[10] & ADDR[11] & ADDR[12] & ADDR[13] & ADDR[14] & ADDR[15] & RD);
  CompUnsigned #(
    .Bits(16)
  )
  CompUnsigned_i5 (
    .a( ADDR ),
    .b( 16'b1101111100000000 ),
    .\= ( s15 )
  );
  assign s2 = ADDR[9:0];
  assign s4 = ADDR[8:0];
  // PRG
  DIG_ROM_1024X8_PRG DIG_ROM_1024X8_PRG_i6 (
    .A( s2 ),
    .sel( 1'b1 ),
    .D( s3 )
  );
  assign s7 = ~ s1;
  assign s5 = (WR & ~ s15);
  assign s8 = (s15 & WR);
  assign s21 = (RD & s15);
  assign s22 = ~ s15;
  CE_BUFFER CE_BUFFER_i7 (
    .I( OUT_temp ),
    .E( s21 ),
    .Q( s18 )
  );
  assign s19 = (~ s14 & s22);
  assign s20 = (s22 & s14);
  CE_BUFFER CE_BUFFER_i8 (
    .I( s6 ),
    .E( s19 ),
    .Q( s16 )
  );
  CE_BUFFER CE_BUFFER_i9 (
    .I( s3 ),
    .E( s20 ),
    .Q( s17 )
  );
  assign DI = (s16 | s17 | s18);
  assign OUT = OUT_temp;
  assign C_OUT = C_OUT_temp;
endmodule
